{
  "version": 3,
  "sources": ["<stdin>", "../src/entry.server.tsx", "../src/root.tsx", "../src/bridge/ui/Link.tsx", "../src/ui/components/search/search-bar.tsx", "../src/ui/app-context/provider.tsx", "../src/use-cases/LanguageAndMarket.ts", "../src/ui/app-context/reducer.ts", "../src/use-cases/contracts/Currency.ts", "../src/use-cases/checkout/pricing.ts", "../src/ui/lib/pricing/pricing-component.tsx", "../src/use-cases/mapper/api-mappers.ts", "../src/use-cases/mapper/API/fetchDocumentToStory.ts", "../src/use-cases/mapper/API/fetchFolderToCategory.ts", "../src/use-cases/mapper/API/fetchFolderWithChildrenToCategoryWithChildren.ts", "../src/use-cases/mapper/API/fetchFooterToFooter.ts", "../src/use-cases/mapper/API/fetchLandingPageToLandingPage.ts", "../src/use-cases/mapper/API/fetchNavigationToTree.ts", "../src/use-cases/mapper/API/fetchProductToProduct.ts", "../src/use-cases/mapper/API/fetchShopToShop.ts", "../src/use-cases/mapper/API/fetchVoucherToVoucher.ts", "../src/use-cases/mapper/API/fetchMetadataToMeta.ts", "../src/use-cases/mapper/API/searchByTopicProductToProductSlim.ts", "../src/use-cases/mapper/API/searchProductToProductSlim.ts", "../src/use-cases/mapper/Object/AnyIemToGrid.ts", "../src/use-cases/mapper/Object/APIImageToImage.ts", "../src/use-cases/mapper/Object/APIMetaSEOComponentToSEO.ts", "../src/use-cases/mapper/Object/APIPriceVariantsToPriceVariant.ts", "../src/use-cases/mapper/Object/APIProductVariantToProductVariant.ts", "../src/use-cases/mapper/Object/APIVideoToVideo.ts", "../src/use-cases/mapper/index.ts", "../src/ui/components/price.tsx", "../src/use-cases/crystallize/read/search.ts", "../src/ui/hooks/useLocalCart.ts", "../src/ui/components/layout/basket-button.tsx", "../src/ui/components/layout/topic-navigation.tsx", "../src/ui/components/layout/header.tsx", "../src/ui/components/layout/language-switcher.tsx", "../src/ui/lib/tenant-logo.tsx", "../src/bridge/ui/useLocation.ts", "../src/ui/components/layout/footer.tsx", "../src/use-cases/storefront.server.ts", "../src/use-cases/storage.server.ts", "../src/use-cases/crystallize/read/fetchLandingPage.ts", "../src/use-cases/crystallize/read/fetchDocument.ts", "../src/use-cases/crystallize/read/fetchFolder.ts", "../src/use-cases/crystallize/read/fetchHierarchy.ts", "../src/use-cases/crystallize/read/fetchNavigation.ts", "../src/use-cases/crystallize/read/fetchPriceRangeAndAttributes.ts", "../src/use-cases/crystallize/read/fetchProduct.ts", "../src/use-cases/crystallize/read/fetchTenantConfig.ts", "../src/use-cases/crystallize/read/fetchFooter.ts", "../src/use-cases/crystallize/read/searchByTopic.ts", "../src/use-cases/crystallize/read/searchFilteredByPriceRange.ts", "../src/use-cases/crystallize/read/searchOrderBy.ts", "../src/use-cases/crystallize/read/searchOrderByPriceRange.ts", "../src/use-cases/crystallize/read/fetchFolderWithChildren.ts", "../src/use-cases/crystallize/read/fetchVoucher.ts", "../src/use-cases/crystallize/read/fetchMetadata.ts", "../src/use-cases/crystallize/read/fetchShapeIdentifier.ts", "../src/use-cases/crystallize/read/index.ts", "../src/use-cases/http/cache.ts", "../src/use-cases/http/utils.ts", "../src/routes/$langstore/favicon/$size[.png].ts", "../src/core/favicon.server.tsx", "../src/use-cases/services.server.ts", "../src/use-cases/fetchTranslations.server.ts", "../src/ui/components/error.tsx", "../src/routes/$langstore/api/payment/$provider.payment-methods.tsx", "../src/use-cases/payments/montonio/fetchAvailableBanks.ts", "../src/routes/$langstore/api/shipping/$provider.pickup-points.ts", "../src/use-cases/payments/montonio/fetchPickupPoints.ts", "../src/routes/$langstore/api/payment/crystal.$type.confirmed.tsx", "../src/use-cases/crystallize/write/pushOrder.ts", "../src/use-cases/crystallize/write/pushCustomerIfMissing.ts", "../src/use-cases/crystallize/write/pushCrystalPaidOrder.ts", "../src/routes/api/webhook/payment/vipps.v2.payments.$cartId.tsx", "../src/use-cases/payments/vipps/receiveExpressCheckoutEvent.ts", "../src/use-cases/payments/vipps/handlePaymentAuthorized.ts", "../src/use-cases/crystallize/write/pushVippsAuthorisedOrder.ts", "../src/use-cases/polling.ts", "../src/routes/$langstore/api/magicklink/confirm.$token.tsx", "../src/core/cookies.server.ts", "../src/use-cases/user/handleMagickLink.ts", "../src/routes/$langstore/api/payment/$provider.buynow.tsx", "../src/use-cases/payments/vipps/initiateBuyNowPayment.ts", "../src/use-cases/checkout/cart.ts", "../src/use-cases/checkout/discount.ts", "../src/use-cases/marketIdentifiersForUser.ts", "../src/use-cases/checkout/handleSaveCart.ts", "../src/use-cases/checkout/handlePlaceCart.ts", "../src/routes/$langstore/api/payment/$provider.create.tsx", "../src/use-cases/payments/klarna/initiatePayment.ts", "../src/use-cases/payments/klarna/utils.ts", "../src/use-cases/payments/stripe/initiatePayment.ts", "../src/use-cases/payments/quickpay/initiatePayment.ts", "../src/use-cases/payments/razorpay/initiatePayment.ts", "../src/use-cases/payments/montonio/initiatePayment.ts", "../src/use-cases/payments/adyen/initiatePayment.ts", "../src/use-cases/payments/vipps/initiatePayment.ts", "../src/use-cases/payments/vipps/receivePaymentEvent.ts", "../src/routes/$langstore/shop/$folder.$product[.]pdf.tsx", "../src/ui/components/pdf/single-product.tsx", "../src/ui/components/pdf/styles.js", "../src/ui/components/pdf/shared.tsx", "../src/use-cases/dataFetcherForShapePage.server.ts", "../src/core/authentication.server.ts", "../src/routes/api/webhook/payment/razorpay.verify.tsx", "../src/use-cases/payments/razorpay/receivePaymentEvent.ts", "../src/routes/$langstore/api/magicklink/register.tsx", "../src/use-cases/user/sendMagickLink.ts", "../src/routes/$langstore/order/invoice.$id[.]pdf.tsx", "../src/ui/components/pdf/order-invoice.tsx", "../src/routes/api/webhook/payment/klarna.$cartId.tsx", "../src/use-cases/payments/klarna/receivePaymentEvent.ts", "../src/routes/$langstore/shop/$folder.$product.tsx", "../src/use-cases/MicrodataBuilder.ts", "../src/ui/pages/Product.tsx", "../src/ui/components/add-to-cart-button.tsx", "../src/use-cases/service-api/index.ts", "../src/use-cases/service-api/payments/crystal.ts", "../src/ui/components/image-gallery.tsx", "../src/ui/components/item/product.tsx", "../src/ui/components/product/dimensions-table.tsx", "../src/ui/components/crystallize-components/paragraph-collection.tsx", "../src/ui/components/crystallize-components/properties-table.tsx", "../src/ui/components/product/files.tsx", "../src/ui/components/product/product-body.tsx", "../src/ui/components/product/stock-location.tsx", "../src/ui/components/product/topic-labels.tsx", "../src/ui/components/variant-selector.tsx", "../src/use-cases/SchemaMarkupBuilder.ts", "../src/routes/api/webhook/order/stage/changed.tsx", "../src/use-cases/payments/vipps/vippsPipelineChanges.ts", "../src/routes/$langstore/shop/$folder[.]pdf.tsx", "../src/ui/components/pdf/folder.tsx", "../src/routes/$langstore/api/vipps/connect.tsx", "../src/use-cases/user/handleVippsLogin.ts", "../src/routes/api/webhook/payment/montonio.tsx", "../src/use-cases/payments/montonio/receivePaymentEvent.ts", "../src/use-cases/payments/montonio/createShipment.ts", "../src/use-cases/payments/montonio/fetchShipmentLabelUrl.ts", "../src/routes/api/webhook/payment/quickpay.tsx", "../src/use-cases/payments/quickpay/receivePaymentEvent.ts", "../src/routes/$langstore/api/orders/index.tsx", "../src/core/bridge/privateJson.server.ts", "../src/routes/api/webhook/payment/intent.tsx", "../src/routes/api/webhook/payment/stripe.tsx", "../src/use-cases/payments/stripe/receivePaymentEvent.ts", "../src/routes/$langstore/api/cart/index.tsx", "../src/routes/$langstore/api/cart/place.tsx", "../src/routes/$langstore/api/orders/$id.tsx", "../src/routes/$langstore/cancel-payment.tsx", "../src/ui/hooks/useRemoteCart.ts", "../src/ui/components/clone-cart-button.tsx", "../src/ui/pages/CancelPayment.tsx", "../src/routes/$langstore/order/cart.$id.tsx", "../src/ui/pages/OrderPlacedCart.tsx", "../src/bridge/ui/useNavigate.ts", "../src/routes/$langstore/stories/$story.tsx", "../src/ui/pages/CuratedStory.tsx", "../src/ui/components/curated-product-item.tsx", "../src/ui/pages/Story.tsx", "../src/ui/components/related-document.tsx", "../src/ui/pages/AbstractStory.tsx", "../src/routes/api/webhook/order/created.tsx", "../src/use-cases/user/sendOrderCreatedReceipt.ts", "../src/routes/api/webhook/payment/adyen.tsx", "../src/use-cases/payments/adyen/receivePaymentEvent.ts", "../src/routes/$langstore/stories/index.tsx", "../src/ui/components/item/document.tsx", "../src/ui/components/item/curated-product.tsx", "../src/ui/pages/Stories.tsx", "../src/routes/$langstore/api/cart/$id.tsx", "../src/routes/$langstore/shop/$folder.tsx", "../src/bridge/ui/Form.tsx", "../src/bridge/ui/useSubmit.tsx", "../src/ui/components/search/price-range-filter.tsx", "../src/ui/components/search/attribute-filter.tsx", "../src/bridge/ui/useSearchParams.ts", "../src/ui/components/search/index.tsx", "../src/ui/components/search/filtered-products.tsx", "../src/ui/lib/grid-tile/grid.tsx", "../src/ui/lib/grid-tile/generic-item.tsx", "../src/ui/lib/grid-tile/generic-tile-view.tsx", "../src/ui/components/grid/tiles/banner.tsx", "../src/ui/lib/grid-tile/linkRenderer.tsx", "../src/ui/components/grid/tiles/embed.tsx", "../src/ui/components/grid/tiles/slider.tsx", "../src/ui/components/grid/grid.tsx", "../src/ui/components/grid/tiles/hero-slider.tsx", "../src/ui/pages/Category.tsx", "../src/routes/api/webhook/cache/purge.tsx", "../src/use-cases/http/fastly/purgeKeys.ts", "../src/routes/$langstore/shop/index.tsx", "../src/ui/components/category-list.tsx", "../src/ui/pages/Shop.tsx", "../src/routes/$langstore/order/$id.tsx", "../src/ui/pages/Order.tsx", "../src/ui/components/display-order.tsx", "../src/ui/components/checkout-forms/magicklogin.tsx", "../src/ui/hooks/useAuth.ts", "../src/ui/components/input.tsx", "../src/routes/$langstore/checkout.tsx", "../src/ui/pages/Checkout.tsx", "../src/ui/components/checkout-forms/address.tsx", "../src/ui/components/checkout-forms/cart.tsx", "../src/ui/components/payments/index.tsx", "../src/ui/components/payments/crystal/card.tsx", "../src/ui/components/payments/crystal/coin.tsx", "../src/ui/components/payments/klarna.tsx", "../src/ui/components/payments/montonio.tsx", "../src/ui/components/payments/quickpaylink.tsx", "../src/ui/components/payments/razorpay.tsx", "../src/ui/components/payments/stripe.tsx", "../src/ui/components/payments/adyen.tsx", "../src/ui/components/payments/vipps.tsx", "../src/routes/$langstore/orders.tsx", "../src/ui/pages/Orders.tsx", "../src/routes/$langstore/search.tsx", "../src/ui/pages/Search.tsx", "../src/routes/$langstore/index.tsx", "../src/ui/pages/LandingPage.tsx", "../src/routes/$langstore/cart.tsx", "../src/ui/components/cart.tsx", "../src/ui/components/voucher.tsx", "../src/ui/pages/Cart.tsx", "../src/routes/$langstore/$.tsx", "../src/ui/pages/Topic.tsx", "../src/routes/index.tsx", "../src/routes/$.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from 'stream';\nimport type { EntryContext } from '@remix-run/node';\nimport { Response } from '@remix-run/node';\nimport { RemixServer } from '@remix-run/react';\nimport isbot from 'isbot';\nimport { renderToPipeableStream } from 'react-dom/server';\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n    request: Request,\n    responseStatusCode: number,\n    responseHeaders: Headers,\n    remixContext: EntryContext,\n) {\n    return isbot(request.headers.get('user-agent'))\n        ? handleBotRequest(request, responseStatusCode, responseHeaders, remixContext)\n        : handleBrowserRequest(request, responseStatusCode, responseHeaders, remixContext);\n}\n\nfunction handleBotRequest(\n    request: Request,\n    responseStatusCode: number,\n    responseHeaders: Headers,\n    remixContext: EntryContext,\n) {\n    return new Promise((resolve, reject) => {\n        let didError = false;\n\n        const { pipe, abort } = renderToPipeableStream(<RemixServer context={remixContext} url={request.url} />, {\n            onAllReady() {\n                const body = new PassThrough();\n\n                responseHeaders.set('Content-Type', 'text/html');\n\n                // waiting for more let's push what we can\n                let http2PushLinksHeaders = [\n                    remixContext.manifest.url,\n                    remixContext.manifest.entry.module,\n                    ...remixContext.manifest.entry.imports,\n                ];\n                responseHeaders.set(\n                    'Link',\n                    (responseHeaders.has('Link') ? responseHeaders.get('Link') + ',' : '') +\n                        http2PushLinksHeaders\n                            .map((link: string) => `<${link}>; rel=preload; as=script; crossorigin=anonymous`)\n                            .join(','),\n                );\n\n                resolve(\n                    new Response(body, {\n                        headers: responseHeaders,\n                        status: didError ? 500 : responseStatusCode,\n                    }),\n                );\n\n                pipe(body);\n            },\n            onShellError(error: unknown) {\n                reject(error);\n            },\n            onError(error: unknown) {\n                didError = true;\n\n                console.error(error);\n            },\n        });\n\n        setTimeout(abort, ABORT_DELAY);\n    });\n}\n\nfunction handleBrowserRequest(\n    request: Request,\n    responseStatusCode: number,\n    responseHeaders: Headers,\n    remixContext: EntryContext,\n) {\n    return new Promise((resolve, reject) => {\n        let didError = false;\n\n        const { pipe, abort } = renderToPipeableStream(<RemixServer context={remixContext} url={request.url} />, {\n            onShellReady() {\n                const body = new PassThrough();\n\n                responseHeaders.set('Content-Type', 'text/html');\n\n                // waiting for more let's push what we can\n                let http2PushLinksHeaders = [\n                    remixContext.manifest.url,\n                    remixContext.manifest.entry.module,\n                    ...remixContext.manifest.entry.imports,\n                ];\n\n                responseHeaders.set(\n                    'Link',\n                    (responseHeaders.has('Link') ? responseHeaders.get('Link') + ',' : '') +\n                        http2PushLinksHeaders\n                            .map((link: string) => `<${link}>; rel=preload; as=script; crossorigin=anonymous`)\n                            .join(','),\n                );\n                resolve(\n                    new Response(body, {\n                        headers: responseHeaders,\n                        status: didError ? 500 : responseStatusCode,\n                    }),\n                );\n\n                pipe(body);\n            },\n            onShellError(err: unknown) {\n                reject(err);\n            },\n            onError(error: unknown) {\n                didError = true;\n\n                console.error(error);\n            },\n        });\n\n        setTimeout(abort, ABORT_DELAY);\n    });\n}\n", "import {\n    Links,\n    LiveReload,\n    Meta,\n    Outlet,\n    Scripts,\n    ScrollRestoration,\n    useCatch,\n    useLoaderData,\n    useLocation,\n} from '@remix-run/react';\nimport {\n    ErrorBoundaryComponent,\n    HeadersFunction,\n    json,\n    LinksFunction,\n    LoaderFunction,\n    MetaFunction,\n    redirect,\n} from '@remix-run/node';\nimport { Header } from '~/ui/components/layout/header';\nimport { Footer } from '~/ui/components/layout/footer';\nimport tailwindDefaultTheme from '~/styles/tailwind.default.css';\nimport tailwindDarkTheme from '~/styles/tailwind.dark.css';\nimport tailwindRaibowTheme from '~/styles/tailwind.rainbow.css';\nimport React from 'react';\nimport { buildStoreFrontConfiguration, getStoreFront } from '~/use-cases/storefront.server';\nimport { CrystallizeAPI } from '~/use-cases/crystallize/read';\nimport { AppContextProvider, useAppContext } from '~/ui/app-context/provider';\nimport { CrystallizeProvider } from '@crystallize/reactjs-hooks';\nimport { StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { getContext } from '~/use-cases/http/utils';\nimport { FAVICON_VARIANTS } from './routes/$langstore/favicon/$size[.png]';\nimport { CatchBoundaryComponent } from '@remix-run/react/dist/routeModules';\nimport { StoreFrontConfiguration } from '~/use-cases/contracts/StoreFrontConfiguration';\nimport {\n    availableLanguages,\n    buildLanguageMarketAwareLink,\n    displayableLanguages,\n    isValidLanguageMarket,\n} from '~/use-cases/LanguageAndMarket';\nimport { storage, memoryStorage } from '~/use-cases/services.server';\nimport fetchTranslations from '~/use-cases/fetchTranslations.server';\nimport { Tree } from '~/use-cases/contracts/Tree';\nimport { Footer as FooterType } from '~/use-cases/contracts/Footer';\nimport { ErrorComponent } from '~/ui/components/error';\n\nexport const meta: MetaFunction = () => {\n    return {\n        charset: 'utf-8',\n        title: `Crystallize - Superfast`,\n        viewport: 'width=device-width,initial-scale=1',\n    };\n};\n\nexport const links: LinksFunction = () => {\n    return [\n        {\n            rel: 'stylesheet',\n            href: tailwindDefaultTheme,\n        },\n    ];\n};\n\nfunction getTailwindThemeForConfig(theme: string) {\n    switch (theme) {\n        case 'dark':\n            return tailwindDarkTheme;\n        case 'rainbow':\n            return tailwindRaibowTheme;\n        default:\n            return tailwindDefaultTheme;\n    }\n}\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return {\n        Link: `<${getTailwindThemeForConfig(\n            loaderHeaders.get('X-SuperFast-Theme') as string,\n        )}>; rel=preload; as=style; crossorigin=anonymous`,\n    };\n};\n\nexport let loader: LoaderFunction = async ({ request }) => {\n    const requestContext = getContext(request);\n    if (!isValidLanguageMarket(requestContext.language, requestContext.market)) {\n        return redirect('/' + availableLanguages[0] + requestContext.url.pathname, 301);\n    }\n    const { shared, secret } = await getStoreFront(requestContext.host);\n    const api = CrystallizeAPI({\n        apiClient: secret.apiClient,\n        language: requestContext.language,\n    });\n    const [navigation, tenantConfig, translations, footer] = await Promise.all([\n        api.fetchNavigation('/'),\n        api.fetchTenantConfig(secret.config.tenantIdentifier),\n        fetchTranslations(storage, memoryStorage, requestContext.language),\n        api.fetchFooter('/footer'),\n    ]);\n\n    const apiPath = buildLanguageMarketAwareLink('/api', requestContext.language, requestContext.market);\n    const frontConfiguration = buildStoreFrontConfiguration(\n        requestContext.locale,\n        //TESTMODE trick: here we use the real host, not the getContext that check SUPERFAST\n        `http${requestContext.isSecure ? 's' : ''}://${request.headers.get('Host')!}${apiPath}`,\n        shared.config,\n        tenantConfig,\n    );\n    return json(\n        {\n            isHTTPS: requestContext.isSecure,\n            host: requestContext.host,\n            frontConfiguration,\n            navigation,\n            baseUrl: requestContext.baseUrl,\n            translations,\n            footer,\n        },\n        {\n            headers: {\n                ...StoreFrontAwaretHttpCacheHeaderTagger('30s', '30s', ['shop'], shared.config.tenantIdentifier)\n                    .headers,\n                'X-SuperFast-Theme': shared.config.theme,\n            },\n        },\n    );\n};\n\ntype LoaderData = {\n    frontConfiguration: StoreFrontConfiguration;\n    navigation: {\n        folders: Tree[];\n        topics: Tree[];\n    };\n    isHTTPS: boolean;\n    host: string;\n    translations: any;\n    baseUrl: string;\n    footer: FooterType;\n};\n\nconst Document: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n    const { isHTTPS, frontConfiguration, translations, baseUrl } = useLoaderData<LoaderData>();\n    let location = useLocation();\n    const path = '/' + location.pathname.split('/').slice(2).join('/');\n\n    if (typeof window !== 'undefined') {\n        window.addEventListener('load', function () {\n            navigator.serviceWorker.register('/sw.js').then(\n                function (registration) {\n                    console.log('ServiceWorker registration successful with scope: ', registration.scope);\n                },\n                function (err) {\n                    console.log('ServiceWorker registration failed: ', err);\n                },\n            );\n        });\n    }\n\n    return (\n        <CrystallizeProvider\n            language={frontConfiguration.language}\n            tenantIdentifier={frontConfiguration.crystallize.tenantIdentifier}\n        >\n            <AppContextProvider initialState={frontConfiguration} translations={translations}>\n                <html lang={frontConfiguration.language}>\n                    <head>\n                        <meta charSet=\"utf-8\" />\n                        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n                        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n                        <meta name=\"mobile-web-app-capable\" content=\"yes\" />\n                        <Favicons />\n                        <link rel=\"manifest\" href=\"/manifest.json\" />\n                        <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n                        <meta name=\"theme-color\" content=\"#ffffff\" />\n                        <link href={`${baseUrl}${location?.pathname}`} rel=\"canonical\" />\n                        <Meta />\n                        <Links />\n                        {displayableLanguages.map((lang) => (\n                            <link\n                                key={lang.code}\n                                rel=\"alternate\"\n                                hrefLang={lang.code}\n                                href={`${baseUrl}${buildLanguageMarketAwareLink(path, lang.code)}`}\n                            />\n                        ))}\n                        <script suppressHydrationWarning={true} type=\"text/css\">\n                            {\n                                '*,:after,:before{box-sizing:border-box;border:0 solid}:after,:before{--tw-content:\"\"}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}body{margin:0;line-height:inherit}h2{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}figure,h2,p{margin:0}img,svg{display:block;vertical-align:middle}img{max-width:100%;height:auto}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-date-and-time-value{min-height:1.5em}*,:after,:before{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:#3b82f680;--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (max-width:1024px){#grid-item{grid-column:span 3!important}}.absolute{position:absolute}.relative{position:relative}.-right-2{right:-.5rem}.-top-2{top:-.5rem}.z-10{z-index:10}.mx-auto{margin-left:auto;margin-right:auto}.mt-4{margin-top:1rem}.flex{display:flex}.h-80{height:20rem}.h-full{height:100%}.h-5{height:1.25rem}.w-full{width:100%}.w-60{width:15rem}.w-5{width:1.25rem}.flex-col{flex-direction:column}.items-start{align-items:flex-start}.items-center{align-items:center}.justify-between{justify-content:space-between}.justify-evenly{justify-content:space-evenly}.gap-5{gap:1.25rem}.gap-1{gap:.25rem}.self-end{align-self:flex-end}.overflow-hidden{overflow:hidden}.rounded-xl{border-radius:.75rem}.rounded-2xl{border-radius:1rem}.rounded-full{border-radius:1000px}.rounded-r-xl{border-top-right-radius:.75rem;border-bottom-right-radius:.75rem}.bg-primary{--tw-bg-opacity:1;background-color:rgb(255 247 240/var(--tw-bg-opacity))}.bg-background1{--tw-bg-opacity:1;background-color:rgb(240 239 235/var(--tw-bg-opacity))}.bg-grey{background-color:#00000008}.bg-text{--tw-bg-opacity:1;background-color:rgb(55 53 103/var(--tw-bg-opacity))}.p-8{padding:2rem}.p-5{padding:1.25rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.px-2{padding-left:.5rem;padding-right:.5rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-7{padding-top:1.75rem;padding-bottom:1.75rem}.py-20{padding-top:5rem;padding-bottom:5rem}.text-center{text-align:center}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-sm{font-size:.875rem;line-height:1.25rem}.font-bold{font-weight:700}.text-primary{--tw-text-opacity:1;color:rgb(255 247 240/var(--tw-text-opacity))}'\n                            }\n                        </script>\n                        <script defer src=\"https://pim.crystallize.com/static/frontend-preview-listener.js\" />\n                        <link rel=\"stylesheet\" href={getTailwindThemeForConfig(frontConfiguration.theme)} />\n                    </head>\n                    <body data-theme={frontConfiguration.theme}>\n                        {children}\n                        <ScrollRestoration />\n                        <Scripts />\n                        <LiveReload port={isHTTPS ? 443 : undefined} />\n                    </body>\n                </html>\n            </AppContextProvider>\n        </CrystallizeProvider>\n    );\n};\n\nconst Favicons: React.FC = () => {\n    const { path } = useAppContext();\n    const linkTags = Object.entries(FAVICON_VARIANTS).map(([variant, meta]) => {\n        const extra = meta.extra ?? {};\n        return (\n            <link\n                key={`/favicon/${variant}.png`}\n                rel={meta.rel}\n                sizes={`${meta.size}x${meta.size}`}\n                href={path(`/favicon/${variant}.png`)}\n                {...extra}\n            />\n        );\n    });\n\n    return <>{linkTags}</>;\n};\n\nconst Layout: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n    const { navigation, footer } = useLoaderData<LoaderData>();\n\n    return (\n        <>\n            <Header navigation={navigation} />\n            <div>{children}</div>\n            <Footer footer={footer} />\n        </>\n    );\n};\n\nexport default () => {\n    return (\n        <Document>\n            <Layout>\n                <Outlet />\n            </Layout>\n        </Document>\n    );\n};\n\nexport const ErrorBoundary: ErrorBoundaryComponent = ({ error }: { error: any }) => {\n    console.error(error);\n    return (\n        <html>\n            <head>\n                <title>Oh no!</title>\n                <Meta />\n                <Links />\n            </head>\n            <body>\n                <ErrorComponent text={error.message} code={500} />\n                {/* add the UI you want your users to see */}\n                <Scripts />\n            </body>\n        </html>\n    );\n};\n\nexport const CatchBoundary: CatchBoundaryComponent = () => {\n    const caught = useCatch();\n    if (caught.data !== null) {\n        return (\n            <Document>\n                <Layout>\n                    <ErrorComponent text={caught.statusText} code={caught.status} />\n                </Layout>\n            </Document>\n        );\n    }\n\n    return (\n        <html>\n            <head>\n                <title>Oh no!</title>\n                <Meta />\n                <Links />\n            </head>\n            <body>\n                <ErrorComponent />\n                <Scripts />\n            </body>\n        </html>\n    );\n};\n", "import { Link } from '@remix-run/react';\n\nexport default (props: any & { children: React.ReactNode }) => {\n    return <Link {...props}>{props.children}</Link>;\n};\n", "import { useEffect, useRef, useState } from 'react';\nimport SearchIcon from '~/assets/searchIcon.svg';\nimport { DebounceInput } from 'react-debounce-input';\nimport Link from '~/bridge/ui/Link';\nimport { Image } from '@crystallize/reactjs-components';\nimport { useAppContext } from '../../app-context/provider';\nimport { createClient } from '@crystallize/js-api-client';\nimport { ProductSlim } from '~/use-cases/contracts/Product';\nimport { Price } from '../price';\nimport search from '~/use-cases/crystallize/read/search';\nimport searchProductToProductSlim from '~/use-cases/mapper/API/searchProductToProductSlim';\n\nexport const SearchBar = () => {\n    const ref = useRef<HTMLDivElement>(null);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [show, setShow] = useState(true);\n    const [suggestions, setSuggestions] = useState<ProductSlim[]>([]);\n    const { state: appContextState, path, _t } = useAppContext();\n    const apiClient = createClient({ tenantIdentifier: appContextState.crystallize.tenantIdentifier });\n    //close dropdown on outside click\n    useEffect(() => {\n        const handleClickOutside = (event: any) => {\n            if (ref.current && !ref.current.contains(event.target)) {\n                setShow(false);\n            }\n        };\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n            setShow(true);\n        };\n    }, [ref]);\n\n    const handleChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setSearchTerm(value);\n        try {\n            const rawResult = await search(apiClient, value, appContextState.language);\n            setSuggestions(searchProductToProductSlim(rawResult));\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.code == 'Enter') {\n            window.location.replace(path(`/search?q=${searchTerm}`));\n        }\n    };\n\n    return (\n        <div className=\"xl:w-[340px] md:px-4 relative 270px\">\n            <div className=\"relative z-30 flex items-center justify-between bg-grey h-10 rounded-full overflow-hidden focus-within:border\">\n                <DebounceInput\n                    minLength={2}\n                    placeholder={_t('search.placeholder')}\n                    debounceTimeout={200}\n                    onChange={handleChange}\n                    className=\"bg-grey rounded-full overflow-hidden focus:border-textBlack outline-none px-6 w-full placeholder:text-[14px] placeholder:italic \"\n                    onKeyDown={handleKeyPress}\n                    aria-label=\"Search\"\n                />\n                <Link\n                    to={path(`/search?q=${searchTerm}`)}\n                    className=\"w-10 p-4 h-full text-[#fff] flex justify-center items-center rounded-full\"\n                >\n                    <img src={`${SearchIcon}`} alt=\"search icon\" width=\"15\" height=\"15\" />\n                </Link>\n            </div>\n            {suggestions.length > 0 && show ? (\n                <div\n                    ref={ref}\n                    className=\"absolute rounded-xl bg-[#fff] -top-5 w-full pt-20 pb-2 border border-[#dfdfdf] left-0 overflow-y-scroll shadow-sm z-20\"\n                >\n                    <div className=\"max-h-[400px] overflow-y-scroll\">\n                        {suggestions.map((suggestion, index) => (\n                            <div key={index}>\n                                <Link\n                                    to={path(suggestion.path)}\n                                    onClick={() => {\n                                        setSuggestions([]);\n                                    }}\n                                    prefetch=\"intent\"\n                                >\n                                    <div className=\"py-1 px-4 bg-[#fff] flex gap-2 items-center hover:bg-grey2\">\n                                        <div className=\"w-[25px] h-[35px] img-container rounded-sm img-cover border border-[#dfdfdf]\">\n                                            <Image\n                                                {...suggestion.variant?.images[0]}\n                                                sizes=\"100px\"\n                                                fallbackAlt={suggestion.name}\n                                            />\n                                        </div>\n                                        <div className=\"flex justify-between w-full\">\n                                            <span className=\"text-sm \">{suggestion.name}</span>\n                                            <span className=\"text-sm font-bold\">\n                                                <Price variant={suggestion.variant} size=\"small\" />\n                                            </span>\n                                        </div>\n                                    </div>\n                                </Link>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    );\n};\n", "'use client';\nimport * as React from 'react';\nimport { createContext, FunctionComponent, useContext, useReducer } from 'react';\nimport { buildLanguageMarketAwareLink } from '~/use-cases/LanguageAndMarket';\nimport { mapToReducerActions, Reducer } from './reducer';\nimport { Actions, Dispatch, State } from './types';\n\nconst StateContext = createContext<State | undefined>(undefined);\nconst DispatchContext = createContext<Dispatch | undefined>(undefined);\nconst TranslationsContext = createContext<Record<string, string> | undefined>(undefined);\n\ntype InitialState = Omit<State, 'latestAddedCartItems'>;\n\nconst initiateState = (initialState: InitialState): State => {\n    return {\n        ...initialState,\n        latestAddedCartItems: [],\n    };\n};\n\nexport const AppContextProvider: FunctionComponent<{\n    children: React.ReactNode;\n    initialState: InitialState;\n    translations: Record<string, string>;\n}> = ({ children, initialState, translations }) => {\n    const [state, dispatch] = useReducer(Reducer, initiateState(initialState));\n    return (\n        <TranslationsContext.Provider value={translations}>\n            <StateContext.Provider value={state}>\n                <DispatchContext.Provider value={dispatch}>{children}</DispatchContext.Provider>\n            </StateContext.Provider>\n        </TranslationsContext.Provider>\n    );\n};\n\nfunction useAppContextState() {\n    const context = useContext(StateContext);\n    if (context === undefined) {\n        throw new Error('useAppContextState must be used within the AppContextProvider.');\n    }\n    return context;\n}\n\nfunction useAppContextDispatch() {\n    const context = useContext(DispatchContext);\n    if (context === undefined) {\n        throw new Error('useAppContextDispatch must be used within the AppContextProvider.');\n    }\n    return context;\n}\n\nexport function useAppContext(): {\n    state: State;\n    dispatch: Actions;\n    path: (path: string) => string;\n    _t: (key: string, options?: Record<string, any>) => string;\n} {\n    const translationContext = useContext(TranslationsContext);\n    const actions = mapToReducerActions(useAppContextDispatch());\n    const state = useAppContextState();\n\n    const translate = (key: string, options?: Record<string, any>): string => {\n        if (!translationContext) {\n            return key;\n        }\n        const translated = translationContext[key as keyof typeof translationContext] || key;\n        if (!options) {\n            return translated;\n        }\n\n        return Object.entries(options).reduce((acc, [key, value]) => {\n            return acc.replace(`{{${key}}}`, value);\n        }, translated);\n    };\n\n    return {\n        state,\n        dispatch: actions,\n        _t: translate,\n        path: (path: string) => buildLanguageMarketAwareLink(path, state.language, state.market),\n    };\n}\n", "export const availableTranslationDomains = ['common'];\n\nexport const displayableLanguages = [\n    {\n        code: 'en',\n        name: 'EN',\n    },\n    {\n        code: 'no',\n        name: 'NO',\n    },\n    // Uncomment to add more languages, content must be translated first (especially topics)\n    // {\n    //     code: 'fr',\n    //     name: 'FR',\n    // },\n];\nexport const availableLanguages = [\n    'en',\n    'no',\n    'fr',\n    'de',\n    'es',\n    'it',\n    'sv',\n    'da',\n    'nl',\n    'pt',\n    'pl',\n    'ru',\n    'ja',\n    'zh',\n    'ko',\n    'ar',\n    'tr',\n    'th',\n    'cs',\n    'hu',\n    'fi',\n    'el',\n    'he',\n    'id',\n    'ro',\n    'sk',\n    'uk',\n    'vi',\n    'bg',\n    'hr',\n    'lt',\n    'lv',\n    'sr',\n    'sl',\n    'et',\n    'ka',\n    'ms',\n    'hi',\n    'bn',\n    'ta',\n    'te',\n    'ml',\n    'ur',\n    'fa',\n    'ps',\n    'sw',\n    'am',\n    'km',\n    'lo',\n    'my',\n    'ne',\n    'si',\n    'pa',\n    'gu',\n    'mr',\n    'sa',\n    'kn',\n    'sd',\n    'or',\n    'as',\n    'ml',\n    'cy',\n    'is',\n    'mk',\n    'sq',\n    'bs',\n    'mt',\n    'af',\n    'az',\n    'be',\n    'bn',\n    'bs',\n    'ca',\n    'cs',\n    'cy',\n    'da',\n    'de',\n    'el',\n    'en',\n    'es',\n    'et',\n    'fa',\n    'fi',\n    'fr',\n    'gu',\n    'he',\n    'hi',\n    'hr',\n    'hu',\n    'hy',\n    'id',\n    'is',\n    'it',\n    'ja',\n    'ka',\n    'km',\n    'kn',\n    'ko',\n    'lt',\n    'lv',\n    'mk',\n    'ml',\n    'mr',\n    'ms',\n    'ne',\n    'nl',\n    'no',\n    'or',\n    'pa',\n    'pl',\n    'ps',\n    'pt',\n    'ro',\n    'ru',\n    'sa',\n    'sd',\n    'si',\n    'sk',\n    'sl',\n    'sq',\n    'sr',\n    'sv',\n    'sw',\n    'ta',\n    'te',\n    'th',\n    'tr',\n    'uk',\n    'ur',\n    'vi',\n    'zh',\n];\nexport const availableMarkets = [];\n\nexport const isValidLanguage = (language: string) => availableLanguages.includes(language);\n\nexport const isValidMarket = (market?: string) => {\n    if (!market) {\n        return true;\n    }\n    if (availableMarkets.length === 0) {\n        return true;\n    }\n    //@ts-ignore\n    return availableMarkets.includes(market);\n};\nexport const isValidLanguageMarket = (language: string, market?: string) => {\n    if (!isValidLanguage(language)) {\n        return false;\n    }\n    if (!isValidMarket(market)) {\n        return false;\n    }\n    return true;\n};\n\nexport const buildLanguageMarketAwareLink = (path: string, language: string, market?: string): string => {\n    if (!isValidLanguageMarket(language, market)) {\n        throw new Error(`Invalid language (${language}) or market (${market})`);\n    }\n\n    if (market && market.length > 0) {\n        return `/${language}-${market}${path}`;\n    }\n\n    return `/${language}${path}`;\n};\n", "import { Action, Actions, Dispatch, State } from './types';\n\nexport function Reducer(state: State, action: Action) {\n    switch (action.type) {\n        case 'ADD_ITEMS_TO_CART': {\n            return {\n                ...state,\n                latestAddedCartItems: action.items,\n            };\n        }\n        case 'RESET_LAST_ADDED_ITEMS': {\n            return {\n                ...state,\n                latestAddedCartItems: [],\n            };\n        }\n        default: {\n            throw new Error('AppContext - Unhandled action type');\n        }\n    }\n}\n\nexport function mapToReducerActions(dispatch: Dispatch): Actions {\n    return {\n        addItemsToCart: (items: any[]) => dispatch({ type: 'ADD_ITEMS_TO_CART', items }),\n        resetLastAddedItems() {\n            dispatch({ type: 'RESET_LAST_ADDED_ITEMS' });\n        },\n    };\n}\n", "const mapping = {\n    AED: '\u062F.\u0625',\n    AFN: '\u060B',\n    ALL: 'L',\n    AMD: '\u058F',\n    ANG: '\u0192',\n    AOA: 'Kz',\n    ARS: '$',\n    AUD: '$',\n    AWG: '\u0192',\n    AZN: '\u20BC',\n    BAM: 'KM',\n    BBD: '$',\n    BDT: '\u09F3',\n    BGN: '\u043B\u0432',\n    BHD: '.\u062F.\u0628',\n    BIF: 'FBu',\n    BMD: '$',\n    BND: '$',\n    BOB: '$b',\n    BRL: 'R$',\n    BSD: '$',\n    BTC: '\u20BF',\n    BTN: 'Nu.',\n    BWP: 'P',\n    BYR: 'Br',\n    BYN: 'Br',\n    BZD: 'BZ$',\n    CAD: '$',\n    CDF: 'FC',\n    CHF: 'CHF',\n    CLP: '$',\n    CNY: '\u00A5',\n    COP: '$',\n    CRC: '\u20A1',\n    CUC: '$',\n    CUP: '\u20B1',\n    CVE: '$',\n    CZK: 'K\u010D',\n    DJF: 'Fdj',\n    DKK: 'kr',\n    DOP: 'RD$',\n    DZD: '\u062F\u062C',\n    EEK: 'kr',\n    EGP: '\u00A3',\n    ERN: 'Nfk',\n    ETB: 'Br',\n    ETH: '\u039E',\n    EUR: '\u20AC',\n    FJD: '$',\n    FKP: '\u00A3',\n    GBP: '\u00A3',\n    GEL: '\u20BE',\n    GGP: '\u00A3',\n    GHC: '\u20B5',\n    GHS: 'GH\u20B5',\n    GIP: '\u00A3',\n    GMD: 'D',\n    GNF: 'FG',\n    GTQ: 'Q',\n    GYD: '$',\n    HKD: '$',\n    HNL: 'L',\n    HRK: 'kn',\n    HTG: 'G',\n    HUF: 'Ft',\n    IDR: 'Rp',\n    ILS: '\u20AA',\n    IMP: '\u00A3',\n    INR: '\u20B9',\n    IQD: '\u0639.\u062F',\n    IRR: '\uFDFC',\n    ISK: 'kr',\n    JEP: '\u00A3',\n    JMD: 'J$',\n    JOD: 'JD',\n    JPY: '\u00A5',\n    KES: 'KSh',\n    KGS: '\u043B\u0432',\n    KHR: '\u17DB',\n    KMF: 'CF',\n    KPW: '\u20A9',\n    KRW: '\u20A9',\n    KWD: 'KD',\n    KYD: '$',\n    KZT: '\u043B\u0432',\n    LAK: '\u20AD',\n    LBP: '\u00A3',\n    LKR: '\u20A8',\n    LRD: '$',\n    LSL: 'M',\n    LTC: '\u0141',\n    LTL: 'Lt',\n    LVL: 'Ls',\n    LYD: 'LD',\n    MAD: 'MAD',\n    MDL: 'lei',\n    MGA: 'Ar',\n    MKD: '\u0434\u0435\u043D',\n    MMK: 'K',\n    MNT: '\u20AE',\n    MOP: 'MOP$',\n    MRO: 'UM',\n    MRU: 'UM',\n    MUR: '\u20A8',\n    MVR: 'Rf',\n    MWK: 'MK',\n    MXN: '$',\n    MYR: 'RM',\n    MZN: 'MT',\n    NAD: '$',\n    NGN: '\u20A6',\n    NIO: 'C$',\n    NOK: 'kr',\n    NPR: '\u20A8',\n    NZD: '$',\n    OMR: '\uFDFC',\n    PAB: 'B/.',\n    PEN: 'S/',\n    PGK: 'K',\n    PHP: '\u20B1',\n    PKR: '\u20A8',\n    PLN: 'z\u0142',\n    PYG: 'Gs',\n    QAR: '\uFDFC',\n    RMB: '\uFFE5',\n    RON: 'lei',\n    RSD: '\u0414\u0438\u043D.',\n    RUB: '\u20BD',\n    RWF: 'R\u20A3',\n    SAR: '\uFDFC',\n    SBD: '$',\n    SCR: '\u20A8',\n    SDG: '\u062C.\u0633.',\n    SEK: 'kr',\n    SGD: 'S$',\n    SHP: '\u00A3',\n    SLL: 'Le',\n    SOS: 'S',\n    SRD: '$',\n    SSP: '\u00A3',\n    STD: 'Db',\n    STN: 'Db',\n    SVC: '$',\n    SYP: '\u00A3',\n    SZL: 'E',\n    THB: '\u0E3F',\n    TJS: 'SM',\n    TMT: 'T',\n    TND: '\u062F.\u062A',\n    TOP: 'T$',\n    TRL: '\u20A4',\n    TRY: '\u20BA',\n    TTD: 'TT$',\n    TVD: '$',\n    TWD: 'NT$',\n    TZS: 'TSh',\n    UAH: '\u20B4',\n    UGX: 'USh',\n    USD: '$',\n    UYU: '$U',\n    UZS: \"so'm\",\n    VEF: 'Bs',\n    VND: '\u20AB',\n    VUV: 'VT',\n    WST: 'WS$',\n    XAF: 'FCFA',\n    XBT: '\u0243',\n    XCD: '$',\n    XOF: 'CFA',\n    XPF: '\u20A3',\n    YER: '\uFDFC',\n    ZAR: 'R',\n    ZMK: 'ZK',\n    ZWD: 'Z$',\n} as const;\nexport type CurrencyCode = keyof typeof mapping;\nexport type CurrencySymbol = typeof mapping[CurrencyCode];\nexport type Currency = {\n    code: CurrencyCode;\n    symbol: CurrencySymbol;\n};\n\nexport const getSymbolFromCode = (code: CurrencyCode): CurrencySymbol => mapping[code];\nexport const getCodeFromSymbol = (symbol: CurrencySymbol): CurrencyCode => {\n    return (Object.keys(mapping) as (keyof typeof mapping)[]).find((key: CurrencyCode) => {\n        return mapping[key] === symbol;\n    })!;\n};\n\nexport const getCurrencyFromCode = (code: CurrencyCode | string): Currency => {\n    return {\n        code: code.toUpperCase() as CurrencyCode,\n        symbol: getSymbolFromCode(code.toUpperCase() as CurrencyCode),\n    };\n};\n", "import { ProductVariant } from '../contracts/ProductVariant';\nimport { Currency, CurrencyCode, getCurrencyFromCode } from '../contracts/Currency';\n\nexport type DisplayPrice = {\n    default: number;\n    discounted?: number;\n    percent: number;\n    currency: Currency;\n    marketPrice?: number;\n};\n\n/** @todo: MUST be EXTRACTED: as it used the Local to Project Type */\nexport default function displayPriceFor(\n    variant: ProductVariant,\n    identifiers: { default: string; discounted: string } = {\n        default: 'default',\n        discounted: 'sales',\n    },\n    currencyCode: CurrencyCode,\n    discount?: {\n        amount: number;\n    },\n): DisplayPrice {\n    const priceVariants = variant?.priceVariants;\n    const currency = getCurrencyFromCode(currencyCode);\n    if (!priceVariants) {\n        return {\n            default: 0.0,\n            percent: 0.0,\n            currency,\n        };\n    }\n\n    const defaultPrice =\n        priceVariants[identifiers.default] && priceVariants[identifiers.default].currency.code === currency.code\n            ? priceVariants[identifiers.default].value\n            : 0.0;\n\n    const marketPrice =\n        priceVariants[identifiers.default] && priceVariants[identifiers.default].currency.code === currency.code\n            ? priceVariants[identifiers.default].priceFor.price\n            : 0.0;\n\n    let discountedPrice =\n        discount?.amount ||\n        (priceVariants[identifiers.discounted] && priceVariants[identifiers.discounted].currency.code === currency.code)\n            ? priceVariants[identifiers.discounted].value\n            : undefined;\n\n    if (marketPrice && marketPrice < defaultPrice) {\n        discountedPrice = marketPrice;\n    }\n\n    return {\n        default: defaultPrice,\n        discounted: discountedPrice,\n        percent:\n            defaultPrice > 0 && discountedPrice\n                ? Math.round(((defaultPrice - discountedPrice!) / defaultPrice) * 100)\n                : 0.0,\n        currency,\n        marketPrice,\n    };\n}\n", "import { getCurrencyFromCode } from '~/use-cases/contracts/Currency';\nimport { DisplayPrice as TDisplayPrice } from '~/use-cases/checkout/pricing';\n\nexport const Price: React.FC<{\n    children: number;\n    currencyCode: string;\n    className?: string;\n}> = ({ children, className = '', currencyCode }) => {\n    const currency = getCurrencyFromCode(currencyCode);\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: currency.code,\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 5,\n    });\n\n    return <span className={`crystallize-price ${className}`}>{formatter.format(children)}</span>;\n};\n\n// Generic display price component, often rewrited on project\nexport const DiscountedPrice: React.FC<{ price: TDisplayPrice; className?: string }> = ({ price, className = '' }) => {\n    if (price.discounted) {\n        return (\n            <span className={`crystallize-discounted-price ${className}`}>\n                <del>\n                    <Price currencyCode={price.currency.code} className=\"font-medium block text-right text-sm\">\n                        {price.default}\n                    </Price>\n                </del>\n                <Price currencyCode={price.currency.code}>{price.discounted}</Price>\n                {price.percent > 0 && <span className={`crystallize-discount-percent`}>-{price.percent}%</span>}\n            </span>\n        );\n    }\n    return (\n        <Price className={className} currencyCode={price.currency.code}>\n            {price.default}\n        </Price>\n    );\n};\n", "import { Image } from '@crystallize/js-api-client';\n\nexport function stringForSingleLineComponentWithId(components: any[], id: string): string | undefined {\n    return components.find((component) => component.id === id)?.content?.text;\n}\n\nexport function stringForRichTextComponentWithId(components: any[], id: string): string | undefined {\n    return components?.find((component) => component.id === id)?.content?.plainText.join('\\n');\n}\n\ntype RichText = {\n    json?: any;\n    html?: string[];\n    plainText?: string[];\n};\n\nexport type Paragraph = {\n    title?: {\n        text?: string;\n    };\n    body?: RichText;\n    images?: Image[];\n    videos?: any[];\n};\n\nexport function paragraphsForParagraphCollectionComponentWithId(\n    components: any[],\n    id: string,\n): Paragraph[] | undefined {\n    return components.find((component: any) => component.id === id)?.content?.paragraphs;\n}\n\nexport type Section = {\n    title?: string;\n    properties: Record<string, string>;\n};\n\nexport function sectionsForPropertyTableComponentWithId(components: any[], id: string): Section[] | undefined {\n    const component = components.find((component: any) => component.id === id)?.content;\n    if (!component) {\n        return undefined;\n    }\n    return component.sections.map((section: any) => {\n        return {\n            title: section.title,\n            properties: section.properties.reduce((memo: Record<string, string>, property: any) => {\n                return {\n                    ...memo,\n                    [property.key]: property.value,\n                };\n            }, {}),\n        };\n    });\n}\n\nexport type Chunk = {\n    id?: string;\n    type?: string;\n    name?: string;\n    content?: any;\n};\n\nexport function chunksForChunkComponentWithId(components: any[], id: string): Chunk[][] | undefined {\n    const component = components.find((component: any) => component.id === id)?.content;\n    if (!component) {\n        return undefined;\n    }\n    return component?.chunks.map((chunk: any) => {\n        return chunk.map((data: any) => {\n            return {\n                id: data.id,\n                name: data.name,\n                content: data.content,\n                type: data.type,\n            };\n        });\n    });\n}\n\nexport function itemsForItemRelationComponentWithId(components: any[], id: string): any[] | undefined {\n    return components.find((component: any) => component.id === id)?.content?.items;\n}\n\nexport function choiceComponentWithId(\n    components: any[],\n    id: string,\n):\n    | {\n          id: string;\n          content: any;\n      }\n    | undefined {\n    const component = components.find((component: any) => component.id === id)?.content?.selectedComponent;\n    if (!component) {\n        return undefined;\n    }\n\n    return {\n        id: component.id,\n        content: component.content,\n    };\n}\n\nexport function numericValueForComponentWithId(components: any[], id: string): number | undefined {\n    const component = components.find((component: any) => component.id === id)?.content?.number;\n\n    return component;\n}\n\nexport function flattenRichText(richText?: RichText): {\n    html?: string;\n    plainText?: string;\n    json?: any;\n} {\n    return {\n        plainText: richText?.plainText?.join(''),\n        json: richText?.json,\n        html: richText?.html?.join(''),\n    };\n}\n", "import { CuratedStory, Story } from '../../contracts/Story';\nimport {\n    choiceComponentWithId,\n    stringForSingleLineComponentWithId,\n    paragraphsForParagraphCollectionComponentWithId,\n    itemsForItemRelationComponentWithId,\n    chunksForChunkComponentWithId,\n    numericValueForComponentWithId,\n    flattenRichText,\n} from '../../mapper/api-mappers';\nimport { DataMapper, DataMapperInterface } from '..';\n\nexport default (data: any): Story | CuratedStory => {\n    const mapper = DataMapper();\n    if (data.shape.identifier === 'curated-product-story') {\n        return documentToCuratedStory(mapper, data);\n    }\n    return documentToStory(mapper, data);\n};\n\n//@todo: we need to create a Mapper for the common properties of the Story and CuratedStory\nconst documentToStory = (mapper: DataMapperInterface, data: any): Story => {\n    const media = choiceComponentWithId(data.components, 'media');\n    const firstSeoChunk = chunksForChunkComponentWithId(data.components, 'meta')?.[0];\n    const relatedArticles = itemsForItemRelationComponentWithId(data.components, 'up-next') || [];\n    const featuedProducts = itemsForItemRelationComponentWithId(data.components, 'featured');\n    const story = paragraphsForParagraphCollectionComponentWithId(data.components, 'story');\n\n    const dto: Story = {\n        type: 'story',\n        path: data.path,\n        name: data.name,\n        title: stringForSingleLineComponentWithId(data.components, 'title') || data.name!,\n        description: flattenRichText(data.components.find((c: any) => c.id === 'intro')?.content),\n        createdAt: data.createdAt,\n        medias: {\n            images: media?.id === 'image' ? mapper.API.Object.APIImageToImage(media.content.images) : [],\n            videos: media?.id === 'video' ? [] : [], // @todo: to be implemented\n        },\n        story:\n            story?.map((paragraph) => {\n                return {\n                    title: paragraph.title?.text || '',\n                    body: flattenRichText(paragraph.body),\n                    images: mapper.API.Object.APIImageToImage(paragraph.images),\n                };\n            }) || [],\n        relatedArticles,\n        featuredProducts:\n            featuedProducts?.map((item) => {\n                return {\n                    id: item?.id,\n                    name: item.name,\n                    path: item.path,\n                    topics: [],\n                    variant: mapper.API.Object.APIProductVariantToProductVariant(item.defaultVariant),\n                };\n            }) || [],\n        seo: mapper.API.Object.APIMetaSEOComponentToSEO(firstSeoChunk),\n    };\n    return dto;\n};\n\nconst documentToCuratedStory = (mapper: DataMapperInterface, data: any): CuratedStory => {\n    const intro = flattenRichText(data.components.find((c: any) => c.id === 'description')?.content);\n    const media = data.components.find((c: any) => c.id === 'shoppable-image')?.content;\n    const story = paragraphsForParagraphCollectionComponentWithId(data.components, 'story');\n    const firstSeoChunk = chunksForChunkComponentWithId(data.components, 'meta')?.[0];\n    const dto: CuratedStory = {\n        type: 'curated-product-story',\n        title: stringForSingleLineComponentWithId(data.components, 'title') || data.name!,\n        description: intro,\n        path: data.path,\n        name: data.name,\n        medias: {\n            images: mapper.API.Object.APIImageToImage(media.images),\n            videos: [],\n        },\n        merchandising:\n            chunksForChunkComponentWithId(data.components, 'merchandising')?.map((chunk) => {\n                return {\n                    products:\n                        itemsForItemRelationComponentWithId(chunk, 'products')?.map((product: any) => {\n                            return {\n                                id: product.id,\n                                name: product.name,\n                                path: product.path,\n                                variant: mapper.API.Object.APIProductVariantToProductVariant(product.defaultVariant),\n                                variants: product.variants.map(mapper.API.Object.APIProductVariantToProductVariant),\n                                topics: [],\n                            };\n                        }) || [],\n                    x: numericValueForComponentWithId(chunk, 'hotspot-x') || 0,\n                    y: numericValueForComponentWithId(chunk, 'hotspot-y') || 0,\n                };\n            }) || [],\n        story:\n            story?.map((paragraph) => {\n                return {\n                    title: paragraph.title?.text || '',\n                    body: flattenRichText(paragraph.body),\n                    images: mapper.API.Object.APIImageToImage(paragraph.images),\n                };\n            }) || [],\n        relatedArticles: [],\n        seo: mapper.API.Object.APIMetaSEOComponentToSEO(firstSeoChunk),\n    };\n    return dto;\n};\n", "import { Category } from '../../contracts/Category';\nimport {\n    choiceComponentWithId,\n    stringForRichTextComponentWithId,\n    stringForSingleLineComponentWithId,\n} from '../../mapper/api-mappers';\nimport { DataMapper } from '..';\n\nexport default (data: any): Category => {\n    const mapper = DataMapper();\n    const hero = choiceComponentWithId(data.components, 'hero-content');\n    const grid =\n        hero?.content?.grids?.[0] ||\n        (hero?.content?.items ? mapper.API.Object.AnyItemToGrid(hero?.content?.items) : null);\n    const firstSeoChunk = data.meta?.content?.chunks[0];\n    const dto: Category = {\n        name: data.name,\n        path: data.path,\n        title: stringForSingleLineComponentWithId(data.components, 'title') || data.name!,\n        description: stringForRichTextComponentWithId(data.components, 'description') || data.name!,\n        hero: grid\n            ? {\n                  id: `grid-${hero?.id ?? data.id}`,\n                  ...grid,\n              }\n            : undefined,\n        seo: mapper.API.Object.APIMetaSEOComponentToSEO(firstSeoChunk),\n    };\n\n    return dto;\n};\n", "import { CategoryWithChildren } from '../../contracts/Category';\nimport { CuratedStorySlim, StorySlim } from '../../contracts/Story';\nimport {\n    choiceComponentWithId,\n    chunksForChunkComponentWithId,\n    itemsForItemRelationComponentWithId,\n    numericValueForComponentWithId,\n    stringForSingleLineComponentWithId,\n} from '../../mapper/api-mappers';\nimport mapFetchFolderToCategory from './fetchFolderToCategory';\nimport { DataMapper } from '..';\nimport { ProductSlim } from '../../contracts/Product';\n\nexport default (data: any): CategoryWithChildren => {\n    const mapper = DataMapper();\n\n    return {\n        ...mapFetchFolderToCategory(data),\n\n        children: data.children?.map((child: any): CuratedStorySlim | StorySlim | ProductSlim | undefined => {\n            const common = {\n                name: child.name,\n                path: child.path,\n            };\n            if (child.shape.identifier === 'curated-product-story') {\n                const title = stringForSingleLineComponentWithId(child.components, 'title') || child.name!;\n                const intro = child.components.find((c: any) => c.id === 'description')?.content;\n                const media = child.components.find((c: any) => c.id === 'shoppable-image')?.content;\n                return {\n                    ...common,\n                    title,\n                    description: intro,\n                    type: 'curated-product-story',\n                    medias: {\n                        images: mapper.API.Object.APIImageToImage(media.images),\n                        videos: [],\n                    },\n                    merchandising:\n                        chunksForChunkComponentWithId(child.components, 'merchandising')?.map((chunk) => {\n                            return {\n                                products:\n                                    itemsForItemRelationComponentWithId(chunk, 'products')?.map((product: any) => {\n                                        return {\n                                            id: product.id,\n                                            name: product.name,\n                                            path: product.path,\n                                            variant: mapper.API.Object.APIProductVariantToProductVariant(\n                                                product.defaultVariant,\n                                            ),\n                                            topics: [],\n                                        };\n                                    }) || [],\n                                x: numericValueForComponentWithId(chunk, 'hotspot-x') || 0,\n                                y: numericValueForComponentWithId(chunk, 'hotspot-y') || 0,\n                            };\n                        }) || [],\n                };\n            }\n            if (child.shape.identifier === 'product') {\n                return {\n                    id: child.id,\n                    ...common,\n                    topics: [],\n                    variant: mapper.API.Object.APIProductVariantToProductVariant(child.defaultVariant),\n                };\n            }\n            if (child.shape.identifier === 'story') {\n                const title = stringForSingleLineComponentWithId(child.components, 'title') || child.name!;\n                const intro = child.components.find((c: any) => c.id === 'intro')?.content;\n                const media = choiceComponentWithId(child.components, 'media');\n                return {\n                    ...common,\n                    title,\n                    description: intro,\n                    type: 'story',\n                    medias: {\n                        images: media?.id === 'image' ? mapper.API.Object.APIImageToImage(media.content.images) : [],\n                        videos: media?.id === 'video' ? [] : [], // @todo: to be implemented\n                    },\n                };\n            }\n        }),\n    };\n};\n", "import { Footer } from '../../contracts/Footer';\nimport {\n    chunksForChunkComponentWithId,\n    flattenRichText,\n    stringForSingleLineComponentWithId,\n} from '../../mapper/api-mappers';\nimport { DataMapper } from '..';\n\nexport default (data: any): Footer => {\n    const mapper = DataMapper();\n    if (data === null) {\n        return {\n            copyright: '',\n            contact: {\n                plainText: '',\n                html: '',\n            },\n            links: {\n                plainText: '',\n                html: '',\n            },\n            socialLinks: [],\n            promotions: {\n                heading: '',\n                cards: [],\n            },\n        };\n    }\n\n    const socialLinks = chunksForChunkComponentWithId(data.components, 'social');\n    const promotionCards = chunksForChunkComponentWithId(data.components, 'promotion-cards');\n\n    const dto: Footer = {\n        copyright: stringForSingleLineComponentWithId(data.components, 'copyright') || '',\n        contact: flattenRichText(data.components.find((c: any) => c.id === 'contact-information')?.content),\n        links: data.components.find((c: any) => c.id === 'links')?.content,\n        socialLinks:\n            socialLinks?.map((socialLink: any) => {\n                const logo = socialLink.find((c: any) => c.id === 'logo')?.content;\n                return {\n                    logo: mapper.API.Object.APIImageToImage(logo.images),\n                    link: stringForSingleLineComponentWithId(socialLink, 'link') || '',\n                };\n            }) || [],\n        promotions: {\n            heading: stringForSingleLineComponentWithId(data.components, 'promotion-section-heading') || '',\n            cards:\n                promotionCards?.map((card: any) => {\n                    const image = card.find((c: any) => c.id === 'image')?.content;\n                    return {\n                        title: stringForSingleLineComponentWithId(card, 'title') || '',\n                        link: stringForSingleLineComponentWithId(card, 'link') || '',\n                        image: mapper.API.Object.APIImageToImage(image.images),\n                    };\n                }) || [],\n        },\n    };\n\n    return dto;\n};\n", "import { LandingPage } from '../../contracts/LandingPage';\nimport { DataMapper } from '..';\n\nexport default (data: any): LandingPage => {\n    const mapper = DataMapper();\n    const firstSeoChunk = data.meta.content?.chunks?.[0];\n    return {\n        name: data.name,\n        path: data.path,\n        seo: mapper.API.Object.APIMetaSEOComponentToSEO(firstSeoChunk),\n        grids: data.grids.content.grids.map((grid: any) => {\n            return {\n                id: grid.id,\n                rows: grid.rows,\n            };\n        }),\n    };\n};\n", "import { Tree } from '../../contracts/Tree';\n\nexport const recursiveMap = (level: any, defaultType: string): Tree => {\n    return {\n        id: level.id,\n        name: level.name,\n        path: level.path,\n        type: level.__typename ?? defaultType,\n        children: level.children?.map((child: any) => recursiveMap(child, defaultType)) ?? [],\n    };\n};\n\nexport default (\n    navigation: any,\n): {\n    folders: Tree[];\n    topics: Tree[];\n} => {\n    return {\n        folders: navigation.folders.tree.children.map((tree: any) => recursiveMap(tree, 'folder')),\n        topics: navigation.topics.tree.map((tree: any) => recursiveMap(tree, '_topic')),\n    };\n};\n", "import { Item, ProductVariant as APIProductVariant, Product as APIProduct } from '@crystallize/js-api-client';\nimport { Product } from '../../contracts/Product';\nimport { ProductVariant } from '../../contracts/ProductVariant';\nimport {\n    chunksForChunkComponentWithId,\n    flattenRichText,\n    itemsForItemRelationComponentWithId,\n    paragraphsForParagraphCollectionComponentWithId,\n    sectionsForPropertyTableComponentWithId,\n    stringForRichTextComponentWithId,\n    stringForSingleLineComponentWithId,\n} from '../../mapper/api-mappers';\nimport { DataMapper } from '..';\n\nexport default (\n    data: Omit<APIProduct, 'variants'> &\n        Item & { components: any } & { variants: Array<APIProductVariant & { components: any; description: any }> },\n): Product => {\n    const mapper = DataMapper();\n    const story = paragraphsForParagraphCollectionComponentWithId(data.components, 'story');\n    const sections = sectionsForPropertyTableComponentWithId(data.components, 'properties');\n    const firstDimensionsChunk = chunksForChunkComponentWithId(data.components, 'dimensions')?.[0];\n    const firstSeoChunk = chunksForChunkComponentWithId(data.components, 'meta')?.[0];\n    const downloads = chunksForChunkComponentWithId(data.components, 'downloads');\n    const relatedItems = itemsForItemRelationComponentWithId(data.components, 'related-items');\n    const productDescription = stringForRichTextComponentWithId(data.components, 'description') || data.name!;\n\n    const variants: ProductVariant[] =\n        data?.variants?.map((variant) => {\n            const mappedVariant = mapper.API.Object.APIProductVariantToProductVariant(variant);\n            let description = productDescription;\n            const variantDescription = variant?.description?.content?.selectedComponent?.content?.plainText?.join('');\n            const variantDescriptionType = variant?.description?.content?.selectedComponent?.id;\n            if (variantDescriptionType) {\n                description =\n                    variantDescriptionType === 'extra'\n                        ? productDescription + ' ' + variantDescription\n                        : variantDescription;\n            }\n            return {\n                ...mappedVariant,\n                description,\n            };\n        }) || [];\n\n    const defaultVariant = variants.find((variant) => variant.isDefault) || variants[0];\n\n    const dto: Product = {\n        id: data.id,\n        path: data.path!,\n        name: data.name!,\n        title: stringForSingleLineComponentWithId(data.components, 'title') || data.name!,\n        description: productDescription,\n        story:\n            story?.map((paragraph) => {\n                return {\n                    title: paragraph.title?.text || '',\n                    body: flattenRichText(paragraph.body),\n                    images: mapper.API.Object.APIImageToImage(paragraph.images),\n                    videos: mapper.API.Object.APIVideoToVideo(paragraph.videos),\n                };\n            }) || [],\n        specifications:\n            sections?.map((section) => {\n                return {\n                    title: section.title || '',\n                    properties: section.properties || {},\n                };\n            }) || [],\n        dimensions: !firstDimensionsChunk\n            ? []\n            : firstDimensionsChunk.reduce(\n                  (\n                      memo: Record<\n                          string,\n                          {\n                              title: string;\n                              value: number;\n                              unit: string;\n                          }\n                      >,\n                      data: any,\n                  ) => {\n                      return {\n                          ...memo,\n                          [data.id]: {\n                              title: data.name,\n                              value: data?.content?.number || 0.0,\n                              unit: data?.content?.unit || '',\n                          },\n                      };\n                  },\n                  {},\n              ),\n        downloads:\n            downloads?.map((chunk) => {\n                const mapped = chunk.reduce((memo: Record<string, any>, data: any) => {\n                    let value = undefined;\n                    switch (data.type) {\n                        case 'singleLine':\n                            value = data.content?.text || '';\n                            break;\n                        case 'richText':\n                            value = data.content?.json || '';\n                            break;\n                        case 'files':\n                            value =\n                                data.content?.files?.map((file: any) => {\n                                    return {\n                                        url: file.url,\n                                        title: file.title || '',\n                                    };\n                                }) || [];\n                            break;\n                    }\n                    return {\n                        ...memo,\n                        [data.id]: value,\n                    };\n                }, {});\n\n                return {\n                    title: mapped['title' as keyof typeof mapped] || '',\n                    description: {\n                        json: mapped['description' as keyof typeof mapped],\n                    },\n                    files: mapped['files' as keyof typeof mapped],\n                };\n            }) || [],\n        relatedItems:\n            relatedItems?.map((item) => {\n                return {\n                    id: item.id,\n                    name: item.name,\n                    path: item.path,\n                    topics: [],\n                    variant: mapper.API.Object.APIProductVariantToProductVariant(item.defaultVariant),\n                };\n            }) || [],\n        topics:\n            data.topics?.map((topic) => {\n                return {\n                    name: topic.name,\n                    path: topic.path,\n                };\n            }) || [],\n        seo: mapper.API.Object.APIMetaSEOComponentToSEO(firstSeoChunk),\n        vat: {\n            name: data.vatType?.name || 'Exempt.',\n            rate: data.vatType?.percent || 0.0,\n        },\n        variants,\n        defaultVariant,\n    };\n    return dto;\n};\n", "import { ProductSlim } from '../../contracts/Product';\nimport { Shop } from '../../contracts/Shop';\nimport {\n    choiceComponentWithId,\n    stringForRichTextComponentWithId,\n    stringForSingleLineComponentWithId,\n} from '../../mapper/api-mappers';\nimport { DataMapper } from '..';\n\nexport default (data: any): Shop => {\n    const mapper = DataMapper();\n    const [folder, hierarchy] = data;\n\n    const hero = choiceComponentWithId(folder.components, 'hero-content');\n    const grid =\n        hero?.content?.grids?.[0] ||\n        (hero?.content?.items ? mapper.API.Object.AnyItemToGrid(hero?.content?.items) : null);\n\n    const firstSeoChunk = folder.meta?.content?.chunks[0];\n    const dto: Shop = {\n        name: folder.name,\n        title: stringForSingleLineComponentWithId(folder.components, 'title') || data.name!,\n        path: folder.path,\n        description: stringForRichTextComponentWithId(folder.components, 'description') || data.name!,\n        hero: grid\n            ? {\n                  id: `grid-${hero?.id ?? folder.id}`,\n                  ...grid,\n              }\n            : undefined,\n        seo: mapper.API.Object.APIMetaSEOComponentToSEO(firstSeoChunk),\n        categories: hierarchy.tree?.children.map((child: any) => {\n            return {\n                name: child.name,\n                path: child.path,\n                description: child.description?.content,\n                products: child?.children?.map((product: any): ProductSlim => {\n                    return {\n                        id: product.id,\n                        name: product.name,\n                        path: product.path,\n                        variant: mapper.API.Object.APIProductVariantToProductVariant(product.defaultVariant),\n                        topics: [],\n                    };\n                }),\n            };\n        }),\n    };\n    return dto;\n};\n", "import { Voucher } from '../../contracts/Voucher';\n\nexport default (data: any): Voucher => {\n    const expiresString = data.expires?.content?.datetime || null;\n    const expiresDate = new Date(expiresString);\n    expiresDate.setHours(23, 59, 59);\n    const expires = expiresString ? expiresDate : null;\n    const now = new Date();\n    return {\n        itemId: data.id,\n        code: data.name,\n        value: {\n            type: data.value?.content?.selectedComponent?.id,\n            number: data.value?.content?.selectedComponent?.content?.number,\n        },\n        expires,\n        isExpired: (expires && expires < now) || false,\n    };\n};\n", "import { SEO } from '../../contracts/SEO';\nimport { stringForRichTextComponentWithId, stringForSingleLineComponentWithId } from '../api-mappers';\n\nexport default (data: any): SEO => {\n    const meta = data?.component?.content?.chunks?.[0];\n\n    if (!meta) {\n        return {\n            title: '',\n            description: '',\n            image: '',\n        };\n    }\n    return {\n        title: stringForSingleLineComponentWithId(meta, 'title') || '',\n        description: stringForRichTextComponentWithId(meta, 'description') || '',\n        image: meta?.find((c: any) => c.id === 'image')?.content?.firstImage?.url || '',\n    };\n};\n", "import { SearchByTopicsProductList } from '../../contracts/Product';\nimport { DataMapper } from '..';\n\nexport default (data: any): SearchByTopicsProductList => {\n    const mapper = DataMapper();\n    return {\n        products: mapper.API.Call.searchProductToProductSlim(data.search.edges),\n        topics:\n            data?.topics?.aggregations?.topics.map((topic: any) => {\n                return {\n                    name: topic.name,\n                    path: topic.path,\n                };\n            }) || [],\n    };\n};\n", "import { ProductSlim } from '../../contracts/Product';\nimport { DataMapper } from '..';\n\nexport default (data: any): ProductSlim[] => {\n    const mapper = DataMapper();\n    return (\n        data.map(({ node }: any) => {\n            return {\n                id: node.id,\n                name: node.name,\n                path: node.path,\n                variant: mapper.API.Object.APIProductVariantToProductVariant(node.matchingVariant),\n                topics:\n                    node.topics?.map((topic: any) => {\n                        return {\n                            name: topic.name,\n                            path: topic.path,\n                        };\n                    }) ?? [],\n            };\n        }) || []\n    );\n};\n", "import { Grid } from '../../contracts/Grid';\n\nexport default (items: any[]): Grid => {\n    if (items.length === 0) {\n        return {\n            id: '',\n            rows: [],\n        };\n    }\n    return {\n        id: '',\n        rows: items.map((item, index) => {\n            return {\n                columns: [\n                    {\n                        layout: {\n                            rowspan: 1,\n                            colspan: 3,\n                            colIndex: 0,\n                            rowIndex: index,\n                        },\n                        item: item,\n                    },\n                ],\n            };\n        }),\n    };\n};\n", "import { Image as APIImage } from '@crystallize/js-api-client';\nimport { Image } from '../../contracts/Image';\n\nexport default (images?: APIImage[]): Image[] => {\n    return (\n        images?.map((image) => {\n            return {\n                key: image.key,\n                url: image.url!,\n                altText: image.altText || '',\n                variants:\n                    image.variants?.map((variant) => {\n                        return {\n                            key: variant.key,\n                            url: variant.url!,\n                            width: variant.width!,\n                            height: variant.height!,\n                        };\n                    }) || [],\n                caption: image.caption || {},\n            };\n        }) || []\n    );\n};\n", "import { Chunk } from '../../mapper/api-mappers';\n\nexport default (chunk?: Chunk[]) => {\n    return !chunk\n        ? {\n              title: '',\n          }\n        : (chunk.reduce(\n              (memo: Record<string, string>, data: any) => {\n                  let value = undefined;\n                  switch (data.type) {\n                      case 'singleLine':\n                          value = data.content?.text || '';\n                          break;\n                      case 'richText':\n                          value = data.content?.plainText?.join(' ');\n                          break;\n                      case 'images':\n                          value = data.content?.images?.[0]?.url;\n                          if (!value) {\n                              value = data.content?.firstImage?.url;\n                          }\n                          break;\n                  }\n                  return {\n                      ...memo,\n                      [data.id]: value,\n                  };\n              },\n              {\n                  title: '',\n              },\n          ) as { title: string });\n};\n", "import { ProductPriceVariant } from '@crystallize/js-api-client';\nimport { Price } from '../../contracts/Price';\nimport { getCurrencyFromCode } from '../../contracts/Currency';\n\nexport default (variants: ProductPriceVariant[]): Record<string, Price> => {\n    return variants.reduce((memo: any, priceVariant: ProductPriceVariant) => {\n        return {\n            ...memo,\n            [priceVariant.identifier]: {\n                identifier: priceVariant.identifier,\n                value: priceVariant.price || 0.0,\n                currency: getCurrencyFromCode(priceVariant.currency || 'EUR'),\n                name: priceVariant.name || 'Unkonwn',\n                priceFor: {\n                    identifier: priceVariant.priceFor?.identifier || '',\n                    price: priceVariant.priceFor?.price,\n                },\n            },\n        };\n    }, {});\n};\n", "import { ProductStockLocation, ProductVariant as APIProductVariant } from '@crystallize/js-api-client';\nimport { ProductVariant } from '../../contracts/ProductVariant';\nimport { StockLocation } from '../../contracts/StockLocation';\nimport { DataMapper } from '..';\n\nexport default (variant: APIProductVariant): ProductVariant => {\n    const mapper = DataMapper();\n\n    const priceVariants = mapper.API.Object.APIPriceVariantsToPriceVariant(variant.priceVariants ?? []);\n    const images = variant.images ?? (variant.firstImage ? [variant.firstImage] : []);\n\n    return {\n        id: variant.id,\n        isDefault: !!variant.isDefault,\n        name: variant.name || 'Unknown',\n        sku: variant.sku,\n        priceVariants,\n        stockLocations:\n            variant.stockLocations?.reduce(\n                (memo: Record<string, StockLocation>, stockLocation: ProductStockLocation) => {\n                    return {\n                        ...memo,\n                        [stockLocation.identifier]: {\n                            identifier: stockLocation.identifier,\n                            name: stockLocation.name || 'Unknown',\n                            stock: stockLocation.stock || 0,\n                        },\n                    };\n                },\n                {},\n            ) || {},\n        images: mapper.API.Object.APIImageToImage(images),\n        attributes:\n            variant.attributes?.reduce((memo: Record<string, string>, attribute) => {\n                return {\n                    ...memo,\n                    [attribute.attribute]: attribute.value || '',\n                };\n            }, {}) || {},\n    };\n};\n", "import { Video } from '../../contracts/Video';\n\nexport default (videos?: Video[]) => {\n    return (\n        videos?.map((video) => {\n            return {\n                id: video.id,\n                playlists: video.playlists,\n                playlist: video.playlist,\n                title: video.title,\n                thumbnails: video.thumbnails,\n            };\n        }) || []\n    );\n};\n", "import fetchDocumentToStory from './API/fetchDocumentToStory';\nimport fetchFolderToCategory from './API/fetchFolderToCategory';\nimport fetchFolderWithChildrenToCategoryWithChildren from './API/fetchFolderWithChildrenToCategoryWithChildren';\nimport fetchFooterToFooter from './API/fetchFooterToFooter';\nimport fetchLandingPageToLandingPage from './API/fetchLandingPageToLandingPage';\nimport fetchNavigationToTree from './API/fetchNavigationToTree';\nimport fetchProductToProduct from './API/fetchProductToProduct';\nimport fetchShopToShop from './API/fetchShopToShop';\nimport fetchVoucherToVoucher from './API/fetchVoucherToVoucher';\nimport fetchMetadataToMeta from './API/fetchMetadataToMeta';\nimport searchByTopicProductToProductSlim from './API/searchByTopicProductToProductSlim';\nimport searchProductToProductSlim from './API/searchProductToProductSlim';\nimport AnyIemToGrid from './Object/AnyIemToGrid';\nimport APIImageToImage from './Object/APIImageToImage';\nimport APIMetaSEOComponentToSEO from './Object/APIMetaSEOComponentToSEO';\nimport APIPriceVariantsToPriceVariant from './Object/APIPriceVariantsToPriceVariant';\nimport APIProductVariantToProductVariant from './Object/APIProductVariantToProductVariant';\nimport APIVideoToVideo from './Object/APIVideoToVideo';\n\nexport type DataMapperContext = {\n    locale?: string;\n    language: string;\n};\n\nexport const DataMapper = (context?: DataMapperContext) => {\n    return {\n        API: {\n            Call: {\n                fetchDocumentToStory: fetchDocumentToStory,\n                fetchFolderToCategory: (withChildren: boolean = false) => {\n                    if (withChildren) {\n                        return fetchFolderWithChildrenToCategoryWithChildren;\n                    }\n                    return fetchFolderToCategory;\n                },\n                fetchFooterToFooter: fetchFooterToFooter,\n                fetchLandingPageToLandingPage: fetchLandingPageToLandingPage,\n                fetchProductToProduct: fetchProductToProduct,\n                fetchShopToShop: fetchShopToShop,\n                fetchNavigationToTree: fetchNavigationToTree,\n                searchByTopicProductToProductSlim: searchByTopicProductToProductSlim,\n                searchProductToProductSlim: searchProductToProductSlim,\n                fetchVoucherToVoucher: (voucher: any) => fetchVoucherToVoucher(voucher),\n                fetchMetadataToMeta: fetchMetadataToMeta,\n            },\n            Object: {\n                AnyItemToGrid: AnyIemToGrid,\n                APIImageToImage: APIImageToImage,\n                APIVideoToVideo: APIVideoToVideo,\n                APIMetaSEOComponentToSEO: APIMetaSEOComponentToSEO,\n                APIPriceVariantsToPriceVariant: APIPriceVariantsToPriceVariant,\n                APIProductVariantToProductVariant: APIProductVariantToProductVariant,\n            },\n        },\n    };\n};\n\nexport type DataMapperInterface = ReturnType<typeof DataMapper>;\n", "import { CartItem } from '@crystallize/node-service-api-request-handlers';\nimport displayPriceFor, { DisplayPrice } from '~/use-cases/checkout/pricing';\nimport { Price as CrystallizePrice } from '../lib/pricing/pricing-component';\nimport { DataMapper } from '~/use-cases/mapper';\nimport { useAppContext } from '../app-context/provider';\nimport { ProductVariant } from '~/use-cases/contracts/ProductVariant';\n\nexport const DiscountedPrice: React.FC<{\n    price: DisplayPrice;\n    size?: string;\n}> = ({ price, size = 'medium' }) => {\n    const priceSize = {\n        small: {\n            default: 'text-md font-semibold',\n            previous: 'line-through font-semibold pt-1 text-xs',\n            discount: 'text-md font-semibold text-green2',\n            percentage: 'text-sm py-1 px-2 h-[26px] rounded-md bg-[#efefef] font-medium',\n        },\n        medium: {\n            default: 'text-2xl font-bold',\n            previous: 'line-through font-semibold pt-1 text-sm',\n            discount: 'text-2xl font-bold text-green2',\n            percentage: 'text-sm py-1 px-2 h-[26px] rounded-md bg-[#efefef] font-bold',\n        },\n    };\n    let {\n        default: defaultPrice,\n        discounted: discountPrice,\n        percent: discountPercentage,\n        currency,\n        marketPrice,\n    } = price;\n\n    const { _t } = useAppContext();\n\n    return (\n        <div>\n            {discountPrice && discountPrice < defaultPrice ? (\n                <div className=\"flex flex-wrap  flex-col\">\n                    <div className={priceSize[size as keyof typeof priceSize].previous}>\n                        <CrystallizePrice currencyCode={currency.code}>{defaultPrice}</CrystallizePrice>\n                    </div>\n                    <div className=\"flex gap-2 items-center\">\n                        <div className={priceSize[size as keyof typeof priceSize].discount}>\n                            <CrystallizePrice currencyCode={currency.code}>{discountPrice}</CrystallizePrice>\n                        </div>\n                        <div className={priceSize[size as keyof typeof priceSize].percentage}>\n                            -{discountPercentage}%\n                        </div>\n                    </div>\n                    {marketPrice && marketPrice < defaultPrice && (\n                        <p className={`${priceSize[size as keyof typeof priceSize].percentage} w-fit mt-2`}>\n                            {_t('marketPriceLabel')}\n                        </p>\n                    )}\n                </div>\n            ) : (\n                <div className=\"\">\n                    <CrystallizePrice\n                        currencyCode={currency.code}\n                        className={priceSize[size as keyof typeof priceSize].default}\n                    >\n                        {defaultPrice}\n                    </CrystallizePrice>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport const Price: React.FC<{ variant: ProductVariant; size?: string }> = ({ variant, size = 'medium' }) => {\n    const { state } = useAppContext();\n    const price = displayPriceFor(\n        variant,\n        {\n            default: 'default',\n            discounted: 'sales',\n        },\n        state.currency.code,\n    );\n    return <DiscountedPrice price={price} size={size} />;\n};\n\nexport const CartItemPrice: React.FC<{\n    item: CartItem;\n    saving: any;\n    size?: string;\n}> = ({ item, saving, size = 'small' }) => {\n    const mapper = DataMapper();\n    const { state, _t } = useAppContext();\n    return (\n        <>\n            <Price variant={mapper.API.Object.APIProductVariantToProductVariant(item.variant)} size={size} />\n            <div>\n                {_t('total')}:{' '}\n                <CrystallizePrice currencyCode={state.currency.code}>{item.price.gross}</CrystallizePrice>\n                {saving && (\n                    <>\n                        <del className=\"text-red mx-2\">\n                            <CrystallizePrice currencyCode={state.currency.code}>\n                                {item.price.net + saving.amount}\n                            </CrystallizePrice>\n                        </del>\n                        <small>({saving.quantity} for free!)</small>\n                    </>\n                )}\n            </div>\n        </>\n    );\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, value: string, language: string): Promise<any[]> => {\n    const data = await apiClient.searchApi(\n        `#graphql\n        query Search ($searchTerm: String!){\n                        search(language:\"${language}\", first: 100, filter: { \n                            searchTerm: $searchTerm, \n                            type: PRODUCT, \n                            }){\n                          edges {\n                            node {\n                              name\n                              type\n                              path\n                              ... on Product {\n                                matchingVariant {\n                                  name\n                                  price\n                                  isDefault\n                                  priceVariants {\n                                    identifier\n                                    name\n                                    price\n                                    currency\n                                  }\n                                  images {\n                                    url\n                                    variants {\n                                      url\n                                      width\n                                      key\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n            `,\n        {\n            searchTerm: value,\n        },\n    );\n    return data.search.edges;\n};\n", "'use client';\nimport { useLocalStorage, writeStorage } from '@rehooks/local-storage';\nimport { LocalCart } from '~/use-cases/contracts/LocalCart';\n\nconst InitializeEmptyLocalCart = (): LocalCart => {\n    return {\n        items: {},\n        cartId: '',\n        state: 'cart',\n        extra: {},\n    };\n};\n\nexport function useLocalCart() {\n    const [cart] = useLocalStorage<LocalCart>('cart', InitializeEmptyLocalCart());\n    const update = (cart: LocalCart) => {\n        writeStorage('cart', {\n            ...cart,\n        });\n    };\n\n    const isImmutable = () => {\n        return cart.state === 'placed' || cart.state === 'paid';\n    };\n\n    return {\n        cart,\n        setWrappingData: (cartId: string, cartState: string) => {\n            update({\n                ...cart,\n                cartId,\n                state: cartState as 'cart' | 'placed',\n            });\n        },\n        empty: () => {\n            update({\n                ...cart,\n                ...InitializeEmptyLocalCart(),\n            });\n        },\n        isImmutable,\n        isEmpty: () => {\n            return Object.keys(cart.items).length === 0;\n        },\n        clone: () => {\n            update({\n                ...cart,\n                cartId: '',\n            });\n        },\n        add: (\n            item: {\n                name: string;\n                sku: string;\n                price: number;\n            },\n            quantity: number = 1,\n        ) => {\n            if (isImmutable()) {\n                return;\n            }\n            if (cart.items[item.sku]) {\n                cart.items[item.sku].quantity = cart.items[item.sku].quantity + quantity;\n            } else {\n                cart.items[item.sku] = {\n                    sku: item.sku,\n                    name: item.name,\n                    price: item.price,\n                    quantity: quantity,\n                };\n            }\n            update(cart);\n        },\n        remove: (item: { sku: string }) => {\n            if (isImmutable()) {\n                return;\n            }\n            if (cart.items[item.sku]) {\n                if (cart.items[item.sku].quantity >= 1) {\n                    cart.items[item.sku].quantity--;\n                }\n            }\n            const items = Object.keys(cart.items).reduce((accumulator: any, key: any) => {\n                const item = cart.items[key];\n                if (item.quantity > 0) {\n                    accumulator[item.sku] = item;\n                }\n                return accumulator;\n            }, {});\n            update({\n                ...cart,\n                items: items,\n            });\n        },\n        setVoucher: (voucher: string) => {\n            if (isImmutable()) {\n                return;\n            }\n            update({\n                ...cart,\n                extra: {\n                    ...cart.extra,\n                    voucher,\n                },\n            });\n        },\n    };\n}\n", "import BasketIcon from '~/assets/basketIcon.svg';\nimport { useLocalCart } from '../../hooks/useLocalCart';\nimport { ClientOnly } from '@crystallize/reactjs-hooks';\nimport { useAppContext } from '../../app-context/provider';\nimport Link from '~/bridge/ui/Link';\n\nexport const BasketButton = ({}) => {\n    const { cart, isEmpty } = useLocalCart();\n    const { path } = useAppContext();\n    let quantity = 0;\n    if (!isEmpty()) {\n        quantity = Object.keys(cart.items).reduce((acc: number, key: string) => acc + cart.items[key].quantity, 0);\n    }\n    return (\n        <Link to={path('/cart')} className=\"p-2 rounded-md hover:bg-[#efefef] relative\">\n            <img className=\"w-[30px] h-[30px]\" src={`${BasketIcon}`} width=\"25\" height=\"25\" alt=\"Basket icon\" />\n            <ClientOnly>\n                <div className=\"absolute -top-2 -right-2 flex text-center items-center border-[4px] border-[#fff] justify-center rounded-sm bg-[#efefef] w-[24px] h-[24px]   text-600 text-[10px]\">\n                    {quantity}\n                </div>\n            </ClientOnly>\n        </Link>\n    );\n};\n", "import Link from '~/bridge/ui/Link';\nimport { useAppContext } from '../../app-context/provider';\nimport { Tree } from '../../../use-cases/contracts/Tree';\n\nexport const TopicNavigation: React.FC<{ navigation: Tree[] }> = ({ navigation }) => {\n    const { path } = useAppContext();\n    return (\n        <>\n            {navigation.map((topic) => {\n                const numberOfTopics = topic.children.length;\n                const calculateColumns = numberOfTopics / 8;\n                const numberOfCols = calculateColumns <= 1 ? 1 : Math.round(calculateColumns);\n                return (\n                    <span className=\"nav-anchor \" key={topic.path}>\n                        <span className=\"text-lg lg:text-[16px] block hover:underline\">{topic.name}</span>\n                        <span className=\"hidden lg:flex text-[11px] caret\">\u25BC</span>\n                        <ul className=\"nav-dropdown\" style={{ gridTemplateColumns: `repeat(${numberOfCols}, 1fr)` }}>\n                            {topic.children?.map((child: any) => (\n                                <Link to={path(child.path)} key={child.path}>\n                                    <li className=\"hover:bg-grey text h-full text-sm w-full\">{child.name}</li>\n                                </Link>\n                            ))}\n                        </ul>\n                    </span>\n                );\n            })}\n        </>\n    );\n};\n", "'use client';\nimport UserIcon from '~/assets/userIcon.svg';\nimport Link from '~/bridge/ui/Link';\nimport { SearchBar } from '../search/search-bar';\nimport { BasketButton } from './basket-button';\nimport { TopicNavigation } from './topic-navigation';\nimport { useEffect, useState } from 'react';\nimport { useAppContext } from '../../app-context/provider';\nimport { Image } from '@crystallize/reactjs-components';\nimport { Price } from '../price';\nimport { LanguageSwitcher } from './language-switcher';\nimport { Tree } from '../../../use-cases/contracts/Tree';\nimport { TenantLogo } from '../../lib/tenant-logo';\nimport useLocation from '~/bridge/ui/useLocation';\n\nexport const Header: React.FC<{\n    navigation: {\n        folders: Tree[];\n        topics: Tree[];\n    };\n}> = ({ navigation }) => {\n    const { state: appContextState, dispatch: appContextDispatch, path } = useAppContext();\n    let checkoutFlow = ['/cart', '/checkout', '/confirmation'];\n    let [isOpen, setIsOpen] = useState(false);\n    let location = useLocation();\n    let paths = [\n        { path: '/cart', name: 'Cart' },\n        { path: '/checkout', name: 'Checkout' },\n        { path: '/confirmation', name: 'Confirmation' },\n    ];\n\n    useEffect(() => {\n        setIsOpen(false);\n    }, [location.pathname]);\n\n    useEffect(() => {\n        if (appContextState.latestAddedCartItems.length === 0) {\n            return;\n        }\n        let timeout: ReturnType<typeof setTimeout>;\n        setTimeout(() => {\n            appContextDispatch.resetLastAddedItems();\n        }, 3000);\n        return () => clearTimeout(timeout);\n    }, [appContextState.latestAddedCartItems]);\n\n    return (\n        <header className=\"2xl w-full mx-auto lg:p-8 lg:px-6\">\n            {appContextState.latestAddedCartItems.length > 0 && (\n                <div className=\"border-[#dfdfdf] border rounded-md shadow fixed max-w-full sm:top-2 sm:right-2 bg-[#fff]  z-[60]  p-6\">\n                    <p className=\"font-bold text-md mb-3 pb-2\">Added product(s) to cart</p>\n                    {appContextState.latestAddedCartItems.map((item, index) => {\n                        return (\n                            <div className=\"flex p-3 mt-1 items-center bg-grey2 gap-3\" key={index}>\n                                <div className=\"max-w-[35px] max-h-[50px] img-container img-contain\">\n                                    <Image {...item.images?.[0]} sizes=\"100px\" fallbackAlt={item.name} key={item.id} />\n                                </div>\n                                <div>\n                                    <p className=\"text-sm\">{item.name}</p>\n                                    <div className=\"text-sm font-bold\">\n                                        <Price variant={item} size=\"small\" />\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })}\n                    <div className=\"flex gap-3 mt-3 items-center border-t pt-2 border-t-[#dfdfdf]\">\n                        <button\n                            data-testid=\"go-to-cart-button\"\n                            className=\"bg-grey text-sm text-[#000] font-bold py-2 px-4 rounded-md\"\n                        >\n                            <Link to={path('/cart')}>Go to cart</Link>\n                        </button>\n                    </div>\n                </div>\n            )}\n            <div className=\"lg:mb-5 mb-20\">\n                {checkoutFlow.includes(location.pathname) ? (\n                    <nav className=\"flex container px-4 mx-auto gap-20 flex-auto items-center justify-between mb-5 w-full\">\n                        <div className=\"flex flex-auto justify-between items-center w-1/4\">\n                            <Link to={path('/')}>\n                                <div className=\"max-h-[80px] h-[30px] max-w-[100%] img-container\">\n                                    <TenantLogo\n                                        logo={appContextState.logo}\n                                        identifier={appContextState.crystallize.tenantIdentifier}\n                                    />\n                                </div>\n                            </Link>\n                        </div>\n                        <div className=\"flex w-3/4 gap-5 justify-end\">\n                            {paths.map((urlPath) => (\n                                <div\n                                    key={urlPath.path}\n                                    className={`w-1/4 border-b-4 pb-2 ${\n                                        location.pathname === urlPath.path\n                                            ? 'border-b-[#000] text-[#000]'\n                                            : 'border-b-grey5 text-grey5'\n                                    }`}\n                                >\n                                    <Link to={path(urlPath.path)} prefetch=\"intent\" className=\"text-sm font-medium\">\n                                        {urlPath.name}\n                                    </Link>\n                                </div>\n                            ))}\n                        </div>\n                    </nav>\n                ) : (\n                    <div className=\"justify-between-full fixed z-40 bg-[#fff] w-full left-0 top-0\">\n                        <div className=\"flex flex-auto items-center mx-auto px-6 xl:container pt-3 pb-2\">\n                            <div className=\"flex mx-auto flex-auto justify-between items-center relative\">\n                                <div className=\"flex gap-4 md:gap-10 items-center\">\n                                    <Link to={path('/')}>\n                                        <div className=\"max-h-[80px] h-[30px] max-w-[100%] img-container\">\n                                            <TenantLogo\n                                                logo={appContextState.logo}\n                                                identifier={appContextState.crystallize.tenantIdentifier}\n                                            />\n                                        </div>\n                                    </Link>\n                                    <div\n                                        className={`flex gap-10 lg:flex lg:items-center lg:flex-row flex-col lg:w-auto lg:h-auto lg:relative lg:px-0 lg:py-0 lg:mt-0 lg:top-0 ${\n                                            isOpen ? 'block' : 'hidden'\n                                        } top-10 mt-5 bg-[#fff] w-full right-0 left-0 z-50 h-screen fixed left-0 bottom-0 px-10 py-10`}\n                                    >\n                                        <SearchBar />\n                                        {navigation.folders\n                                            .filter((item) => {\n                                                return (\n                                                    item.type === 'folder' &&\n                                                    item.children.length > 0 &&\n                                                    !item.name.startsWith('_')\n                                                );\n                                            })\n                                            .map((item: any) => {\n                                                return (\n                                                    <Link\n                                                        to={path(item.path)}\n                                                        prefetch=\"intent\"\n                                                        key={item.path}\n                                                        className=\"hover:underline\"\n                                                    >\n                                                        {item.name}\n                                                    </Link>\n                                                );\n                                            })}\n                                        <TopicNavigation navigation={navigation.topics} />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"flex flex-auto items-center justify-end h-[40px] w-[100px]\">\n                                <Link to={path('/orders')} className=\"p-2 rounded-md hover:bg-[#efefef]\">\n                                    <img\n                                        className=\"w-[30px] h-[30px]\"\n                                        src={`${UserIcon}`}\n                                        width=\"25\"\n                                        height=\"25\"\n                                        alt=\"User icon\"\n                                    />\n                                </Link>\n                                <BasketButton />\n                                <LanguageSwitcher />\n                            </div>\n                            <div className=\"z-50 p-[10px] h-[40px] text-center rounded-md cursor-pointer hover:bg-[#efefef] lg:hidden block\">\n                                <button\n                                    onClick={() => setIsOpen(!isOpen)}\n                                    type=\"button\"\n                                    className=\"focus:outline-none\"\n                                    aria-controls=\"mobile-menu\"\n                                    aria-label=\"Mobile Menu\"\n                                    title=\"Mobile Menu\"\n                                    aria-expanded=\"false\"\n                                >\n                                    {!isOpen ? (\n                                        <svg\n                                            className=\"block h-6 w-6\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            fill=\"none\"\n                                            viewBox=\"0 0 24 24\"\n                                            stroke=\"currentColor\"\n                                            aria-hidden=\"true\"\n                                        >\n                                            <path\n                                                strokeLinecap=\"round\"\n                                                strokeLinejoin=\"round\"\n                                                strokeWidth=\"2\"\n                                                d=\"M4 6h16M4 12h16M4 18h16\"\n                                            />\n                                        </svg>\n                                    ) : (\n                                        <svg\n                                            className=\"block h-6 w-6\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            fill=\"none\"\n                                            viewBox=\"0 0 24 24\"\n                                            stroke=\"currentColor\"\n                                            aria-hidden=\"true\"\n                                        >\n                                            <path\n                                                strokeLinecap=\"round\"\n                                                strokeLinejoin=\"round\"\n                                                strokeWidth=\"2\"\n                                                d=\"M6 18L18 6M6 6l12 12\"\n                                            />\n                                        </svg>\n                                    )}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </header>\n    );\n};\n", "import { useAppContext } from '../../app-context/provider';\nimport { buildLanguageMarketAwareLink, displayableLanguages } from '../../../use-cases/LanguageAndMarket';\n\nexport const LanguageSwitcher = () => {\n    const { state } = useAppContext();\n    const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        const path = '/' + window.location.pathname.split('/').slice(2).join('/');\n        window.location.href = buildLanguageMarketAwareLink(path, event.target.value);\n    };\n    return (\n        <select\n            value={state.language}\n            onChange={handleChange}\n            className=\"w-[60px] px-2 border-2 hover:cursor-pointer\"\n            aria-label=\"Language switcher\"\n        >\n            {displayableLanguages.map((lang) => (\n                <option value={lang.code} key={lang.code} disabled={state.language === lang.code}>\n                    {lang.name}\n                </option>\n            ))}\n        </select>\n    );\n};\n", "import { Image } from '@crystallize/reactjs-components';\n\nexport function TenantLogo({ identifier, logo }: { identifier: string; logo: any }) {\n    if (logo.key === 'superfast-originated-logo' && logo.length > 0) {\n        return (\n            <img\n                src={logo.url}\n                width=\"150\"\n                height=\"30\"\n                alt={identifier + ` logo`}\n                style={{\n                    width: 'auto',\n                    height: '100%',\n                }}\n                loading=\"eager\"\n            />\n        );\n    }\n    return (\n        <Image\n            {...logo}\n            key={logo.key}\n            sizes=\"150px\"\n            alt={identifier + ` logo`}\n            className=\"w-auto h-full\"\n            width={170}\n            height={30}\n            style={{\n                width: 'auto',\n                height: '100%',\n            }}\n            loading=\"eager\"\n        />\n    );\n}\n", "import { useLocation } from '@remix-run/react';\n\nexport default () => {\n    return useLocation();\n};\n", "'use client';\nimport { ContentTransformer, Image } from '@crystallize/reactjs-components';\nimport CrystallizeLogo from '~/assets/crystallizeLogo.svg';\nimport { TenantLogo } from '../../lib/tenant-logo';\nimport { useAppContext } from '../../app-context/provider';\nimport { Footer as FooterType } from '~/use-cases/contracts/Footer';\n\nexport const Footer: React.FC<{\n    footer: FooterType;\n}> = ({ footer }) => {\n    const { state: appContextState } = useAppContext();\n\n    return (\n        <footer className=\"2xl w-full mx-auto\">\n            <div className=\"mt-60\">\n                <div className=\"px-6\">\n                    <div className=\"grid sm:grid-cols-3 grid-cols-1 gap-3\">\n                        <div className=\"flex flex-col gap-4\">\n                            <div className=\"max-h-[80px] h-[30px] max-w-[100%] img-container\">\n                                <TenantLogo\n                                    logo={appContextState.logo}\n                                    identifier={appContextState.crystallize.tenantIdentifier}\n                                />\n                            </div>\n                            <div>\n                                <ContentTransformer json={footer.contact.json} />\n                            </div>\n                            {footer.socialLinks && (\n                                <div className=\"flex gap-2 items-center\">\n                                    {footer.socialLinks.map((socialLink, index) => (\n                                        <a\n                                            key={socialLink.link + index}\n                                            href={socialLink.link}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            <Image\n                                                {...socialLink.logo?.[0]}\n                                                sizes=\"100px\"\n                                                fallbackAlt={socialLink.link}\n                                                width={23}\n                                                height={23}\n                                            />\n                                        </a>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"footer-links\">\n                            <ContentTransformer json={footer.links.json} />\n                        </div>\n                    </div>\n\n                    <div className=\"mx-auto flex items-center mt-20 mb-5 border-t border-grey pt-3 justify-between items-center\">\n                        <div className=\"flex items-center\">\n                            <img src={`${CrystallizeLogo}`} alt=\"Crystallize logo\" width=\"38\" height=\"31\" />\n                            <p>\n                                Powered by{' '}\n                                <a href=\"https://crystallize.com\" className=\"underline\">\n                                    Crystallize\n                                </a>\n                            </p>\n                        </div>\n                        <p>{footer.copyright}</p>\n                    </div>\n                </div>\n                {footer.promotions.cards.length > 0 && (\n                    <div className=\"bg-footerBg p-5\">\n                        <p className=\"text-2xl text-center text-white max-w-[50%] mx-auto my-10\">\n                            {footer.promotions.heading}\n                        </p>\n                        <div className=\"flex flex-wrap md:justify-between mt-5 gap-3 justify-center mb-10\">\n                            {footer.promotions.cards.map((promotion, index) => (\n                                <div key={promotion.title + index} className=\"flex border-white border flex-col p-5\">\n                                    <div className=\"w-[40px] h-[40px] img-container overflow-hidden border-white border rounded-full p-1\">\n                                        <Image {...promotion.image?.[0]} sizes=\"100vw\" fallbackAlt={promotion.title} />\n                                    </div>\n                                    <div className=\"flex justify-between mt-5 items-end\">\n                                        <p className=\"text-lg text-[#fff] max-w-[80%]\">{promotion.title}</p>\n                                        <a href={promotion.link} className=\"text-white\" title={promotion.title}>\n                                            \u2192\n                                        </a>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </footer>\n    );\n};\n", "import fs from 'fs';\nimport {\n    createSuperFastAdapter,\n    createStoreFront,\n    createFilesystemAdapter,\n    createMemoryAdapter,\n    TStoreFrontConfig,\n} from '@crystallize/js-storefrontaware-utils';\nimport { configureStorage } from './storage.server';\nimport {\n    CrystalFakePaymentImplementation,\n    PaymentImplementation,\n    StoreFrontConfiguration,\n} from './contracts/StoreFrontConfiguration';\nimport { getCurrencyFromCode } from './contracts/Currency';\nimport { TenantConfiguration } from './contracts/TenantConfiguration';\nimport { CreateClientOptions } from '@crystallize/js-api-client';\n\nconst storage = configureStorage(`${process.env?.STORAGE_DSN}`, {\n    prefix: 'superfast-',\n});\n\nexport const getStoreFront = async (hostname: string) => {\n    const adapter = (() => {\n        // if there is a file for the StoreFront, use that, note that it's safer to use the MemoryAdapter\n        if (process.env?.STOREFRONT_CONFIG_FILE) {\n            try {\n                if (fs.existsSync(process.env.STOREFRONT_CONFIG_FILE)) {\n                    return createFilesystemAdapter(process.env.STOREFRONT_CONFIG_FILE);\n                }\n            } catch (err) {\n                // nothing to do let it go and fallback to the default\n            }\n        }\n\n        // Default scenario: use the MemoryAdapter\n        if (!process.env?.SUPERFAST_ACCESS_TOKEN_SECRET) {\n            return createMemoryAdapter({\n                identifier: `${process.env.STOREFRONT_IDENTIFIER}`,\n                tenantIdentifier: `${process.env.CRYSTALLIZE_TENANT_IDENTIFIER}`,\n                language: `${process.env.STOREFRONT_LANGUAGE}`,\n                storefront: 'custom',\n                logo: {\n                    key: 'superfast-originated-logo',\n                    url: process.env.STOREFRONT_STATIC_LOGO_URL ?? '',\n                    variants: [],\n                },\n                enabled: true,\n                id: 'inMemory',\n                name: `custom`,\n                paymentMethods: ['crystal', 'stripe', 'quickpay', 'klarna', 'razorpay', 'montonio', 'adyen', 'vipps'],\n                taxIncluded: false,\n                superfastVersion: '0.0.0',\n                tenantId: `${process.env.CRYSTALLIZE_TENANT_ID}`,\n                theme: `${process.env.STOREFRONT_THEME}`,\n                configuration: {\n                    CRYSTALLIZE_ACCESS_TOKEN_ID: `${process.env.CRYSTALLIZE_ACCESS_TOKEN_ID}`,\n                    CRYSTALLIZE_ACCESS_TOKEN_SECRET: `${process.env.CRYSTALLIZE_ACCESS_TOKEN_SECRET}`,\n                },\n            });\n        }\n\n        // Superfast fallback scenario: use the Superfast Registry to get the config\n        return createSuperFastAdapter(\n            hostname,\n            {\n                tenantIdentifier: `${process.env.SUPERFAST_TENANT_IDENTIFIER}`,\n                accessTokenId: process.env.SUPERFAST_ACCESS_TOKEN_ID,\n                accessTokenSecret: process.env.SUPERFAST_ACCESS_TOKEN_SECRET,\n            },\n            storage,\n            600,\n        );\n    })();\n\n    const createClientOptions: CreateClientOptions | undefined = process.env?.ENABLE_JS_API_CLIENT_PROFILING\n        ? {\n              profiling: {\n                  onRequestResolved: ({ resolutionTimeMs, serverTimeMs }, query, variables) => {\n                      const timings = `[JS-API-CLIENT]: Request processed in ${serverTimeMs}ms, resolved in ${resolutionTimeMs}ms.`;\n                      if (process.env?.ENABLE_JS_API_CLIENT_PROFILING === 'verbose') {\n                          console.log(timings, { query, variables });\n                          return;\n                      }\n                      console.log(timings);\n                  },\n              },\n          }\n        : undefined;\n\n    const [shared, secret] = await Promise.all([\n        createStoreFront(adapter, false, createClientOptions),\n        createStoreFront(adapter, true, createClientOptions),\n    ]);\n    return { shared, secret };\n};\n\n/**\n * For Client-side only, don't put any server-side secret here\n */\nexport const buildStoreFrontConfiguration = (\n    locale: string,\n    serviceApiUrl: string,\n    storeFrontConfig: TStoreFrontConfig,\n    tenantConfig: TenantConfiguration,\n): StoreFrontConfiguration => {\n    return {\n        crystallize: {\n            tenantIdentifier: process.env.CRYSTALLIZE_TENANT_IDENTIFIER ?? storeFrontConfig.tenantIdentifier,\n            tenantId: process.env.CRYSTALLIZE_TENANT_ID ?? storeFrontConfig.tenantId,\n        },\n        language: locale.split('-')[0],\n        locale: locale,\n        theme: process.env.STOREFRONT_THEME ?? storeFrontConfig.theme,\n        currency: process.env.STOREFRONT_CURRENCY\n            ? getCurrencyFromCode(`${process.env.STOREFRONT_CURRENCY}`.toUpperCase())\n            : tenantConfig.currency,\n        logo: tenantConfig.logo ?? storeFrontConfig.logo,\n        serviceApiUrl,\n        crystalPayments: process.env?.CRYSTAL_PAYMENTS\n            ? (process.env.CRYSTAL_PAYMENTS.split(',') as CrystalFakePaymentImplementation[])\n            : ['coin', 'card'],\n        paymentImplementations: process.env?.PAYMENT_IMPLEMENTATIONS\n            ? (process.env.PAYMENT_IMPLEMENTATIONS.split(',') as PaymentImplementation[])\n            : (storeFrontConfig.paymentMethods as PaymentImplementation[]),\n        paymentImplementationVariables: {\n            stripe: {\n                PUBLIC_KEY: process.env.STRIPE_PUBLIC_KEY ?? storeFrontConfig.configuration.STRIPE_PUBLIC_KEY,\n            },\n            razorpay: {\n                RAZORPAY_ID: process.env.RAZORPAY_ID ?? storeFrontConfig.configuration.RAZORPAY_ID,\n            },\n            adyen: {\n                ENVIRONMENT: process.env.ADYEN_ENV ?? storeFrontConfig.configuration.ADYEN_ENV,\n                MERCHANT_ACCOUNT:\n                    process.env.ADYEN_MERCHANT_ACCOUNT ?? storeFrontConfig.configuration.ADYEN_MERCHANT_ACCOUNT,\n                CLIENT_KEY: process.env.ADYEN_CLIENT_KEY ?? storeFrontConfig.configuration.ADYEN_CLIENT_KEY,\n            },\n            vipps: {\n                ORIGIN: process.env.VIPPS_ORIGIN ?? storeFrontConfig.configuration.VIPPS_ORIGIN,\n                CLIENT_ID: process.env.VIPPS_CLIENT_ID ?? storeFrontConfig.configuration.VIPPS_CLIENT_ID,\n            },\n        },\n    };\n};\n", "import * as redis from 'redis';\nimport { BackendStorage, StorageOptions } from './contracts/BackendStorage';\n\nfunction createRedisStorageEngine(dsn: string | undefined, options: StorageOptions = {}): BackendStorage {\n    const prefix = options?.prefix ?? '';\n    let redisDSN = `${dsn || 'redis://127.0.0.1:6379'}`;\n    const config = require('platformsh-config').config();\n    if (config.isValidPlatform()) {\n        const credentials = config.credentials('redis');\n        redisDSN = `redis://${credentials.host}:${credentials.port}`;\n    }\n    const client = redis.createClient({ url: redisDSN });\n    client.connect();\n    return {\n        get: async (key: string) => await client.get(`${prefix}${key}`),\n        set: async (key: string, value: any, ttl?: number | undefined) => {\n            await client.set(`${prefix}${key}`, value);\n            if (ttl) {\n                client.expireAt(`${prefix}${key}`, Math.floor(Date.now() / 1000) + ttl);\n            }\n        },\n    };\n}\n\nfunction createMemoryStorageEngine(options: StorageOptions = {}): BackendStorage {\n    const prefix = options?.prefix ?? '';\n    const store = new Map();\n    return {\n        get: async (key: string) => {\n            const hit = store.get(`${prefix}${key}`);\n            if (!hit) return undefined;\n            const { value, ttl } = hit;\n            return !ttl || ttl > Date.now() / 1000 ? value : undefined;\n        },\n        set: async (key: string, value: any, ttl?: number) => {\n            store.set(`${prefix}${key}`, {\n                value,\n                ttl: ttl && Math.floor(Date.now() / 1000) + ttl,\n            });\n        },\n    };\n}\n\n/**\n * Configure a storage adapter based on the provided dsn\n * dsn=redis://host:port will create a redis storage engine\n * dsn=memory:// will create an in-memory storage engine\n *\n * @param dsn Connection string\n * @param options Object with options: prefix\n */\nexport function configureStorage(dsn: string, options: StorageOptions = {}): BackendStorage {\n    if (dsn?.startsWith?.('redis://')) {\n        return createRedisStorageEngine(dsn, options);\n    }\n    if (!global.__gStorage) global.__gStorage = {};\n    if (!global.__gStorage[dsn]) {\n        global.__gStorage[dsn] = createMemoryStorageEngine(options);\n    }\n    return global.__gStorage[dsn];\n}\n\ndeclare global {\n    var __gStorage: Record<string, BackendStorage>;\n}\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (\n    apiClient: ClientInterface,\n    path: string,\n    version: any,\n    language: string,\n    marketIdentifiers: string[] = [],\n) => {\n    return (\n        await apiClient.catalogueApi(\n            `#graphql\nquery ($language: String!, $path: String!, $version: VersionLabel, $marketIdentifiers: [String!]!) {\n    catalogue(path: $path, language: $language, version: $version) {\n      ... on Item {\n        name\n        path\n        meta: component(id:\"meta\"){\n          content {\n            ...on ContentChunkContent {\n              chunks {\n                id\n                type\n                content {\n                  ...on SingleLineContent {\n                    text\n                  }\n                  ...on RichTextContent {\n                    plainText\n                  }\n                  ...on ImageContent {\n                    firstImage {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        grids: component(id: \"grid\") {\n          content {\n            ... on GridRelationsContent {\n              grids {\n                rows {\n                  columns {\n                    layout {\n                      rowspan\n                      colspan\n                      colIndex\n                      rowIndex\n                    }\n                    item {\n                      name\n                      path\n                      type\n                      shape {\n                        identifier\n                      }\n                      ...on Product {\n                        defaultVariant {\n                          price\n                          priceVariants {\n                            identifier\n                            name\n                            price\n                            currency\n                            priceFor(marketIdentifiers: $marketIdentifiers) {\n                                identifier\n                                price\n                            }\n\n                          }\n                          images {\n                            variants {\n                              url\n                              width\n                              height\n                            }\n                          }\n                        }\n                      }\n                      components {\n                        type\n                        id\n                        content {\n                          ...on BooleanContent{\n                            value\n                          }\n                          ... on SingleLineContent {\n                            text\n                          }\n                          ... on RichTextContent {\n                            plainText\n                            json\n                          }\n                          ... on ImageContent {\n                            images {\n                              url\n                              altText\n                              variants {\n                                url\n                                width\n                                height\n                              }\n                            }\n                          }\n                          ... on ComponentChoiceContent {\n                            selectedComponent {\n                              name\n                              content {\n                                ...on SingleLineContent {\n                                  text\n                                }\n                                    ... on VideoContent {\n                                    videos {\n                                        title\n                                        playlists\n                                        id\n                                        thumbnails {\n                                            variants {\n                                                url\n                                                width\n                                                height\n                                            }\n                                        }\n                                    }\n                                }\n                                ... on ImageContent {\n                                  images {\n                                    url\n                                    altText\n                                    variants {\n                                      url\n                                      width\n                                      height\n                                    }\n                                  }\n                                }\n                                ... on ItemRelationsContent {\n                                  items {\n                                    name\n                                    type\n                                    path\n                                    components {\n                                      id\n                                      content {\n                                        ...on SingleLineContent {\n                                          text\n                                        }\n                                        ...on RichTextContent {\n                                          plainText\n                                        }\n                                        ...on ComponentChoiceContent {\n                                          selectedComponent {\n                                            content {\n                                              ...on ImageContent {\n                                                firstImage {\n                                                  url\n                                                  altText\n                                                  variants {\n                                                    url\n                                                    width\n                                                    height\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ...on Product {\n                                      id\n                                      defaultVariant {\n                                        price\n                                        priceVariants {\n                                          identifier\n                                          name\n                                          price\n                                          currency\n                                          priceFor(marketIdentifiers: $marketIdentifiers) {\n                                            identifier\n                                            price\n                                          }\n                                        }\n                                        firstImage {\n                                          url\n                                          altText\n                                          variants {\n                                            url\n                                            width\n                                            height\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                          ... on ContentChunkContent {\n                            chunks {\n                              id  \n                              content {\n                                ... on NumericContent {\n                                  number\n                                  unit\n                                }\n                                ...on SingleLineContent{\n                                    text\n                                }\n                                ...on SelectionContent {\n                                    options {\n                                        key\n                                        value\n                                    }\n                                }\n                                ...on BooleanContent {\n                                    value\n                                }\n                                ... on ItemRelationsContent {\n                                  items {\n                                    name\n                                    type\n                                    path\n                                    ...on Product {\n                                      id\n                                      defaultVariant {\n                                        price\n                                        priceVariants {\n                                          identifier\n                                          name\n                                          price\n                                          currency\n                                          priceFor(marketIdentifiers: $marketIdentifiers) {\n                                            identifier\n                                            price\n                                          }\n                                        }\n                                        firstImage {\n                                          url\n                                          altText\n                                          variants {\n                                            url\n                                            width\n                                            height\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                                ...on PropertiesTableContent {\n                                    sections {\n                                        title\n                                        properties {\n                                            key\n                                            value\n                                        }\n                                    }\n                                }\n                              }\n                            }\n                          }\n                          ... on SelectionContent {\n                            options {\n                              value\n                              key\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }`,\n            {\n                language,\n                path,\n                version: version === 'draft' ? 'draft' : 'published',\n                marketIdentifiers,\n            },\n        )\n    ).catalogue;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (\n    apiClient: ClientInterface,\n    path: string,\n    version: string,\n    language: string,\n    marketIdentifiers: string[] = [],\n) => {\n    return (\n        await apiClient.catalogueApi(\n            `#graphql\nquery ($language: String!, $path: String!, $version: VersionLabel, $marketIdentifiers: [String!]!) {\n    catalogue(path: $path, language: $language, version: $version) {\n      ... on Item {\n        name\n        createdAt\n        updatedAt\n        path\n        shape {\n          identifier\n        }\n        meta: component(id:\"meta\"){\n          content {\n            ...on ContentChunkContent {\n              chunks {\n                id\n                content {\n                  ...on SingleLineContent {\n                    text\n                  }\n                  ...on RichTextContent {\n                    plainText\n                  }\n                  ...on ImageContent {\n                    firstImage {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        components {\n          type\n          id\n          content {\n            ...on SingleLineContent {\n              text\n            }\n            ...on RichTextContent {\n              json\n              plainText\n            }\n            ...on ImageContent {\n              images {\n                variants {\n                  url\n                  width\n                  height\n                }\n              }\n            }\n            ...on ContentChunkContent {\n              chunks {\n                id\n                name\n                type\n                content {\n                  ... on SingleLineContent {\n                    text\n                  }\n                  ... on NumericContent {\n                    number\n                    unit\n                  }\n                  ... on ItemRelationsContent {\n                    items {\n                      name\n                      type\n                      path\n                      ...on Product {\n                        id\n                        defaultVariant {\n                            id\n                            name\n                            sku\n                          priceVariants {\n                            identifier\n                            name\n                            price\n                            currency\n                            priceFor(marketIdentifiers: $marketIdentifiers) {\n                                identifier\n                                price\n                            }\n                        }\n                          firstImage {\n                            url\n                            altText\n                            variants {\n                              url\n                              width\n                              height\n                            }\n                          }\n                        stockLocations {\n                            identifier\n                            name\n                            stock\n                          }\n                        }\n                        variants {\n                          id\n                          name\n                          sku\n                          price\n                          priceVariants {\n                            identifier\n                            name\n                            price\n                            currency\n                            priceFor(marketIdentifiers: $marketIdentifiers) {\n                                identifier\n                                price\n                            }\n                          }\n                          attributes {\n                            value\n                            attribute\n                          }\n                          stockLocations {\n                            identifier\n                            name\n                            stock\n                          }\n                          isDefault\n                          images {\n                            url\n                            altText\n                            key\n                      \n                            variants {\n                              key\n                              height\n                              width\n                              url\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            ...on PropertiesTableContent {\n              sections {\n                properties {\n                  key\n                  value\n                }\n              }\n            }\n            ...on ComponentChoiceContent {\n              selectedComponent {\n                id\n                content {\n                  ...on ImageContent {\n                    images {\n                      variants {\n                        url\n                        width\n                        height\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            ... on ItemRelationsContent {\n              items {\n                name\n                type\n                path\n                ...on Product {\n                  defaultVariant {\n                    priceVariants {\n                        identifier\n                        name\n                        price\n                        currency\n                        priceFor(marketIdentifiers: $marketIdentifiers) {\n                            identifier\n                            price\n                        }\n                    }\n                    images {\n                      variants {\n                        url\n                        width\n                      }\n                    }\n                    price\n                  }\n                }\n                components {\n                  name\n                  content {\n                    ... on SingleLineContent {\n                      text\n                    }\n                     ...on ComponentChoiceContent {\n                      selectedComponent {\n                        content {\n                          ...on ImageContent {\n                            images {\n                              variants {\n                                url\n                                width\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            ...on ParagraphCollectionContent {\n              paragraphs {\n                title {\n                  text\n                }\n                body {\n                  json\n                }\n                images {\n                  url\n                  variants {\n                    url\n                    width\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }`,\n            {\n                language,\n                path,\n                version: version === 'draft' ? 'draft' : 'published',\n                marketIdentifiers,\n            },\n        )\n    ).catalogue;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (\n    apiClient: ClientInterface,\n    path: string,\n    version: string,\n    language: string,\n    marketIdentifiers: string[] = [],\n) => {\n    return (\n        await apiClient.catalogueApi(\n            `#graphql\nquery ($language: String!, $path: String!, $version: VersionLabel, $marketIdentifiers: [String!]!) {\n    catalogue(language: $language, path: $path, version: $version) {\n        id\n        name\n        path\n        meta: component(id:\"meta\"){\n          content {\n            ...on ContentChunkContent {\n              chunks {\n                id\n                type\n                content {\n                  ...on SingleLineContent {\n                    text\n                  }\n                  ...on RichTextContent {\n                    plainText\n                  }\n                  ...on ImageContent {\n                    firstImage {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        components {\n          type\n          id\n          content {\n            ...on SingleLineContent {\n              text\n            }\n            ...on RichTextContent {\n              plainText\n            }\n            ... on ComponentChoiceContent {\n              selectedComponent {\n                name\n                content {\n                    ... on GridRelationsContent {\n                        grids {\n                          rows {\n                            columns {\n                              layout {\n                                rowspan\n                                colspan\n                                colIndex\n                                rowIndex\n                              }\n                              item {\n                                name\n                                path\n                                type\n                                shape {\n                                  identifier\n                                }\n                                ...on Product {\n                                  defaultVariant {\n                                    price\n                                    attributes {\n                                        value\n                                        attribute\n                                    }\n                                    priceVariants {\n                                      identifier\n                                      name\n                                      price\n                                      currency\n                                      priceFor(marketIdentifiers: $marketIdentifiers) {\n                                        identifier\n                                        price\n                                      }\n                                    }\n                                    images {\n                                      variants {\n                                        url\n                                        height\n                                        width\n                                      }\n                                    }\n                                  }\n                                }\n                                components {\n                                  type\n                                  id\n                                  content {\n                                    ...on BooleanContent{\n                                      value\n                                    }\n                                    ... on SingleLineContent {\n                                      text\n                                    }\n                                    ... on RichTextContent {\n                                      plainText\n                                    }\n                                    ... on ImageContent {\n                                      images {\n                                        url\n                                        altText\n                                        variants {\n                                          url\n                                          width\n                                          height\n                                        }\n                                      }\n                                    }\n                                    ... on ComponentChoiceContent {\n                                      selectedComponent {\n                                        name\n                                        content {\n                                          ...on SingleLineContent {\n                                            text\n                                          }\n                                          ... on VideoContent {\n                                            videos {\n                                                title\n                                                playlists\n                                                id\n                                                thumbnails {\n                                                    variants {\n                                                        url\n                                                        width\n                                                        height\n                                                    }\n                                                }\n                                            }\n                                        }\n                                          ... on ImageContent {\n                                            images {\n                                              url\n                                              altText\n                                              variants {\n                                                url\n                                                width\n                                                height\n                                              }\n                                            }\n                                          }\n                                          ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              components {\n                                                id\n                                                content {\n                                                  ...on SingleLineContent {\n                                                    text\n                                                  }\n                                                  ...on RichTextContent {\n                                                    plainText\n                                                  }\n                                                  ...on ComponentChoiceContent {\n                                                    selectedComponent {\n                                                      content {\n                                                        ...on ImageContent {\n                                                          firstImage {\n                                                            url\n                                                            altText\n                                                            variants {\n                                                              url\n                                                              width\n                                                              height\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                              ...on Product {\n                                                defaultVariant {\n                                                  price\n                                                  priceVariants {\n                                                    identifier\n                                                    name\n                                                    price\n                                                    currency\n                                                    priceFor(marketIdentifiers: $marketIdentifiers) {\n                                                        identifier\n                                                        price\n                                                    }\n                                                  }\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on ContentChunkContent {\n                                      chunks {\n                                        id  \n                                        content {\n                                          ... on NumericContent {\n                                            number\n                                            unit\n                                          }\n                                          ...on SingleLineContent{\n                                              text\n                                          }\n                                          ...on SelectionContent {\n                                              options {\n                                                  value\n                                                  key \n                                              }\n                                          }\n                                          ...on BooleanContent {\n                                              value\n                                          }\n                                          ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              ...on Product {\n                                                id\n                                                defaultVariant {\n                                                  price\n                                                  priceVariants {\n                                                    identifier\n                                                    name\n                                                    price\n                                                    currency\n                                                    priceFor(marketIdentifiers: $marketIdentifiers) {\n                                                        identifier\n                                                        price\n                                                    }\n                                                  }\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                          ...on PropertiesTableContent {\n                                              sections {\n                                                  title\n                                                  properties {\n                                                      key\n                                                      value\n                                                  }\n                                              }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on SelectionContent {\n                                      options {\n                                        value\n                                        key\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                  \n                  ... on ItemRelationsContent {\n                    items {\n                      name\n                      path\n                      type\n                      shape {\n                        identifier\n                      }\n                      components {\n                        type\n                        id\n                        content {\n                            ...on BooleanContent{\n                                value\n                            }\n                            ... on SingleLineContent {\n                                text\n                            }\n                            ... on RichTextContent {\n                                plainText\n                            }\n                            ... on ImageContent {\n                                images {\n                                    url\n                                    altText\n                                    variants {\n                                      url\n                                      width\n                                      height\n                                    }\n                                }\n                            }\n                            ... on ComponentChoiceContent {\n                                selectedComponent {\n                                    name\n                                    content {\n                                        ...on SingleLineContent {\n                                            text\n                                        }\n                                        ... on VideoContent {\n                                            videos {\n                                                title\n                                                playlists\n                                                id\n                                                thumbnails {\n                                                    variants {\n                                                        url\n                                                        width\n                                                        height\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        ... on ImageContent {\n                                            images {\n                                              url\n                                              altText\n                                              variants {\n                                                url\n                                                width\n                                                height\n                                              }\n                                            } \n                                        }\n                                        ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              components {\n                                                id\n                                                content {\n                                                  ...on SingleLineContent {\n                                                    text\n                                                  }\n                                                  ...on RichTextContent {\n                                                    plainText\n                                                  }\n                                                  ...on ComponentChoiceContent {\n                                                    selectedComponent {\n                                                      content {\n                                                        ...on ImageContent {\n                                                          firstImage {\n                                                            url\n                                                            altText\n                                                            variants {\n                                                              url\n                                                              width\n                                                              height\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                              ...on Product {\n                                                defaultVariant {\n                                                  price\n                                                  priceVariants {\n                                                    identifier\n                                                    name\n                                                    price\n                                                    currency\n                                                    priceFor(marketIdentifiers: $marketIdentifiers) {\n                                                        identifier\n                                                        price\n                                                    }\n                                                  }\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on ContentChunkContent {\n                                      chunks {\n                                        id  \n                                        content {\n                                          ... on NumericContent {\n                                            number\n                                            unit\n                                          }\n                                          ...on SingleLineContent{\n                                              text\n                                          }\n                                          ...on SelectionContent {\n                                              options {\n                                                  value\n                                                  key\n                                              }\n                                          }\n                                          ...on BooleanContent {\n                                              value\n                                          }\n                                          ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              ...on Product {\n                                                id\n                                                defaultVariant {\n                                                  price\n                                                  priceVariants {\n                                                    identifier\n                                                    name\n                                                    price\n                                                    currency\n                                                    priceFor(marketIdentifiers: $marketIdentifiers) {\n                                                        identifier\n                                                        price\n                                                    }\n                                                  }\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                          ...on PropertiesTableContent {\n                                              sections {\n                                                  title\n                                                  properties {\n                                                      key\n                                                      value\n                                                  }\n                                              }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on SelectionContent {\n                                      options {\n                                        value\n                                        key\n                                }\n                             }\n                          }\n                       }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `,\n            {\n                language: 'en',\n                path,\n                version: version === 'draft' ? 'draft' : 'published',\n                marketIdentifiers,\n            },\n        )\n    ).catalogue;\n};\n", "import { catalogueFetcherGraphqlBuilder, ClientInterface, createNavigationFetcher } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, language: string, marketIdentifiers?: string[]) => {\n    const fetch = createNavigationFetcher(apiClient).byFolders;\n    const builder = catalogueFetcherGraphqlBuilder;\n    const response = await fetch(path, language, 3, {}, (level) => {\n        switch (level) {\n            case 0:\n                return {\n                    __on: [\n                        builder.onItem({\n                            ...builder.onComponent('description', 'RichText', {\n                                json: true,\n                            }),\n                        }),\n                    ],\n                };\n            case 1:\n                return {\n                    __on: [\n                        builder.onItem({\n                            ...builder.onComponent('description', 'RichText', {\n                                json: true,\n                            }),\n                        }),\n                        builder.onFolder(),\n                    ],\n                };\n            case 2:\n                return {\n                    __on: [\n                        builder.onItem({\n                            ...builder.onComponent('description', 'RichText', {\n                                json: true,\n                            }),\n                        }),\n                        builder.onProduct({\n                            defaultVariant: {\n                                price: true,\n                                priceVariants: {\n                                    price: true,\n                                    currency: true,\n                                    identifier: true,\n                                    name: true,\n                                    priceFor: {\n                                        __args: {\n                                            marketIdentifiers: marketIdentifiers,\n                                        },\n                                        identifier: true,\n                                        price: true,\n                                    },\n                                },\n                                attributes: {\n                                    attribute: true,\n                                    value: true,\n                                },\n                                firstImage: {\n                                    altText: true,\n                                    variants: {\n                                        width: true,\n                                        url: true,\n                                    },\n                                },\n                            },\n                        }),\n                    ],\n                };\n            default:\n                return {};\n        }\n    });\n    return response;\n};\n", "import { ClientInterface, createNavigationFetcher } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, language: string) => {\n    const [folders, topics] = await Promise.all([\n        createNavigationFetcher(apiClient).byFolders(path, language, 3),\n        createNavigationFetcher(apiClient).byTopics(path, language, 2),\n    ]);\n\n    return {\n        folders,\n        topics,\n    };\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string) => {\n    return await apiClient.searchApi(\n        `#graphql\n        query GET_PRICE_RANGE($path: [String!]) {\n        search(\n          filter: {\n            type: PRODUCT\n            include: { paths: $path }\n          }\n        ) {\n          aggregations {\n            price: price {\n              min\n              max\n            }\n            attributes: variantAttributes {\n              attribute\n              value\n            }\n          }\n        }\n      }\n      `,\n        {\n            path,\n        },\n    );\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (\n    apiClient: ClientInterface,\n    path: string,\n    version: string,\n    language: string,\n    marketIdentifiers: string[] = [],\n): Promise<any> => {\n    const data: { catalogue: any } = await apiClient.catalogueApi(\n        `#graphql\n    query ($language: String!, $path: String!, $version: VersionLabel!, $marketIdentifiers: [String!]!) {\n      catalogue(language: $language, path: $path, version: $version) {\n        meta: component(id:\"meta\"){\n          content {\n            ...on ContentChunkContent {\n              chunks {\n                id\n                content {\n                  ...on SingleLineContent {\n                    text\n                  }\n                  ...on RichTextContent {\n                    plainText\n                  }\n                  ...on ImageContent {\n                    firstImage {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      ...on Product {\n        ...product\n        topics {\n          path\n          name\n        }\n      }\n    }\n  }\n  \n  fragment content on ComponentContent {\n    ...boolean\n    ...singleLine\n    ...richText\n    ...imageContent\n    ...paragraphCollection\n    ...itemRelations\n    ...gridRelations\n    ...location\n    ...propertiesTable\n    ...dateTime\n    ...videoContent\n    ...numeric\n    ...selection\n    ...file\n  }\n  \n  fragment component on Component {\n    id\n    name\n    type\n    content {\n      ...content\n      ...componentChoice\n      ...contentChunk\n    }\n  }\n  \n  fragment dateTime on DatetimeContent {\n    datetime\n  }\n    \n  \n  fragment gridRelations on GridRelationsContent {\n    grids {\n      id\n      name\n    }\n  }\n  \n  fragment imageContent on ImageContent {\n    images {\n      ...image\n    }\n  }\n  \n  fragment image on Image {\n    url\n    altText\n    key\n    variants {\n      url\n      width\n      height\n      key\n    }\n    caption {\n        json\n        plainText\n        html\n    }\n  }\n  \n  fragment itemRelations on ItemRelationsContent {\n    items {\n      id\n      name\n      path\n      ...on Product {\n        defaultVariant {\n          priceVariants {\n            identifier\n            name\n            price\n            currency\n            priceFor(marketIdentifiers: $marketIdentifiers) {\n                identifier\n                price\n            }\n          }\n          images {\n            variants {\n              url\n              height\n              width\n            }\n          }\n        }\n      }\n    }\n  }\n  \n  fragment location on LocationContent {\n    lat\n    long\n  }\n  \n  fragment paragraphCollection on ParagraphCollectionContent {\n    paragraphs {\n      title {\n        ...singleLine\n      }\n      body {\n        ...richText\n      }\n      images {\n        ...image\n      }\n      videos {\n        ...video\n      }\n    }\n  }\n  \n  fragment product on Product {\n    id\n    name\n    type\n    language\n    path\n  \n    components {\n      ...component\n    }\n  \n    variants {\n      id\n      name\n      sku\n      price\n      priceVariants {\n        identifier\n        name\n        price\n        currency\n        priceFor(marketIdentifiers: $marketIdentifiers) {\n            identifier\n            price\n        }\n      }\n      description: component(id:\"description\") {\n        content {\n            ...on ComponentChoiceContent {\n                selectedComponent {\n                    id\n                    content {\n                        ...richText\n                    }\n                }\n            }\n        }\n      }\n      attributes {\n        value\n        attribute\n      }\n      stockLocations {\n        identifier\n        name\n        stock\n      }\n      isDefault\n      images {\n        url\n        altText\n        key\n        caption {\n            plainText\n            json\n            html\n        }\n        variants {\n          key\n          height\n          width\n          url\n        }\n      }\n  \n      subscriptionPlans {\n        identifier\n        name\n        periods {\n          id\n          name\n          initial {\n            priceVariants {\n              identifier\n              name\n              price\n              currency\n            }\n          }\n          recurring {\n            priceVariants {\n              identifier\n              name\n              price\n              currency\n            }\n          }\n        }\n      }\n    }\n  \n    vatType {\n      name\n      percent\n    }\n  }\n  \n  fragment propertiesTable on PropertiesTableContent {\n    sections {\n      ... on PropertiesTableSection {\n        title\n        properties {\n          key\n          value\n        }\n      }\n    }\n  }\n  \n  fragment richText on RichTextContent {\n    json\n    html\n    plainText\n  }\n  \n  fragment boolean on BooleanContent {\n    value\n  }\n  \n  fragment singleLine on SingleLineContent {\n    text\n  }\n  \n  fragment videoContent on VideoContent {\n    videos {\n      ...video\n    }\n  }\n  \n  fragment video on Video {\n    id\n    playlists\n    title\n    thumbnails {\n      ...image\n    }\n  }\n  \n  fragment numeric on NumericContent {\n    number\n    unit\n  }\n  \n  fragment componentChoice on ComponentChoiceContent {\n    selectedComponent {\n      id\n      name\n      type\n      content {\n        ...content\n      }\n    }\n  }\n  \n  fragment contentChunk on ContentChunkContent {\n    chunks {\n      id\n      name\n      type\n      content {\n        ...content\n      }\n    }\n  }\n  \n  fragment selection on SelectionContent {\n    options {\n      key\n      value\n    }\n  }\n  \n  \n  fragment file on FileContent {\n    files {\n      url\n      key\n      title\n      size\n    }\n  }  \n\n`,\n        {\n            language,\n            path,\n            version: version === 'draft' ? 'draft' : 'published',\n            marketIdentifiers,\n        },\n    );\n\n    return data.catalogue;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { TenantConfiguration } from '../../contracts/TenantConfiguration';\nimport { getCurrencyFromCode } from '~/use-cases/contracts/Currency';\n\nconst QUERY_FETCH_TENANT_CONFIG = `#graphql\nquery FETCH_TENANT_CONFIG ($identifier: String!) {\n    tenant {\n        get(identifier: $identifier) {\n            id\n            logo {\n                key\n                url\n                variants {\n                    ... on ImageVariant {\n                        key\n                        url\n                        width\n                        height\n                    }\n                }\n            }\n        }\n    }\n}`;\n\nexport default async (apiClient: ClientInterface, tenantIdentifier: string): Promise<TenantConfiguration> => {\n    try {\n        const { tenant } = await apiClient.pimApi(QUERY_FETCH_TENANT_CONFIG, {\n            identifier: tenantIdentifier,\n        });\n        const tenantId = tenant?.get?.id;\n\n        const currency = (\n            await apiClient.pimApi(\n                `query { priceVariant{ get(identifier:\"default\", tenantId:\"${tenantId}\") { currency } } }`,\n            )\n        )?.priceVariant?.get?.currency;\n        return {\n            currency: getCurrencyFromCode(currency.toUpperCase()),\n            logo: tenant?.get?.logo,\n        };\n    } catch (error) {\n        // we don't to break here, therefore we are returning a default config if the credentials are not working\n        return {\n            currency: getCurrencyFromCode('USD'),\n        };\n    }\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, version: string, language: string) => {\n    return (\n        await apiClient.catalogueApi(\n            `#graphql\n            query ($language: String!, $path: String!, $version: VersionLabel) {\n                catalogue(path: $path, language: $language, version: $version) {\n                    name\n                    components {\n                        id\n                        content {\n                            ...on SingleLineContent {\n                                text\n                            }\n                            ...on RichTextContent {\n                                plainText\n                                json\n                                html\n                            }\n                            ...on ContentChunkContent {\n                                chunks {\n                                    id\n                                    name\n                                    type\n                                    content {\n                                    ...on ImageContent {\n                                        images {\n                                            altText\n                                            url\n                                            variants {\n                                                url\n                                                width\n                                                height\n                                            }\n                                        }\n                                    }\n                                    ...on SingleLineContent {\n                                        text\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }`,\n            {\n                language,\n                path,\n                version: version === 'draft' ? 'draft' : 'published',\n            },\n        )\n    ).catalogue;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, value: string, language: string) => {\n    return await apiClient.searchApi(\n        `#graphql\n        query SEARCH_BY_TOPIC($value: String!) {\n      topics: search(language: \"${language}\"){\n        aggregations {\n          topics {\n            path\n            name\n          }\n        }\n      }\n          search(\n            language: \"${language}\"\n            first: 100,\n            filter: {\n              type: PRODUCT\n              include: {\n                topicPaths: {\n                  sections: [\n                    { fields: { value: $value } }\n                  ]\n                }\n              }\n            }\n          ) {\n            edges {\n              node {\n                id\n                name\n                path\n                topics {\n                  name\n                  path\n                }\n                ... on Product {\n                  matchingVariant {\n                    name\n                    isDefault\n                    price\n                    priceVariants {\n                      identifier\n                      name\n                      currency\n                      price\n                    }\n                    attributes {\n                        attribute\n                        value\n                    }\n                    images {\n                      variants {\n                        url\n                        width\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `,\n        {\n            value,\n        },\n    );\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, language: string, min: string, max: string) => {\n    return await apiClient.searchApi(\n        `#graphql\n        query SEARCH_ORDER_BY_PRICE_RANGE($path: [String!], $min: Float, $max: Float) {\n        search(\n          language: \"${language}\"  \n          first: 100,\n          filter: {\n            type: PRODUCT\n            include: { paths: $path }\n            productVariants: { priceRange: { min: $min, max: $max } }\n          }\n        ) {\n          edges {\n            node {\n              name\n              path\n              ... on Product {\n                matchingVariant {\n                  isDefault\n                  price\n                  priceVariants {\n                    identifier\n                    name\n                    price\n                    currency\n                  }\n                  images {\n                    variants {\n                      url\n                      width\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      `,\n        {\n            path,\n            min,\n            max,\n        },\n    );\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (\n    apiClient: ClientInterface,\n    path: string,\n    language: string,\n    orderBy?: any,\n    filters?: any,\n    attributes?: any,\n) => {\n    const field = orderBy?.split('_')[0] || 'NAME';\n    const direction = orderBy?.split('_')[1] || 'ASC';\n    const priceRangeParams = filters?.price;\n\n    attributes = attributes?.map((attribute: string) => {\n        return {\n            attribute: attribute?.split('_')[0],\n            value: attribute?.split('_')[1],\n        };\n    });\n\n    const attributeFilters = attributes?.reduce(\n        (\n            acc: { [x: string]: { attribute: string; values: string[] } },\n            { attribute, value }: { attribute: string; value: string },\n        ) => {\n            acc[attribute] ??= { attribute, values: [] };\n            acc[attribute].values.push(value);\n            return acc;\n        },\n        [],\n    );\n\n    const results = await apiClient.searchApi(\n        `#graphql\n        query SEARCH_ORDERBY(\n        $path: [String!]\n        $field: OrderField!\n        $direction: OrderDirection!\n        $min: Float\n        $max: Float\n        $attributes: [VariantAttributeFilter!]\n      ) {\n        search(\n          language: \"${language}\"\n          first: 100,\n          orderBy: { field: $field, direction: $direction }\n          filter: {\n            type: PRODUCT\n            productVariants: { priceRange: { min: $min, max: $max }, attributes: $attributes }\n            include: { paths: $path }\n          }\n        ) {\n          edges {\n            node {\n              name\n              path\n              ... on Product {\n                  matchingVariant {\n                  name\n                  price\n                  isDefault\n                  sku\n                  attributes {\n                    attribute\n                    value\n                  }\n                  priceVariants {\n                    identifier\n                    name\n                    price\n                    currency\n                  }\n                  images {\n                    url\n                    variants {\n                      url\n                      width\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      `,\n        {\n            path,\n            field: field === 'NAME' ? 'ITEM_NAME' : field,\n            direction,\n            min: priceRangeParams?.min ? parseFloat(priceRangeParams.min) : 0.0,\n            max: priceRangeParams?.max ? parseFloat(priceRangeParams.max) : 0.0,\n            attributes: Object?.values(attributeFilters) as [],\n        },\n    );\n\n    return results?.search?.edges || [];\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, language: string) => {\n    return await apiClient.searchApi(\n        `#graphql\n        query SEARCH_ORDER_BY_PRICE_RANGE($path: [String!]) {\n        search(\n          language: \"${language}\"\n          first: 100,  \n          filter: {\n            type: PRODUCT\n            include: { paths: $path }\n          }\n        ) {\n          edges {\n            node {\n              name\n              path\n              ... on Product {\n                matchingVariant {\n                  isDefault\n                  price\n                  priceVariants {\n                    identifier\n                    name\n                    price\n                    currency\n                  }\n                  images {\n                    variants {\n                      url\n                      width\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }`,\n        {\n            path,\n        },\n    );\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (\n    apiClient: ClientInterface,\n    path: string,\n    version: string,\n    language: string,\n    marketIdentifiers: string[] = [],\n) => {\n    return (\n        await apiClient.catalogueApi(\n            `#graphql\nquery ($language: String!, $path: String!, $version: VersionLabel, $marketIdentifiers: [String!]!) {\n    catalogue(language: $language, path: $path, version: $version) {\n        id\n        name\n        path\n        meta: component(id:\"meta\"){\n          content {\n            ...on ContentChunkContent {\n              chunks {\n                id\n                type\n                content {\n                  ...on SingleLineContent {\n                    text\n                  }\n                  ...on RichTextContent {\n                    plainText\n                  }\n                  ...on ImageContent {\n                    firstImage {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        components {\n          type\n          id\n          content {\n            ...on SingleLineContent {\n              text\n            }\n            ...on RichTextContent {\n              plainText\n            }\n            ... on ComponentChoiceContent {\n              selectedComponent {\n                name\n                content {\n                    ... on GridRelationsContent {\n                        grids {\n                          rows {\n                            columns {\n                              layout {\n                                rowspan\n                                colspan\n                                colIndex\n                                rowIndex\n                              }\n                              item {\n                                name\n                                path\n                                type\n                                shape {\n                                  identifier\n                                }\n                                ...on Product {\n                                  defaultVariant {\n                                    price\n                                    attributes {\n                                        value\n                                        attribute\n                                    }\n                                    priceVariants {\n                                      identifier\n                                      name\n                                      price\n                                      currency\n                                      priceFor(marketIdentifiers: $marketIdentifiers) {\n                                        identifier\n                                        price\n                                      }\n                                    }\n                                    images {\n                                      variants {\n                                        url\n                                        height\n                                        width\n                                      }\n                                    }\n                                  }\n                                }\n                                components {\n                                  type\n                                  id\n                                  content {\n                                    ...on BooleanContent{\n                                      value\n                                    }\n                                    ... on SingleLineContent {\n                                      text\n                                    }\n                                    ... on RichTextContent {\n                                      plainText\n                                    }\n                                    ... on ImageContent {\n                                      images {\n                                        url\n                                        altText\n                                        variants {\n                                          url\n                                          width\n                                          height\n                                        }\n                                      }\n                                    }\n                                    ... on ComponentChoiceContent {\n                                      selectedComponent {\n                                        name\n                                        content {\n                                          ...on SingleLineContent {\n                                            text\n                                          }\n                                          ... on VideoContent {\n                                            videos {\n                                                title\n                                                playlists\n                                                id\n                                                thumbnails {\n                                                    variants {\n                                                        url\n                                                        width\n                                                        height\n                                                    }\n                                                }\n                                            }\n                                        }\n                                          ... on ImageContent {\n                                            images {\n                                              url\n                                              altText\n                                              variants {\n                                                url\n                                                width\n                                                height\n                                              }\n                                            }\n                                          }\n                                          ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              components {\n                                                id\n                                                content {\n                                                  ...on SingleLineContent {\n                                                    text\n                                                  }\n                                                  ...on RichTextContent {\n                                                    plainText\n                                                  }\n                                                  ...on ComponentChoiceContent {\n                                                    selectedComponent {\n                                                      content {\n                                                        ...on ImageContent {\n                                                          firstImage {\n                                                            url\n                                                            altText\n                                                            variants {\n                                                              url\n                                                              width\n                                                              height\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                              ...on Product {\n                                                defaultVariant {\n                                                  price\n                                                  priceVariants {\n                                                    identifier\n                                                    name\n                                                    price\n                                                    currency\n                                                    priceFor(marketIdentifiers: $marketIdentifiers) {\n                                                        identifier\n                                                        price\n                                                    }\n                                                  }\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on ContentChunkContent {\n                                      chunks {\n                                        id  \n                                        content {\n                                          ... on NumericContent {\n                                            number\n                                            unit\n                                          }\n                                          ...on SingleLineContent{\n                                              text\n                                          }\n                                          ...on SelectionContent {\n                                              options {\n                                                  value\n                                                  key \n                                              }\n                                          }\n                                          ...on BooleanContent {\n                                              value\n                                          }\n                                          ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              ...on Product {\n                                                id\n                                                defaultVariant {\n                                                  price\n                                                  priceVariants {\n                                                    identifier\n                                                    name\n                                                    price\n                                                    currency\n                                                    priceFor(marketIdentifiers: $marketIdentifiers) {\n                                                        identifier\n                                                        price\n                                                    }\n                                                  }\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                          ...on PropertiesTableContent {\n                                              sections {\n                                                  title\n                                                  properties {\n                                                      key\n                                                      value\n                                                  }\n                                              }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on SelectionContent {\n                                      options {\n                                        value\n                                        key\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                  \n                  ... on ItemRelationsContent {\n                    items {\n                      name\n                      path\n                      type\n                      shape {\n                        identifier\n                      }\n                      components {\n                        type\n                        id\n                        content {\n                            ...on BooleanContent{\n                                value\n                            }\n                            ... on SingleLineContent {\n                                text\n                            }\n                            ... on RichTextContent {\n                                plainText\n                            }\n                            ... on ImageContent {\n                                images {\n                                    url\n                                    altText\n                                    variants {\n                                      url\n                                      width\n                                      height\n                                    }\n                                }\n                            }\n                            ... on ComponentChoiceContent {\n                                selectedComponent {\n                                    name\n                                    content {\n                                        ...on SingleLineContent {\n                                            text\n                                        }\n                                        ... on VideoContent {\n                                            videos {\n                                                title\n                                                playlists\n                                                id\n                                                thumbnails {\n                                                    variants {\n                                                        url\n                                                        width\n                                                        height\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        ... on ImageContent {\n                                            images {\n                                              url\n                                              altText\n                                              variants {\n                                                url\n                                                width\n                                                height\n                                              }\n                                            } \n                                        }\n                                        ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              components {\n                                                id\n                                                content {\n                                                  ...on SingleLineContent {\n                                                    text\n                                                  }\n                                                  ...on RichTextContent {\n                                                    plainText\n                                                  }\n                                                  ...on ComponentChoiceContent {\n                                                    selectedComponent {\n                                                      content {\n                                                        ...on ImageContent {\n                                                          firstImage {\n                                                            url\n                                                            altText\n                                                            variants {\n                                                              url\n                                                              width\n                                                              height\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                              ...on Product {\n                                                defaultVariant {\n                                                  price\n                                                  priceVariants {\n                                                    identifier\n                                                    name\n                                                    price\n                                                    currency\n                                                    priceFor(marketIdentifiers: $marketIdentifiers) {\n                                                        identifier\n                                                        price\n                                                    }\n                                                  }\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on ContentChunkContent {\n                                      chunks {\n                                        id  \n                                        content {\n                                          ... on NumericContent {\n                                            number\n                                            unit\n                                          }\n                                          ...on SingleLineContent{\n                                              text\n                                          }\n                                          ...on SelectionContent {\n                                              options {\n                                                  value\n                                                  key\n                                              }\n                                          }\n                                          ...on BooleanContent {\n                                              value\n                                          }\n                                          ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              ...on Product {\n                                                id\n                                                defaultVariant {\n                                                  price\n                                                  priceVariants {\n                                                    identifier\n                                                    name\n                                                    price\n                                                    currency\n                                                    priceFor(marketIdentifiers: $marketIdentifiers) {\n                                                        identifier\n                                                        price\n                                                    }\n                                                  }\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                          ...on PropertiesTableContent {\n                                              sections {\n                                                  title\n                                                  properties {\n                                                      key\n                                                      value\n                                                  }\n                                              }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on SelectionContent {\n                                      options {\n                                        value\n                                        key\n                                }\n                             }\n                          }\n                       }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        children {\n          name\n          path\n          type\n          shape {\n            identifier\n          }\n          ...on Document {\n            name\n            path\n            components {\n              id\n              type\n              content {\n                ...on ContentChunkContent {\n                  chunks {\n                    id\n                    content {\n                      ... on SingleLineContent {\n                        text\n                      }\n                      ... on NumericContent {\n                        number\n                        unit\n                      }\n\n                      \n                      ... on ItemRelationsContent {\n                        items {\n                          name\n                          type\n                          path\n                          ...on Product {\n                            id\n                            defaultVariant {\n                              price\n                              priceVariants {\n                                identifier\n                                name\n                                price\n                                currency\n                                priceFor(marketIdentifiers: $marketIdentifiers) {\n                                    identifier\n                                    price\n                                }\n                              }\n                              firstImage {\n                                url\n                                altText\n                                variants {\n                                  url\n                                  width\n                                  height\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n                ...on SingleLineContent {\n                  text\n                }\n                ...on ImageContent {\n                  images {\n                    variants {\n                      url\n                      width\n                      height\n                    }\n                  }\n                }\n                ...on RichTextContent {\n                  plainText\n                }\n                ...on ComponentChoiceContent {\n                  selectedComponent {\n                    id\n                    content {\n                      ...on ImageContent {\n                        images {\n                          variants {\n                            url\n                            width\n                            height\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          ...on Product {\n            defaultVariant {\n              price\n              priceVariants {\n                identifier\n                name\n                price\n                currency\n                priceFor(marketIdentifiers: $marketIdentifiers) {\n                    identifier\n                    price\n                }\n              }\n              firstImage {\n                url\n                altText\n              }\n            }\n          }\n        }\n      }\n    }\n  `,\n            {\n                language: 'en',\n                path,\n                version: version === 'draft' ? 'draft' : 'published',\n                marketIdentifiers,\n            },\n        )\n    ).catalogue;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nconst PATH_PREFIX = '/vouchers/';\n\nconst QUERY_GET_VOUCHER = `#graphql\nquery GET_VOUCHER($path: String!, $language: String!, $version: VersionLabel) {\n  catalogue(language: $language, path: $path, version: $version) {\n    id\n    name\n    value: component(id: \"discount\") {\n      content {\n        ... on ComponentChoiceContent {\n            selectedComponent {\n            id\n            name\n            content {\n              ... on NumericContent {\n                number\n                unit\n              }\n            }\n          }\n        }\n      }\n    }\n    expires: component(id: \"expiry-date\") {\n      content {\n        ... on DatetimeContent {\n          datetime\n        }\n      }\n    }\n  }\n}`;\n\nexport default async (apiClient: ClientInterface, language: string, version: string, code: string): Promise<any> => {\n    const path = `${PATH_PREFIX}${code.toLowerCase()}`;\n    const result = await apiClient.catalogueApi(QUERY_GET_VOUCHER, {\n        path,\n        language,\n        version,\n    });\n    return result.catalogue;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, language: string) => {\n    return (\n        await apiClient.catalogueApi(\n            `#graphql\n                query ($language: String!, $path: String!) {\n                    catalogue(path: $path, language: $language) {\n                        component(id: \"meta\") {\n                            content {\n                                ... on ContentChunkContent {\n                                    chunks {\n                                        id\n                                        content {\n                                            ... on SingleLineContent {\n                                                text\n                                            }\n                                            ... on RichTextContent {\n                                                plainText\n                                            }\n                                            ... on ImageContent {\n                                                firstImage {\n                                                    url\n                                                    width\n                                                    height\n                                            }\n                                        }\n                                    }\n                                }\n                                   \n                            }    \n                        }\n                    }\n                }\n            }`,\n            {\n                language,\n                path,\n            },\n        )\n    ).catalogue;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: String, language: string, version: String) => {\n    return (\n        await apiClient.catalogueApi(\n            `#graphql\n                query ($language: String!, $path: String!, $version: VersionLabel) {\n                    catalogue(path: $path, language: $language, version: $version) {\n                        shape {\n                            identifier\n                        }\n                    }\n                }\n            `,\n            {\n                language,\n                path,\n                version: version === 'draft' ? 'draft' : 'published',\n            },\n        )\n    ).catalogue;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { Product } from '../../contracts/Product';\nimport fetchLandingPage from './fetchLandingPage';\nimport fetchDocument from './fetchDocument';\nimport fetchFolder from './fetchFolder';\nimport fetchHierarchy from './fetchHierarchy';\nimport fetchNavigation from './fetchNavigation';\nimport fetchPriceRangeAndAttributes from './fetchPriceRangeAndAttributes';\nimport fetchProduct from './fetchProduct';\nimport fetchTenantConfig from './fetchTenantConfig';\nimport fetchFooter from './fetchFooter';\nimport search from './search';\nimport searchByTopic from './searchByTopic';\nimport searchFilteredByPriceRange from './searchFilteredByPriceRange';\nimport searchOrderBy from './searchOrderBy';\nimport searchOrderByPriceRange from './searchOrderByPriceRange';\nimport { DataMapper } from '../../mapper';\nimport fetchFolderWithChildren from './fetchFolderWithChildren';\nimport fetchVoucher from './fetchVoucher';\nimport fetchMetadata from './fetchMetadata';\nimport fetchShapeIdentifier from './fetchShapeIdentifier';\n\nexport type CrystallizeAPIContext = {\n    apiClient: ClientInterface;\n    locale?: string;\n    isPreview?: boolean;\n    language: string;\n};\n\nexport const CrystallizeAPI = ({\n    apiClient,\n    language,\n    locale = language,\n    isPreview = false,\n}: CrystallizeAPIContext) => {\n    const version = isPreview ? 'draft' : 'published';\n    const mapper = DataMapper({ language, locale });\n\n    return {\n        fetchTenantConfig: (tenantIdentifier: string) => fetchTenantConfig(apiClient, tenantIdentifier),\n        fetchNavigation: (path: string) =>\n            fetchNavigation(apiClient, path, language).then(mapper.API.Call.fetchNavigationToTree),\n        fetchShapeIdentifier: (path: string) => fetchShapeIdentifier(apiClient, path, language, version),\n        fetchLandingPage: (path: string, marketIdentifier?: string[]) =>\n            fetchLandingPage(apiClient, path, version, language, marketIdentifier).then(\n                mapper.API.Call.fetchLandingPageToLandingPage,\n            ),\n        fetchDocument: (path: string, marketIdentifier?: string[]) =>\n            fetchDocument(apiClient, path, version, language, marketIdentifier).then(\n                mapper.API.Call.fetchDocumentToStory,\n            ),\n        fetchProduct: (path: string, marketIdentifier?: string[]): Promise<Product> =>\n            fetchProduct(apiClient, path, version, language, marketIdentifier).then(\n                mapper.API.Call.fetchProductToProduct,\n            ),\n        fetchFolder: (path: string) =>\n            fetchFolder(apiClient, path, version, language).then(mapper.API.Call.fetchFolderToCategory),\n        fetchFolderWithChildren: (path: string, marketIdentifier?: string[]) =>\n            fetchFolderWithChildren(apiClient, path, version, language, marketIdentifier).then(\n                mapper.API.Call.fetchFolderToCategory(true),\n            ),\n        fetchShop: (path: string, marketIdentifier?: string[]) =>\n            Promise.all([\n                fetchFolder(apiClient, path, version, language, marketIdentifier),\n                fetchHierarchy(apiClient, path, language, marketIdentifier),\n            ]).then(mapper.API.Call.fetchShopToShop),\n        fetchFooter: (path: string) =>\n            fetchFooter(apiClient, path, version, language).then(mapper.API.Call.fetchFooterToFooter),\n        fetchMetadata: (path: string) =>\n            fetchMetadata(apiClient, path, language).then(mapper.API.Call.fetchMetadataToMeta),\n        fetchVoucher: (code: string) =>\n            fetchVoucher(apiClient, language, version, code).then(mapper.API.Call.fetchVoucherToVoucher),\n        fetchPriceRangeAndAttributes: (path: string) => fetchPriceRangeAndAttributes(apiClient, path),\n        search: (value: string) => search(apiClient, value, language).then(mapper.API.Call.searchProductToProductSlim),\n        searchOrderBy: (path: string, orderBy?: any, filters?: any, attributes?: any) =>\n            searchOrderBy(apiClient, path, language, orderBy, filters, attributes).then(\n                mapper.API.Call.searchProductToProductSlim,\n            ),\n        searchOrderByPriceRange: (path: string) =>\n            searchOrderByPriceRange(apiClient, path, language).then(mapper.API.Call.searchProductToProductSlim),\n        searchFilteredByPriceRange: (path: string, min: string, max: string) =>\n            searchFilteredByPriceRange(apiClient, path, language, min, max).then(\n                mapper.API.Call.searchProductToProductSlim,\n            ),\n        searchByTopic: (value: string) =>\n            searchByTopic(apiClient, value, language).then(mapper.API.Call.searchByTopicProductToProductSlim),\n    };\n};\n", "// From https://github.com/jkroso/parse-duration\nconst parse = (duration: string, format: string): number => {\n    const durationRegexp = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([\\p{L}]*)/giu;\n    const ms = 1;\n    const sec = 1000 * ms;\n    const min = 60 * sec;\n    const hour = 60 * min;\n    const day = 24 * hour;\n    const week = 7 * day;\n    const month = (365.25 / 12) * day;\n    const year = 365.25 * day;\n    const ratios = {\n        nanosecond: ms / 1e6,\n        ns: ms / 1e6,\n        \u00B5s: ms / 1e3,\n        us: ms / 1e3,\n        microsecond: ms / 1e3,\n        millisecond: ms,\n        ms: ms,\n        second: sec,\n        sec: sec,\n        s: sec,\n        minute: min,\n        min: min,\n        m: min,\n        hour: hour,\n        hr: hour,\n        h: hour,\n        day: day,\n        d: day,\n        week: week,\n        wk: week,\n        w: week,\n        month: month,\n        b: month,\n        year: year,\n        yr: year,\n        y: year,\n    };\n\n    function unit(str: keyof typeof ratios): number | null {\n        return ratios[str] || ratios[str.toLowerCase().replace(/s$/, '') as keyof typeof ratios] || null;\n    }\n    let result = 0.0;\n    const str = duration\n        .replace(/(\\d)[,_](\\d)/g, '$1$2')\n        .replace(durationRegexp, (_, n: string, units: string): string => {\n            const convertedUnits = unit(units as keyof typeof ratios);\n            if (convertedUnits) {\n                result = (result || 0) + parseFloat(n) * convertedUnits;\n            }\n            return '';\n        });\n    return result && result / (unit(format as keyof typeof ratios) || 1);\n};\n\nexport type HttpCacheHeaders = {\n    headers: {\n        'Cache-Control': string;\n    };\n};\n\nexport type VarnishHttpCacheHeaders = Required<HttpCacheHeaders> & {\n    headers: {\n        xkey: string;\n    };\n};\n\nexport type FastlyHttpCacheHeaders = Required<HttpCacheHeaders> & {\n    headers: {\n        'Surrogate-Key': string; // Fastly cache key\n        'Surrogate-Control': string; // Fastly cache control\n    };\n};\n\nexport function HttpCacheHeaderTaggerFromLoader(\n    loader: Headers,\n): HttpCacheHeaders | VarnishHttpCacheHeaders | FastlyHttpCacheHeaders {\n    if (process.env.HTTP_CACHE_SERVICE === 'fastly') {\n        return {\n            headers: {\n                'Cache-Control': loader.get('Cache-Control') as string,\n                'Surrogate-Control': loader.get('Surrogate-Control') as string,\n                'Surrogate-Key': loader.get('Surrogate-Key') as string,\n            },\n        };\n    }\n\n    if (process.env.HTTP_CACHE_SERVICE === 'varnish') {\n        return {\n            headers: {\n                'Cache-Control': loader.get('Cache-Control') as string,\n                xkey: loader.get('xkey') as string,\n            },\n        };\n    }\n    return {\n        headers: {\n            'Cache-Control': loader.get('Cache-Control') as string,\n        },\n    };\n}\n\n/**\n * Return HTTP Cache headers\n */\nexport function HttpCacheHeaderTagger(\n    maxAge: string,\n    sharedMaxAge: string,\n    tags: string[],\n): HttpCacheHeaders | VarnishHttpCacheHeaders | FastlyHttpCacheHeaders {\n    const clean = (tag: string) => {\n        let w = tag.replace(/\\//g, '-');\n        if (w[0] === '-') {\n            w = w.substring(1);\n        }\n        return w;\n    };\n\n    if (process.env.HTTP_CACHE_SERVICE === 'fastly') {\n        // We tell Fastly to cache the response for sharedMaxAge (max-age in Surrogate-Control which has precedence over Cache-Control s-max-age)\n        // We tell Fastly to serve a stale only 2 time the sharedMaxAge\n        // We tell Fastly to serve a stale for sharedMaxAge if the origin is not available\n        // and we tell the browser to cache the response for maxAge\n        // and we tell the browser serve a stale only 2 time the maxAge\n        return {\n            headers: {\n                'Cache-Control': `public, max-age=${parse(maxAge, 's')}, s-maxage=${parse(\n                    sharedMaxAge,\n                    's',\n                )}, stale-while-revalidate=${parse(maxAge, 's')}, stale-if-error=${parse(sharedMaxAge, 's')}`,\n                'Surrogate-Control': `max-age=${parse(sharedMaxAge, 's')}, stale-while-revalidate=${parse(\n                    sharedMaxAge,\n                    's',\n                )}`,\n                'Surrogate-Key': 'all ' + tags.map(clean).join(' '),\n            },\n        };\n    }\n\n    if (process.env.HTTP_CACHE_SERVICE === 'varnish') {\n        // We tell Vanish to cache the response for sharedMaxAge\n        // We tell Vanish to serve a stale only 2 time the maxAge\n        // and we tell the browser to cache the response for maxAge\n        // and we tell the browser serve a stale only 2 time the maxAge (same header used for Varnish)\n        return {\n            headers: {\n                'Cache-Control': `public, max-age=${parse(maxAge, 's')}, s-maxage=${parse(\n                    sharedMaxAge,\n                    's',\n                )}, stale-while-revalidate=${parse(maxAge, 's')}`,\n                xkey: 'all ' + tags.map(clean).join(' '),\n            },\n        };\n    }\n\n    return {\n        headers: {\n            'Cache-Control': `public, max-age=${parse(maxAge, 's')}, s-maxage=${parse(\n                sharedMaxAge,\n                's',\n            )}, stale-while-revalidate=${parse(maxAge, 's')}`,\n        },\n    };\n}\n\nexport function StoreFrontAwaretHttpCacheHeaderTagger(\n    maxAge: string,\n    sharedMaxAge: string,\n    tags: string[],\n    prefix: string = '',\n): HttpCacheHeaders | VarnishHttpCacheHeaders | FastlyHttpCacheHeaders {\n    return HttpCacheHeaderTagger(maxAge, sharedMaxAge, [...tags.map((tag: string) => `${prefix}-${tag}`), prefix]);\n}\n", "import { availableLanguages } from '../LanguageAndMarket';\n\ntype Request = {\n    url: string;\n    headers: {\n        has: (key: string) => boolean;\n        get: (key: string) => string | null | undefined;\n    };\n};\n\nfunction isSecure(request: Request): boolean {\n    return request.headers.get('x-forwarded-proto')! === 'https' || request.url.startsWith('https');\n}\n\nfunction getHost(request: Request): string {\n    if (process.env?.SUPERFAST_HOST) {\n        return process.env.SUPERFAST_HOST;\n    }\n    if (!request.headers.has('Host') || request.headers.get('Host') === '') {\n        throw new Error('Runtime Fatal: Host is not found on the Request.');\n    }\n    return request.headers.get('Host')!;\n}\n\nexport type RequestContext = {\n    locale: string;\n    language: string;\n    isSecure: boolean;\n    host: string;\n    market?: string;\n    isPreview: boolean;\n    callbackPath: string;\n    url: URL;\n    baseUrl: string;\n};\n\nexport function getContext(request: Request): RequestContext {\n    const url = new URL(request.url);\n    const langMarket = url.pathname.split('/')[1] ?? '';\n    const language = langMarket.split('-')[0] ?? availableLanguages[0];\n    const isHttps = isSecure(request);\n    const host = getHost(request);\n    return {\n        locale: `${language}-${language.toUpperCase()}`,\n        language,\n        isSecure: isHttps,\n        host,\n        isPreview: Boolean(url.searchParams?.has('preview')),\n        url,\n        callbackPath: url.searchParams.get('callbackPath') || '',\n        baseUrl: `${isHttps ? 'https' : 'http'}://${host}`,\n    };\n}\n\nexport function validatePayload<T>(payload: unknown, schema: any | null): T {\n    if (!schema) {\n        return payload as T;\n    }\n    return schema.parse(payload);\n}\n", "import { LoaderFunction } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\n\nexport const FAVICON_VARIANTS = {\n    '16': {\n        size: 16,\n        rel: 'icon',\n        extra: {},\n    },\n    '32': {\n        size: 32,\n        rel: 'icon',\n        extra: {},\n    },\n    'apple-touch-icon': {\n        size: 180,\n        rel: 'apple-touch-icon',\n        extra: {},\n    },\n    'safari-pinned-tab': {\n        size: 16,\n        rel: 'mask-icon',\n        extra: {\n            color: '#5bbad5',\n        },\n    },\n};\n\nexport type FaviconVariant = keyof typeof FAVICON_VARIANTS;\n\nimport {\n    getLogoForRequestTenant,\n    fetchImageBuffer,\n    generateFavicon,\n    sharpFromImageBuffer,\n} from '~/core/favicon.server';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const size = Number(params.size);\n\n    if (![100, 192, 256, 150].includes(size) && !FAVICON_VARIANTS.hasOwnProperty(size)) {\n        return new Response('Not found', { status: 404 });\n    }\n\n    const { shared, secret } = await getStoreFront(requestContext.host);\n    const logoUrl = await getLogoForRequestTenant(secret);\n\n    if (!logoUrl) {\n        return new Response('Not found', { status: 404 });\n    }\n\n    const arrayBuffer = await fetchImageBuffer(logoUrl);\n\n    if (!arrayBuffer) {\n        return new Response('Not found', { status: 404 });\n    }\n\n    const original = sharpFromImageBuffer(Buffer.from(arrayBuffer));\n\n    const resizedPngIcon = await generateFavicon(original, { size: size });\n\n    return new Response(resizedPngIcon, {\n        status: 200,\n        headers: {\n            ...StoreFrontAwaretHttpCacheHeaderTagger('1d', '1w', ['favicon'], shared.config.tenantIdentifier).headers,\n            'Content-Length': `${resizedPngIcon.byteLength}`,\n            'Content-Type': 'image/png',\n        },\n    });\n};\n", "import sharp from 'sharp';\nimport { TStoreFront } from '@crystallize/js-storefrontaware-utils';\n\nconst QUERY_TENANT_LOGO = `query TENANT_LOGO ($identifier: String!) {\n    tenant {\n        get(identifier: $identifier) {\n            logo {\n                url\n                mimeType\n            }\n        }\n    }\n}`;\n\nexport const getLogoForRequestTenant = async (storeFront: TStoreFront): Promise<string | undefined> => {\n    const result = await storeFront.apiClient.pimApi(QUERY_TENANT_LOGO, {\n        identifier: storeFront.config.tenantIdentifier,\n    });\n    return result?.tenant?.get?.logo?.url;\n};\n\nexport const fetchImageBuffer = async (url: string): Promise<ArrayBuffer> => {\n    return fetch(url).then(async (res) => res.arrayBuffer());\n};\n\ntype FaviconOptions = {\n    size: number;\n    compressionLevel?: number;\n    quality?: number;\n};\n\nexport const generateFavicon = async (original: sharp.Sharp, options: FaviconOptions): Promise<Buffer> => {\n    if (!options?.hasOwnProperty?.('size')) {\n        throw new Error('Must pass size');\n    }\n\n    const opts: FaviconOptions = {\n        compressionLevel: 8,\n        quality: 80,\n        ...options,\n    };\n    return original\n        .resize({\n            width: opts.size,\n            height: opts.size,\n            fit: sharp.fit.contain,\n            background: { r: 0, g: 0, b: 0, alpha: 0 },\n        })\n        .png({\n            compressionLevel: opts.compressionLevel,\n            quality: opts.quality,\n        })\n        .toBuffer();\n};\n\nexport function sharpFromImageBuffer(buffer: Buffer): sharp.Sharp {\n    return sharp(buffer);\n}\n", "import { createRepository } from '@crystallize/node-service-api-request-handlers';\nimport nodemailer from 'nodemailer';\nimport { Mailer } from './contracts/Mailer';\nimport { configureStorage } from './storage.server';\n\nexport const storage = configureStorage(`${process.env?.STORAGE_DSN}`);\nexport const memoryStorage = configureStorage('memory://');\nexport const cartWrapperRepository = createRepository(storage);\n\nexport function createMailer(dsn: string): Mailer {\n    if (dsn.startsWith('sendgrid://')) {\n        const sgMail = require('@sendgrid/mail');\n        const key = dsn.split('://')[1];\n        sgMail.setApiKey(key);\n\n        return (subject: string, to: string[] | string, from: string, html: string) => {\n            return sgMail.send({\n                from,\n                to,\n                subject,\n                html,\n            });\n        };\n    }\n\n    let realDSN = dsn;\n    const config = require('platformsh-config').config();\n    if (config.isValidPlatform()) {\n        realDSN = `smtp://${process.env.PLATFORM_SMTP_HOST}:25/?pool=true`;\n    }\n    const transporter = nodemailer.createTransport(realDSN);\n    transporter.verify((error, success) => {\n        if (!success) {\n            console.log(`DSN ${realDSN}: ${error}`);\n        }\n    });\n\n    return (subject: string, to: string[] | string, from: string, html: string) => {\n        return transporter.sendMail({\n            from,\n            to,\n            subject,\n            html,\n        });\n    };\n}\n", "import { default as fsWithCallbacks } from 'fs';\nconst fs = fsWithCallbacks.promises;\nimport { BackendStorage } from './contracts/BackendStorage';\n\nconst toFlatPropertyMap = (obj: any, keySeparator = '.') => {\n    const flattenRecursive = (obj: any, parentProperty?: string, propertyMap: Record<string, unknown> = {}) => {\n        for (const [key, value] of Object.entries(obj)) {\n            const property = parentProperty ? `${parentProperty}${keySeparator}${key}` : key;\n            if (value && typeof value === 'object') {\n                flattenRecursive(value, property, propertyMap);\n            } else {\n                propertyMap[property] = value;\n            }\n        }\n        return propertyMap;\n    };\n    return flattenRecursive(obj);\n};\n\n// we saved that in the memory first, then redis if it's available then fs\nexport default async (storage: BackendStorage, memoryStorage: BackendStorage, language: string) => {\n    const key = `translations-${language}`;\n    const memoryCachedFlat = await memoryStorage.get(key);\n    if (!memoryCachedFlat) {\n        const cachedFlat = await storage.get(key);\n        if (!cachedFlat) {\n            const raw = await fs.readFile(`./src/translations/${language}.json`, { encoding: 'utf8' });\n            const flat = toFlatPropertyMap(JSON.parse(raw));\n            memoryStorage.set(key, JSON.stringify(flat), 3600 * 4);\n            storage.set(key, JSON.stringify(flat), 3600 * 4);\n            return flat;\n        }\n        memoryStorage.set(key, cachedFlat, 3600 * 4);\n        return JSON.parse(cachedFlat);\n    }\n    return JSON.parse(memoryCachedFlat);\n};\n", "export const ErrorComponent: React.FC<{ text?: string; code?: number }> = ({ text = 'Not Found', code = 404 }) => {\n    return (\n        <section className=\"flex items-center h-screen p-16\">\n            <div className=\"container flex flex-col items-center justify-center px-5 mx-auto my-8\">\n                <div className=\"max-w-md text-center\">\n                    <h2 className=\"mb-8 font-extrabold text-9xl\">\n                        <span className=\"sr-only\">{text}</span>\n                        {code}\n                    </h2>\n                    <p className=\"text-2xl font-semibold md:text-3xl mb-10\">\n                        Sorry, we couldn't {code === 404 ? 'find' : 'load'} this page.\n                    </p>\n                    <a rel=\"noopener noreferrer\" href=\"/\" className=\"px-8 py-3 font-semibold rounded bg-buttonBg2\">\n                        Back to homepage\n                    </a>\n                </div>\n            </div>\n        </section>\n    );\n};\n", "import { LoaderFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport fetchAvailableBanks from '~/use-cases/payments/montonio/fetchAvailableBanks';\nimport { storage } from '~/use-cases/services.server';\nimport { getStoreFront } from '~/use-cases/storefront.server';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    if (params.provider !== 'montonio') {\n        return json({ error: 'Provider not supported' }, { status: 400 });\n    }\n    const cached = await storage.get('montonio-banks');\n    if (cached) {\n        return json(JSON.parse(cached));\n    }\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const points = await fetchAvailableBanks(storefront.config);\n    // AS per documentation we are going to cache this for 24 hours\n    storage.set('montonio-banks', JSON.stringify(points), 86400);\n    return json(points);\n};\n", "import { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport jwt from 'jsonwebtoken';\n\nexport default async (storeFrontConfig: TStoreFrontConfig) => {\n    const payload = {\n        access_key: `${process.env.MONTONIO_ACCESS_KEY ?? storeFrontConfig?.configuration?.MONTONIO_ACCESS_KEY}`,\n    };\n    const token = jwt.sign(\n        payload,\n        `${process.env.MONTONIO_SECRET_KEY ?? storeFrontConfig?.configuration?.MONTONIO_SECRET_KEY}`,\n        {\n            algorithm: 'HS256',\n            expiresIn: '1h',\n        },\n    );\n    const response = await fetch(\n        `https://api.${\n            process.env.MONTONIO_ORIGIN ?? storeFrontConfig?.configuration?.MONTONIO_ORIGIN\n        }/pis/v2/merchants/payment_methods`,\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`,\n            },\n        },\n    );\n    return await response.json();\n};\n", "import { LoaderFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport fetchPickupPoints from '~/use-cases/payments/montonio/fetchPickupPoints';\nimport { storage } from '~/use-cases/services.server';\nimport { getStoreFront } from '~/use-cases/storefront.server';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    if (params.provider !== 'montonio') {\n        return json({ error: 'Provider not supported' }, { status: 400 });\n    }\n    const cached = await storage.get('montonio-pickup-points');\n    if (cached) {\n        return json(JSON.parse(cached));\n    }\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const points = await fetchPickupPoints(storefront.config);\n    // AS per documentation we are going to cache this for 24 hours\n    storage.set('montonio-pickup-points', JSON.stringify(points), 86400);\n    return json(points);\n};\n", "import { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport jwt from 'jsonwebtoken';\n\nexport default async (storeFrontConfig: TStoreFrontConfig) => {\n    const payload = {\n        access_key: `${\n            process.env.MONTONIO_SHIPPING_ACCESS_KEY ?? storeFrontConfig?.configuration?.MONTONIO_SHIPPING_ACCESS_KEY\n        }`,\n    };\n    const token = jwt.sign(\n        payload,\n        `${process.env.MONTONIO_SHIPPING_SECRET_KEY ?? storeFrontConfig?.configuration?.MONTONIO_SHIPPING_SECRET_KEY}`,\n        {\n            algorithm: 'HS256',\n            expiresIn: '1h',\n        },\n    );\n    const response = await fetch(\n        `https://${\n            process.env.MONTONIO_SHIPPING_ORIGIN ?? storeFrontConfig?.configuration?.MONTONIO_SHIPPING_ORIGIN\n        }/pickup-points`,\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`,\n            },\n        },\n    );\n    return await response.json();\n};\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { cartWrapperRepository } from '~/use-cases/services.server';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport pushCrystalPaidOrder from '~/use-cases/crystallize/write/pushCrystalPaidOrder';\n\nexport const action: ActionFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const body = await request.json();\n    const cartId = body.cartId as string;\n    const cartWrapper = await cartWrapperRepository.find(cartId);\n    if (!cartWrapper) {\n        throw {\n            message: `Cart '${cartId}' does not exist.`,\n            status: 404,\n        };\n    }\n    const orderCreatedConfirmation = await pushCrystalPaidOrder(\n        cartWrapperRepository,\n        storefront.apiClient,\n        cartWrapper,\n        params.type as string,\n        body.card,\n    );\n    return json(orderCreatedConfirmation);\n};\n", "import {\n    ClientInterface,\n    createOrderPusher,\n    OrderCustomerInputRequest,\n    OrderCreatedConfirmation,\n    PaymentInputRequest,\n} from '@crystallize/js-api-client';\nimport { CartItem, CartWrapper, CartWrapperRepository } from '@crystallize/node-service-api-request-handlers';\nimport pushCustomerIfMissing from './pushCustomerIfMissing';\n\nconst buildCustomer = (cartWrapper: CartWrapper): OrderCustomerInputRequest => {\n    const firstName = cartWrapper?.customer?.firstname || '';\n    const lastName = cartWrapper?.customer?.lastname || '';\n    const customerIdentifier = cartWrapper?.customer?.customerIdentifier || cartWrapper?.customer?.email || '';\n    return {\n        identifier: customerIdentifier,\n        firstName,\n        lastName,\n        addresses: [\n            {\n                //@ts-ignore\n                type: 'billing',\n                firstName,\n                lastName,\n                email: cartWrapper?.customer?.email || '',\n                street: cartWrapper?.customer?.streetAddress || '',\n                city: cartWrapper?.customer?.city || '',\n                country: cartWrapper?.customer?.country || '',\n                postalCode: cartWrapper?.customer?.zipCode || '',\n            },\n            {\n                //@ts-ignore\n                type: 'delivery',\n                firstName,\n                lastName,\n                email: cartWrapper?.customer?.email || '',\n                street: cartWrapper?.customer?.streetAddress || '',\n                city: cartWrapper?.customer?.city || '',\n                country: cartWrapper?.customer?.country || '',\n                postalCode: cartWrapper?.customer?.zipCode || '',\n            },\n        ],\n    };\n};\n\nexport default async (\n    cartWrapperRepository: CartWrapperRepository,\n    apiClient: ClientInterface,\n    cartWrapper: CartWrapper,\n    payment: PaymentInputRequest,\n    metadata?: Record<string, string>,\n): Promise<OrderCreatedConfirmation> => {\n    const customer = buildCustomer(cartWrapper);\n    pushCustomerIfMissing(apiClient, customer).catch(console.error);\n\n    const cart = cartWrapper.cart;\n    if (cartWrapper?.extra?.orderId) {\n        throw {\n            message: `Order '${cartWrapper.extra.orderId}' already exists.`,\n            status: 403,\n        };\n    }\n\n    const extendedMetaData: Record<string, string> = {\n        'Additional info': cartWrapper?.customer?.additionalInfo || '',\n        ...metadata,\n    };\n\n    const pusher = createOrderPusher(apiClient);\n\n    const orderIntent = {\n        customer,\n        cart: cart.cart.items.map((item: CartItem) => {\n            return {\n                sku: item.variant.sku,\n                name: item.variant.name || item.variant.sku,\n                quantity: item.quantity,\n                imageUrl: item.variant.firstImage?.url || '',\n                price: {\n                    gross: item.price.gross,\n                    net: item.price.net,\n                    currency: item.price.currency,\n                    discounts:\n                        item.price.discounts?.map((discount) => ({\n                            percent: discount?.percent || 0.0,\n                        })) || [],\n                    tax: {\n                        name: 'VAT',\n                        percent: item.price.gross > 0 ? (item.price.net / item.price.gross - 1) * 100 : 0.0,\n                    },\n                },\n            };\n        }),\n        total: {\n            currency: cart.total.currency,\n            gross: cart.total.gross,\n            net: cart.total.net,\n            discounts:\n                cart.total.discounts?.map((discount) => ({\n                    percent: discount?.percent || 0.0,\n                })) || [],\n            tax: {\n                name: 'VAT',\n                percent: (cart.total.net / cart.total.gross - 1) * 100,\n            },\n        },\n        payment: [payment],\n        meta: Object.keys(extendedMetaData).map((key) => ({ key, value: extendedMetaData[key] ?? '' })),\n    };\n\n    const orderCreatedConfirmation = await pusher(orderIntent);\n    cartWrapperRepository.attachOrderId(cartWrapper, orderCreatedConfirmation.id);\n    return orderCreatedConfirmation;\n};\n", "import { ClientInterface, createCustomerManager, OrderCustomerInputRequest } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, orderCustomer: OrderCustomerInputRequest): Promise<void> => {\n    if (orderCustomer?.identifier === '') {\n        return;\n    }\n    const idResponse = await apiClient.catalogueApi(`query { tenant { id } }`);\n    await createCustomerManager(apiClient).create({\n        tenantId: idResponse.tenant.id,\n        firstName: orderCustomer?.firstName || '',\n        lastName: orderCustomer?.lastName || '',\n        identifier: orderCustomer?.identifier,\n        addresses: orderCustomer?.addresses,\n        email: orderCustomer?.identifier || '',\n    });\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { CartWrapper, CartWrapperRepository } from '@crystallize/node-service-api-request-handlers';\nimport pushOrder from './pushOrder';\n\nexport default async (\n    cartWrapperRepository: CartWrapperRepository,\n    apiClient: ClientInterface,\n    cartWrapper: CartWrapper,\n    type: string,\n    card?: any,\n) => {\n    let properties = [\n        {\n            property: 'amount',\n            value: cartWrapper.cart.total.gross.toFixed(2),\n        },\n        {\n            property: 'cartId',\n            value: cartWrapper.cartId,\n        },\n    ];\n\n    const isCoin = type === 'coin';\n    const isCard = type === 'card';\n    if (!isCoin && !isCard) {\n        properties.push({\n            property: 'payment_method',\n            value: 'Unknown Payment Method',\n        });\n    }\n\n    if (isCoin) {\n        properties.push({\n            property: 'payment_method',\n            value: 'Crystallize Coin',\n        });\n    }\n\n    if (isCard) {\n        properties.push(\n            {\n                property: 'payment_method',\n                value: 'Crystallize Card',\n            },\n            {\n                property: 'payment_card',\n                value: card?.number?.replace(/.(?=.{4,}$)/g, '*') || 'xxxx-xxxx-xxxx-xxxx',\n            },\n            {\n                property: 'payment_card_expiration',\n                value: card?.expiration || 'xx/xx',\n            },\n            {\n                property: 'payment_card_country',\n                value: card?.country || 'Unknown',\n            },\n            {\n                property: 'payment_card_zip',\n                value: card?.zip || 'xxxxx',\n            },\n        );\n    }\n\n    return await pushOrder(cartWrapperRepository, apiClient, cartWrapper, {\n        //@ts-ignore\n        provider: 'custom',\n        custom: {\n            properties,\n        },\n    });\n};\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { cartWrapperRepository } from '~/use-cases/services.server';\nimport receiveExpressCheckoutEvent from '~/use-cases/payments/vipps/receiveExpressCheckoutEvent';\n\nexport const action: ActionFunction = async ({ request }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const body = await request.json();\n    const data = await receiveExpressCheckoutEvent(\n        cartWrapperRepository,\n        storefront.apiClient,\n        body,\n        storefront.config,\n    );\n    return json(data);\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    CartWrapperRepository,\n    VippsAppCredentials,\n    fetchVippsPayment,\n    handleVippsPayPaymentUpdateWebhookRequestPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport handlePaymentAuthorized from './handlePaymentAuthorized';\nimport { pollingUntil } from '../../../use-cases/polling';\n\nexport default async (\n    cartWrapperRepository: CartWrapperRepository,\n    apiClient: ClientInterface,\n    payload: any,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    return await handleVippsPayPaymentUpdateWebhookRequestPayload(payload, {\n        handleEvent: async (expressCheckout: any) => {\n            const cartId = expressCheckout.orderId;\n            const cartWrapper = await cartWrapperRepository.find(cartId);\n            if (!cartWrapper) {\n                throw {\n                    message: `Cart '${cartId}' does not exist.`,\n                    status: 404,\n                };\n            }\n            if (expressCheckout?.transactionInfo?.status === 'RESERVE') {\n                const credentials: VippsAppCredentials = {\n                    origin: process.env.VIPPS_ORIGIN ?? storeFrontConfig?.configuration?.VIPPS_ORIGIN ?? '',\n                    clientId: process.env.VIPPS_CLIENT_ID ?? storeFrontConfig?.configuration?.VIPPS_CLIENT_ID ?? '',\n                    clientSecret:\n                        process.env.VIPPS_CLIENT_SECRET ?? storeFrontConfig?.configuration?.VIPPS_CLIENT_SECRET ?? '',\n                    merchantSerialNumber: process.env.VIPPS_MSN ?? storeFrontConfig?.configuration?.VIPPS_MSN ?? '',\n                    subscriptionKey:\n                        process.env.VIPPS_SUBSCRIPTION_KEY ??\n                        storeFrontConfig?.configuration?.VIPPS_SUBSCRIPTION_KEY ??\n                        '',\n                };\n                pollingUntil(async () => {\n                    const payment = await fetchVippsPayment(cartId, credentials);\n                    if (!payment) {\n                        return false;\n                    }\n\n                    // here we need to enrich the cart wrapper with user data\n                    let customer: any = {\n                        firstname: expressCheckout?.userDetails?.firstName ?? '',\n                        lastname: expressCheckout?.userDetails?.lastName ?? '',\n                        streetAddress:\n                            expressCheckout?.shippingDetails?.address?.addressLine1 ??\n                            '' + expressCheckout?.shippingDetails?.address?.addressLine2,\n                        city: expressCheckout?.shippingDetails?.address?.city ?? '',\n                        country: expressCheckout?.shippingDetails?.address?.country ?? '',\n                        zipCode: expressCheckout?.shippingDetails?.address?.zipCode ?? '',\n                        isGuest: true,\n                    };\n                    if (expressCheckout?.userDetails?.email) {\n                        customer.customerIdentifier = expressCheckout?.userDetails?.email;\n                        customer.email = expressCheckout?.userDetails?.email;\n                    }\n                    const enrichedCartWrapper = {\n                        ...cartWrapper,\n                        customer,\n                    };\n\n                    await handlePaymentAuthorized(\n                        cartWrapperRepository,\n                        enrichedCartWrapper,\n                        payment,\n                        apiClient,\n                        storeFrontConfig,\n                    ).catch(console.error);\n                    return payment.state !== 'CREATED'; // if that's different from CREATED we stop polling\n                });\n            }\n            return { status: expressCheckout?.transactionInfo?.status };\n        },\n    });\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    CartWrapper,\n    CartWrapperRepository,\n    VippsAppCredentials,\n    VippsReceipt,\n    addVippsReceiptOrder,\n} from '@crystallize/node-service-api-request-handlers';\nimport pushOrder from '~/use-cases/crystallize/write/pushOrder';\nimport pushVippsAuthorisedOrder from '~/use-cases/crystallize/write/pushVippsAuthorisedOrder';\n\nexport default async function (\n    cartWrapperRepository: CartWrapperRepository,\n    cartWrapper: CartWrapper,\n    payment: any,\n    apiClient: ClientInterface,\n    storeFrontConfig: TStoreFrontConfig,\n) {\n    let properties = [\n        {\n            property: 'payment_method',\n            value: 'Vipps',\n        },\n        {\n            property: 'VippsReference',\n            value: `${payment.reference}`,\n        },\n        {\n            property: 'VippsPSPReference',\n            value: `${payment.pspReference}`,\n        },\n        {\n            property: 'VippsPaymentMethod',\n            value: `${payment.paymentMethod.type}`,\n        },\n        {\n            property: 'cartId',\n            value: `${cartWrapper.cartId}`,\n        },\n    ];\n\n    const orderCreatedConfirmation = await pushOrder(cartWrapperRepository, apiClient, cartWrapper, {\n        //@ts-ignore\n        provider: 'custom',\n        custom: {\n            properties,\n        },\n    });\n\n    const credentials: VippsAppCredentials = {\n        origin: process.env.VIPPS_ORIGIN ?? storeFrontConfig?.configuration?.VIPPS_ORIGIN ?? '',\n        clientId: process.env.VIPPS_CLIENT_ID ?? storeFrontConfig?.configuration?.VIPPS_CLIENT_ID ?? '',\n        clientSecret: process.env.VIPPS_CLIENT_SECRET ?? storeFrontConfig?.configuration?.VIPPS_CLIENT_SECRET ?? '',\n        merchantSerialNumber: process.env.VIPPS_MSN ?? storeFrontConfig?.configuration?.VIPPS_MSN ?? '',\n        subscriptionKey:\n            process.env.VIPPS_SUBSCRIPTION_KEY ?? storeFrontConfig?.configuration?.VIPPS_SUBSCRIPTION_KEY ?? '',\n    };\n\n    pushVippsAuthorisedOrder(\n        apiClient,\n        orderCreatedConfirmation.id,\n        process.env.VIPPS_PIPELINE_ID || '',\n        process.env.VIPPS_AUTHORIZED_STAGE_ID || '',\n    );\n\n    const roundId = (value: number) => Math.round(value * 100) / 100;\n\n    const receipt: VippsReceipt = {\n        orderLines: cartWrapper.cart.cart.items.map((item) => ({\n            id: item.variant.sku ?? item.variant.id ?? item.product.id,\n            name: item.variant.name ?? item.product.name ?? item.variant.sku,\n            unitInfo: {\n                quantity: item.quantity,\n                quantityUnit: 'PCS',\n                unitPrice: roundId(item.price.net / item.quantity),\n            },\n            totalAmount: item.price.gross * 100,\n            totalAmountExcludingTax: item.price.net * 100,\n            totalTaxAmount: item.price.taxAmount * 100,\n            taxPercentage: roundId((item.price.taxAmount / item.price.gross) * 100),\n            discount:\n                roundId(\n                    item.price.discounts?.reduce((memo, discount) => {\n                        return memo + (discount.amount || 0);\n                    }, 0) ?? 0,\n                ) * 100,\n        })),\n        bottomLine: {\n            currency: 'NOK',\n            tipAmount: 0,\n            receiptNumber: orderCreatedConfirmation.id,\n        },\n    };\n    // no need to wait here\n    addVippsReceiptOrder(\n        {\n            paymentType: 'ecom',\n            orderId: cartWrapper.cartId,\n            receipt,\n        },\n        credentials,\n    );\n    return orderCreatedConfirmation;\n}\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (\n    apiClient: ClientInterface,\n    orderId: string,\n    pipelineId: string,\n    stageId: string,\n): Promise<void> => {\n    return await apiClient.pimApi(\n        `mutation { order { setPipelineStage(orderId: \"${orderId}\", pipelineId: \"${pipelineId}\", stageId: \"${stageId}\") { id } } }`,\n    );\n};\n", "export const pollingUntil = async (\n    condition: (iteration: number) => Promise<boolean>,\n    timeout: number = 3600000,\n    increment: number = 2000,\n) => {\n    let interval = increment;\n    let iteration = 0;\n\n    // first time we wait 2x the increment\n    if (iteration === 0) {\n        await new Promise((resolve) => setTimeout(resolve, 2 * increment));\n    }\n\n    const start = Date.now();\n    while (Date.now() - start < timeout) {\n        if (await condition(iteration++)) {\n            return true;\n        }\n        await new Promise((resolve) => setTimeout(resolve, interval));\n    }\n    return false;\n};\n", "import { LoaderFunction, redirect } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { authCookie } from '~/core/cookies.server';\nimport handleMagickLink from '~/use-cases/user/handleMagickLink';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const config = require('platformsh-config').config();\n    const frontendURL = config.isValidPlatform()\n        ? config.getRoute('frontapp').url.replace(/\\/$/, '').replace('*', storefront.config.identifier)\n        : requestContext.baseUrl;\n\n    const { redirectUrl, cookie } = await handleMagickLink(frontendURL, requestContext, params.token || '');\n\n    return redirect(redirectUrl as string, {\n        headers: {\n            'Set-Cookie': await authCookie.serialize(cookie),\n        },\n    });\n};\n", "import { createCookie } from '@remix-run/node';\n\nexport const authCookie = createCookie('authentication', {\n    maxAge: 604_800,\n});\n", "import { handleMagickLinkConfirmationRequestPayload } from '@crystallize/node-service-api-request-handlers';\nimport { buildLanguageMarketAwareLink } from '../LanguageAndMarket';\nimport { RequestContext } from '../http/utils';\n\nexport default async (frontendUrl: string, context: RequestContext, token: string) => {\n    const backLinkPath =\n        context.callbackPath !== ''\n            ? context.callbackPath\n            : buildLanguageMarketAwareLink('/checkout', context.language, context.market);\n\n    let cookie = {};\n    const redirectUrl = await handleMagickLinkConfirmationRequestPayload(null, {\n        token: token,\n        host: context.host,\n        jwtSecret: `${process.env.JWT_SECRET}`,\n        backLinkPath: `${frontendUrl}${backLinkPath}?token=:token`,\n        setCookie: (name: string, value: string) => {\n            cookie = {\n                ...cookie,\n                [name]: value,\n            };\n        },\n    });\n\n    return {\n        redirectUrl,\n        cookie,\n    };\n};\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport initiateBuyNowPayment from '~/use-cases/payments/vipps/initiateBuyNowPayment';\nimport { hydrateCart } from '~/use-cases/checkout/cart';\nimport { v4 as uuidv4 } from 'uuid';\nimport { handleAndPlaceCart } from '~/use-cases/checkout/handlePlaceCart';\n\nexport const action: ActionFunction = async ({ request, params }) => {\n    if (params.provider !== 'vipps') {\n        return json({ error: 'Provider not supported' }, { status: 400 });\n    }\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const body = await request.json();\n    const [cart] = await hydrateCart(storefront.config, storefront.apiClient, body.locale, body);\n    const cartWrapper = await handleAndPlaceCart(\n        cart,\n        {\n            isGuest: true,\n        },\n        uuidv4(),\n    );\n    const data = await initiateBuyNowPayment(cartWrapper, requestContext, storefront.config);\n    return json(data);\n};\n", "import { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    CartWrapper,\n    VippsAppCredentials,\n    handleVippsInitiateExpressCheckoutRequestPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport { buildLanguageMarketAwareLink } from '~/use-cases/LanguageAndMarket';\nimport { RequestContext } from '~/use-cases/http/utils';\n\nexport default async (cartWrapper: CartWrapper, context: RequestContext, storeFrontConfig: TStoreFrontConfig) => {\n    const credentials: VippsAppCredentials = {\n        origin: process.env.VIPPS_ORIGIN ?? storeFrontConfig?.configuration?.VIPPS_ORIGIN ?? '',\n        clientId: process.env.VIPPS_CLIENT_ID ?? storeFrontConfig?.configuration?.VIPPS_CLIENT_ID ?? '',\n        clientSecret: process.env.VIPPS_CLIENT_SECRET ?? storeFrontConfig?.configuration?.VIPPS_CLIENT_SECRET ?? '',\n        merchantSerialNumber: process.env.VIPPS_MSN ?? storeFrontConfig?.configuration?.VIPPS_MSN ?? '',\n        subscriptionKey:\n            process.env.VIPPS_SUBSCRIPTION_KEY ?? storeFrontConfig?.configuration?.VIPPS_SUBSCRIPTION_KEY ?? '',\n    };\n    const orderCartUrl = buildLanguageMarketAwareLink(\n        `/order/cart/${cartWrapper.cartId}`,\n        context.language,\n        context.market,\n    );\n\n    const webhookCallbackUrl = `/api/webhook/payment/vipps`;\n\n    return await handleVippsInitiateExpressCheckoutRequestPayload(\n        { cartId: cartWrapper.cartId },\n        {\n            ...credentials,\n            fetchCart: async () => {\n                return cartWrapper.cart;\n            },\n            callbackPrefix: `${context.baseUrl}${webhookCallbackUrl}`,\n            consentRemovalPrefix: `${context.baseUrl}${buildLanguageMarketAwareLink(\n                '/',\n                context.language,\n                context.market,\n            )}`,\n            fallback: `${context.baseUrl}${orderCartUrl}`,\n            extraMerchantInfo: {\n                staticShippingDetails: [\n                    {\n                        isDefault: 'N',\n                        priority: 1,\n                        shippingCost: 0,\n                        shippingMethod: 'Rocket',\n                        shippingMethodId: 'rocket',\n                    },\n                    {\n                        isDefault: 'Y',\n                        priority: 2,\n                        shippingCost: 0,\n                        shippingMethod: 'Bike',\n                        shippingMethodId: 'bike',\n                    },\n                ],\n            },\n        },\n    );\n};\n", "import {\n    Cart,\n    cartPayload,\n    CartPayload,\n    CartWrapper,\n    handleCartRequestPayload,\n    Price,\n} from '@crystallize/node-service-api-request-handlers';\nimport { extractDisountLotFromItemsBasedOnXForYTopic, groupSavingsPerSkus } from './discount';\nimport { validatePayload } from '../http/utils';\nimport {\n    ClientInterface,\n    createProductHydrater,\n    Product,\n    ProductPriceVariant,\n    ProductVariant,\n} from '@crystallize/js-api-client';\nimport { CrystallizeAPI } from '../crystallize/read';\nimport { marketIdentifiersForUser } from '../marketIdentifiersForUser';\nimport { Voucher } from '../contracts/Voucher';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\n\nexport async function alterCartBasedOnDiscounts(wrapper: CartWrapper): Promise<CartWrapper> {\n    const { cart, total } = wrapper.cart;\n    const lots = extractDisountLotFromItemsBasedOnXForYTopic(cart.items);\n    const savings = groupSavingsPerSkus(lots);\n    const existingDiscounts = total.discounts || [];\n    const voucher = wrapper.extra?.voucher as Voucher | undefined;\n    let newTotals: Price = {\n        gross: 0,\n        currency: total.currency,\n        net: 0,\n        taxAmount: 0,\n        discounts: [\n            {\n                amount: 0,\n                percent: 0,\n            },\n        ],\n    };\n\n    let voucherDiscount = {\n        amount: 0,\n        percent: 0,\n    };\n\n    const alteredItems = cart.items.map((item) => {\n        const saving = savings[item.variant.sku]?.quantity > 0 ? savings[item.variant.sku] : null;\n        const savingAmount = saving?.amount || 0;\n        const netAmount = item.price.net - savingAmount;\n        const taxAmount = (netAmount * (item.product?.vatType?.percent || 0)) / 100;\n        const grossAmount = netAmount + taxAmount;\n        const discount = {\n            amount: savingAmount,\n            percent: (savingAmount / (netAmount + savingAmount)) * 100,\n        };\n        newTotals.taxAmount += taxAmount;\n        newTotals.gross += grossAmount;\n        newTotals.net += netAmount;\n        newTotals.discounts![0].amount += discount.amount;\n        return {\n            ...item,\n            price: {\n                gross: grossAmount,\n                net: netAmount,\n                currency: item.price.currency,\n                taxAmount,\n                discounts: item.price.discounts ? [...item.price.discounts, discount] : [discount],\n            },\n        };\n    });\n\n    // calculate the New Discout Percentage\n    const newDiscounts = {\n        amount: newTotals.discounts![0].amount,\n        percent:\n            ((newTotals.net + newTotals.discounts![0].amount - newTotals.net) /\n                (newTotals.net + newTotals.discounts![0].amount)) *\n            100,\n    };\n\n    if (voucher) {\n        if (voucher.value.type === 'absolute') {\n            voucherDiscount = {\n                amount: voucher.value.number,\n                percent: (voucher.value.number / newTotals.gross) * 100,\n            };\n        }\n        if (voucher.value.type === 'percent') {\n            voucherDiscount = {\n                amount: (newTotals.gross * voucher.value.number) / 100,\n                percent: voucher.value.number,\n            };\n        }\n    }\n\n    //REDUCE THE TOTALS BY THE VOUCHER DISCOUNT\n    newTotals.net -= voucherDiscount?.amount;\n    newTotals.gross = newTotals.net + newTotals.taxAmount;\n\n    return {\n        ...wrapper,\n        cart: {\n            total: {\n                ...newTotals,\n                discounts: [...existingDiscounts, newDiscounts, voucherDiscount],\n            },\n            cart: {\n                items: alteredItems,\n            },\n        },\n        extra: {\n            ...wrapper.extra,\n            discounts: {\n                lots,\n                savings,\n            },\n        },\n    };\n}\n\nexport async function hydrateCart(\n    storeFrontConfig: TStoreFrontConfig,\n    apiClient: ClientInterface,\n    language: string,\n    body: any,\n): Promise<[Cart, Voucher | undefined]> {\n    const api = CrystallizeAPI({\n        apiClient,\n        language,\n    });\n    const tenantConfig = await api.fetchTenantConfig(storeFrontConfig.tenantIdentifier);\n    const currency = tenantConfig.currency.code;\n\n    const marketIdentifiers = marketIdentifiersForUser(body.user);\n\n    const pickStandardPrice = (\n        product: Product,\n        selectedVariant: ProductVariant,\n        currency: string,\n    ): ProductPriceVariant => {\n        // opinionated: if we have a `default` Price we take it\n        let variant = selectedVariant?.priceVariants?.find(\n            (price: ProductPriceVariant) =>\n                price?.identifier === 'default' &&\n                price?.currency?.toLocaleLowerCase() === currency.toLocaleLowerCase(),\n        );\n\n        //if we have a market price, we take that\n        if (variant?.priceFor?.price && variant?.priceFor?.price < variant?.price!) {\n            variant.price = variant?.priceFor?.price;\n        }\n\n        return (\n            variant ??\n            selectedVariant?.priceVariants?.[0] ?? {\n                price: selectedVariant?.price,\n                identifier: 'undefined',\n            }\n        );\n    };\n\n    const cart = await handleCartRequestPayload(validatePayload<CartPayload>(body, cartPayload), {\n        pricesHaveTaxesIncludedInCrystallize: storeFrontConfig.taxIncluded,\n        hydraterBySkus: createProductHydrater(apiClient, { useSyncApiForSKUs: false, marketIdentifiers }).bySkus,\n        currency,\n        perProduct: () => {\n            return {\n                topics: {\n                    name: true,\n                },\n            };\n        },\n        perVariant: () => {\n            return {\n                firstImage: {\n                    url: true,\n                    variants: {\n                        url: true,\n                        height: true,\n                        width: true,\n                    },\n                },\n            };\n        },\n        selectPriceVariant: (\n            product: Product,\n            selectedVariant: ProductVariant,\n            currency: string,\n        ): ProductPriceVariant => {\n            // opinionated: if we have a `Sales` Price we take it\n            const variant = selectedVariant?.priceVariants?.find(\n                (price: ProductPriceVariant) =>\n                    price?.identifier === 'sales' && price?.currency?.toLowerCase() === currency.toLocaleLowerCase(),\n            );\n            const standardPrice = pickStandardPrice(product, selectedVariant, currency);\n            if (!variant) {\n                return standardPrice;\n            }\n\n            if (!variant?.price) {\n                return standardPrice;\n            }\n\n            return variant;\n        },\n        basePriceVariant: (\n            product: Product,\n            selectedVariant: ProductVariant,\n            currency: string,\n        ): ProductPriceVariant => {\n            return pickStandardPrice(product, selectedVariant, currency);\n        },\n    });\n\n    let voucher: Voucher | undefined;\n    try {\n        voucher = (await api.fetchVoucher(body.extra?.voucher)) as Voucher;\n        if (voucher.isExpired) {\n            voucher = undefined;\n        }\n    } catch (exception) {\n        voucher = undefined;\n    }\n\n    return [cart, voucher];\n}\n", "import { CartItem } from '@crystallize/node-service-api-request-handlers';\n\nexport type Discount = {\n    treshold: number;\n    pack: number;\n    extra: number;\n    identifier: string;\n};\n\nexport type DiscountLot = {\n    items: Record<string, TDItem>;\n    appliedOn: Record<string, number>;\n    discount: Discount;\n};\n\nexport type TDItem = {\n    price: number;\n    sku: string;\n    quantity: number;\n};\n\nexport type Savings = Record<string, { quantity: number; amount: number }>;\n\nconst XforYRegexp = /^([0-9]){1,} for ([0-9]){1,}$/i;\n\nconst indexProductsPerDiscount = (items: CartItem[]): Record<string, TDItem[]> => {\n    const candidates: Record<string, TDItem[]> = {};\n    items.forEach((item) => {\n        const discounts = (item.product.topics?.filter((topic) => topic.name.match(XforYRegexp)) || []).map(\n            (topic) => topic.name,\n        );\n        discounts.forEach((discount) => {\n            if (item.quantity > 0) {\n                if (!candidates[discount]) {\n                    candidates[discount] = [];\n                }\n                for (let i = 0; i < item.quantity; i++) {\n                    candidates[discount].push({\n                        price: item.variantPrice.price || 0,\n                        sku: item.variant.sku,\n                        quantity: 1,\n                    });\n                }\n            }\n        });\n    });\n    return candidates;\n};\n\nexport const extractDisountLotFromItemsBasedOnXForYTopic = (cartItems: CartItem[]): DiscountLot[] => {\n    let lots: DiscountLot[] = [];\n    let lot = extractFirstDisountLotFromItemsBasedOnXForYTopic(cartItems);\n    let remainingItems = cartItems;\n    let memorySafety = 0;\n    while (lot !== null && memorySafety < 100) {\n        lots.push(lot);\n        remainingItems = remainingItems.map((item: CartItem) => {\n            if (lot!.appliedOn[item.variant.sku]) {\n                return {\n                    ...item,\n                    quantity: Math.max(0, item.quantity - lot!.appliedOn[item.variant.sku]),\n                };\n            }\n            return {\n                ...item,\n            };\n        });\n        lot = extractFirstDisountLotFromItemsBasedOnXForYTopic(remainingItems);\n        memorySafety++;\n    }\n    if (memorySafety >= 100) {\n        console.error('Memory safety triggered');\n    }\n    return lots;\n};\n\nexport const extractFirstDisountLotFromItemsBasedOnXForYTopic = (cartItems: CartItem[]): DiscountLot | null => {\n    const discountProductIndex = indexProductsPerDiscount(cartItems);\n    // Parse, sort and remove non matching discounts\n    const discounts: Discount[] = Object.keys(discountProductIndex)\n        .map((discount: string) => {\n            const results = XforYRegexp.exec(discount)!;\n            return {\n                treshold: parseInt(results[2]),\n                pack: parseInt(results[1]),\n                extra: parseInt(results[1]) - parseInt(results[2]),\n                identifier: discount,\n            };\n        })\n        .sort((a: Discount, b: Discount) => {\n            return a.treshold - b.treshold;\n        })\n        .filter((discount) => discountProductIndex[discount.identifier].length >= discount.pack);\n\n    if (discounts.length === 0) {\n        return null;\n    }\n    // we actually want to run on 1 discount only\n    const discount = discounts[0];\n    const sortedProducts = discountProductIndex[discount.identifier].sort(\n        (a: { price: number }, b: { price: number }) => a.price - b.price,\n    );\n    const discountedProducts = sortedProducts.slice(0, discount.extra);\n    const discountedProductsAggregate = discountedProducts.reduce(\n        (accumulator: Record<string, TDItem>, item: TDItem) => {\n            accumulator[item.sku] = {\n                ...item,\n                quantity: (accumulator[item.sku]?.quantity || 0) + item.quantity,\n            };\n            return accumulator;\n        },\n        {},\n    );\n    const discountedProductLot = sortedProducts.slice(0, discount.pack);\n    const discountedProductLotAggregate = discountedProductLot.reduce(\n        (accumulator: Record<string, number>, item: TDItem) => {\n            accumulator[item.sku] = (accumulator[item.sku] || 0) + item.quantity;\n            return accumulator;\n        },\n        {},\n    );\n    return {\n        appliedOn: discountedProductLotAggregate,\n        items: discountedProductsAggregate,\n        discount,\n    };\n};\n\nexport const groupSavingsPerSkus = (lots: DiscountLot[]): Savings => {\n    return lots.reduce((accumulator: Savings, lot: DiscountLot) => {\n        Object.keys(lot.items).forEach((sku: string) => {\n            const item = lot.items[sku];\n            accumulator[sku] = {\n                quantity: (accumulator[sku]?.quantity || 0) + item.quantity,\n                amount: (accumulator[sku]?.amount || 0) + item.price,\n            };\n        });\n        return accumulator;\n    }, {});\n};\n", "export const marketIdentifiersForUser = (user: any) => {\n    const emailDomain = user?.email?.split('@')[1] || null;\n\n    return emailDomain === 'crystallize.com' ? ['europe-b2c'] : [''];\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { CartWrapper } from '@crystallize/node-service-api-request-handlers';\nimport { Voucher } from '../contracts/Voucher';\nimport { RequestContext } from '../http/utils';\nimport { alterCartBasedOnDiscounts, hydrateCart } from './cart';\nimport { v4 as uuidv4 } from 'uuid';\nimport { cartWrapperRepository } from '../services.server';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\n\nexport default async (\n    storeFrontConfig: TStoreFrontConfig,\n    apiClient: ClientInterface,\n    context: RequestContext,\n    body: any,\n) => {\n    const [cart, voucher] = await hydrateCart(storeFrontConfig, apiClient, context.language, body);\n    return await handleAndSaveCart(cart, body.cartId as string, voucher);\n};\n\nexport async function handleAndSaveCart(cart: any, providedCartId: string, voucher?: Voucher): Promise<CartWrapper> {\n    let cartId = providedCartId;\n    let cartWrapper: null | CartWrapper = null;\n    let storedCartWrapper: null | CartWrapper = null;\n    if (cartId) {\n        storedCartWrapper = (await cartWrapperRepository.find(cartId)) || null;\n    } else {\n        cartId = uuidv4();\n    }\n    if (!storedCartWrapper) {\n        (cartWrapper = cartWrapperRepository.create(cart, cartId)), { voucher };\n    } else {\n        cartWrapper = { ...storedCartWrapper };\n        cartWrapper.cart = cart;\n        cartWrapper.extra.voucher = voucher;\n    }\n\n    // handle discount\n    cartWrapper = await alterCartBasedOnDiscounts(cartWrapper);\n\n    if (!cartWrapperRepository.save(cartWrapper)) {\n        return storedCartWrapper || cartWrapper;\n    }\n    return cartWrapper;\n}\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { Cart, CartWrapper } from '@crystallize/node-service-api-request-handlers';\nimport { RequestContext } from '../http/utils';\nimport { cartWrapperRepository } from '../services.server';\nimport { hydrateCart } from './cart';\nimport { handleAndSaveCart } from './handleSaveCart';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\n\nexport default async (\n    storeFrontConfig: TStoreFrontConfig,\n    apiClient: ClientInterface,\n    context: RequestContext,\n    body: any,\n    customer: any,\n) => {\n    const [cart, voucher] = await hydrateCart(storeFrontConfig, apiClient, context.language, body);\n    return await handleAndPlaceCart(cart, customer, body.cartId as string, body.options, voucher);\n};\n\nexport async function handleAndPlaceCart(\n    cart: Cart,\n    customer: any,\n    providedCartId: string,\n    options?: any,\n    voucher?: any,\n): Promise<CartWrapper> {\n    const cartWrapper = await handleAndSaveCart(cart, providedCartId, voucher);\n    cartWrapper.customer = customer;\n    cartWrapper.extra = {\n        ...cartWrapper.extra,\n        pickupPoint: options?.pickupPoint,\n    };\n    cartWrapperRepository.place(cartWrapper);\n    return cartWrapper;\n}\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { cartWrapperRepository } from '~/use-cases/services.server';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { default as initiateKlarnaPayment } from '~/use-cases/payments/klarna/initiatePayment';\nimport { default as initiateStripePayment } from '~/use-cases/payments/stripe/initiatePayment';\nimport { default as initiateQuickpayPayment } from '~/use-cases/payments/quickpay/initiatePayment';\nimport { default as initiateRazorPayPayment } from '~/use-cases/payments/razorpay/initiatePayment';\nimport { default as initiateMontonioPayPayment } from '~/use-cases/payments/montonio/initiatePayment';\nimport { default as initiateAdyenPayment } from '~/use-cases/payments/adyen/initiatePayment';\nimport { default as initiateVippsPayment } from '~/use-cases/payments/vipps/initiatePayment';\n\nexport const action: ActionFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const body = await request.json();\n    const cartId = body.cartId as string;\n    const cartWrapper = await cartWrapperRepository.find(cartId);\n    if (!cartWrapper) {\n        throw {\n            message: `Cart '${cartId}' does not exist.`,\n            status: 404,\n        };\n    }\n\n    const providers = {\n        klarna: initiateKlarnaPayment,\n        stripe: initiateStripePayment,\n        quickpay: initiateQuickpayPayment,\n        razorpay: initiateRazorPayPayment,\n        montonio: initiateMontonioPayPayment,\n        adyen: initiateAdyenPayment,\n        vipps: initiateVippsPayment,\n    };\n\n    const data = await providers[params.provider as keyof typeof providers](\n        cartWrapper,\n        requestContext,\n        body,\n        storefront.config,\n    );\n    return json(data);\n};\n", "import { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    Cart,\n    CartWrapper,\n    handleKlarnaInitiatePaymentRequestPayload,\n    klarnaInitiatePaymentPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport { RequestContext, validatePayload } from '../../http/utils';\nimport { buildLanguageMarketAwareLink } from '../../LanguageAndMarket';\nimport { getKlarnaOrderInfos, getKlarnaVariables } from './utils';\n\nexport default async (\n    cartWrapper: CartWrapper,\n    context: RequestContext,\n    payload: unknown,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    const currency = cartWrapper.cart.total.currency.toUpperCase();\n    const { locale, origin } = getKlarnaVariables(currency);\n\n    return await handleKlarnaInitiatePaymentRequestPayload(validatePayload(payload, klarnaInitiatePaymentPayload), {\n        origin,\n        country: locale.country,\n        locale: locale.locale,\n        credentials: {\n            username: process.env.KLARNA_USERNAME ?? storeFrontConfig?.configuration?.KLARNA_USERNAME ?? '',\n            password: process.env.KLARNA_PASSWORD ?? storeFrontConfig?.configuration?.KLARNA_PASSWORD ?? '',\n        },\n        fetchCart: async () => {\n            return cartWrapper.cart;\n        },\n        initiatePaymentArguments: (cart: Cart) => {\n            const orderCartLink = buildLanguageMarketAwareLink(\n                `/order/cart/${cartWrapper.cartId}`,\n                context.language,\n                context.market,\n            );\n\n            const data = {\n                ...getKlarnaOrderInfos(cart),\n                urls: {\n                    confirmation: `${context.baseUrl}${orderCartLink}`,\n                    authorization: `${context.baseUrl}/api/webhook/payment/klarna/${cartWrapper.cartId}`,\n                },\n            };\n            return data;\n        },\n    });\n};\n", "import { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport { Cart } from '@crystallize/node-service-api-request-handlers';\n\nexport const getKlarnaVariables = (currency: string, storefrontConfig?: TStoreFrontConfig) => {\n    let klarnaLocale = {\n        locale: 'en-US',\n        country: 'US',\n        currency: 'USD',\n    };\n    const origin =\n        process.env.KLARNA_ORIGIN ?? storefrontConfig?.configuration?.KLARNA_ORIGIN ?? 'api.playground.klarna.com';\n    // boilerplate opinionated code to simplify\n    // klarna is really strict on the Country / Currency / Locale mapping on a specific origin...\n    // so we need to map the currency to a country and locale\n    if (origin !== 'api-na.playground.klarna.com') {\n        klarnaLocale = {\n            locale: currency === 'NOK' ? 'en-NO' : currency === 'USD' ? 'en-US' : 'en-FR',\n            country: currency === 'NOK' ? 'NO' : currency === 'USD' ? 'US' : 'FR',\n            currency: currency,\n        };\n    }\n    return {\n        locale: klarnaLocale,\n        origin,\n    };\n};\n\nexport const getKlarnaOrderInfos = (cart: Cart) => {\n    const currency = cart.total.currency.toUpperCase();\n    const { locale } = getKlarnaVariables(currency);\n    return {\n        amount: cart.total.gross * 100,\n        currency: locale.currency,\n        order_lines: cart.cart.items.map((item) => {\n            const discountAmount =\n                item.price.discounts?.map((discount) => discount.amount).reduce((a, b) => a + b, 0) ?? 0;\n            return {\n                name: item.variant.name || item.variant.sku,\n                quantity: item.quantity,\n                total_amount: item.price.gross * 100,\n                total_discount_amount: discountAmount * 100,\n                unit_price: (item.price.gross / item.quantity + discountAmount) * 100,\n            };\n        }),\n    };\n};\n", "import { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    Cart,\n    CartWrapper,\n    handleStripeCreatePaymentIntentRequestPayload,\n    stripePaymentIntentPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport { RequestContext, validatePayload } from '../../http/utils';\n\nexport default async (\n    cartWrapper: CartWrapper,\n    context: RequestContext,\n    payload: unknown,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    return await handleStripeCreatePaymentIntentRequestPayload(validatePayload(payload, stripePaymentIntentPayload), {\n        secret_key: process.env.STRIPE_SECRET_KEY ?? storeFrontConfig?.configuration?.STRIPE_SECRET_KEY ?? '',\n        fetchCart: async () => {\n            return cartWrapper.cart;\n        },\n        createIntentArguments: (cart: Cart) => {\n            return {\n                amount: cart.total.gross * 100, // in cents (not sure here if this is correct)\n                currency: cart.total.currency,\n            };\n        },\n    });\n};\n", "import { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    Cart,\n    CartWrapper,\n    handleQuickPayCreatePaymentLinkRequestPayload,\n    quickPayCreatePaymentLinkPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport { RequestContext, validatePayload } from '../../http/utils';\nimport { buildLanguageMarketAwareLink } from '../../LanguageAndMarket';\n\nexport default async (\n    cartWrapper: CartWrapper,\n    context: RequestContext,\n    payload: unknown,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    return await handleQuickPayCreatePaymentLinkRequestPayload(\n        validatePayload(payload, quickPayCreatePaymentLinkPayload),\n        {\n            api_key: process.env.QUICKPAY_API_KEY ?? storeFrontConfig.configuration?.QUICKPAY_API_KEY ?? '',\n            fetchCart: async () => {\n                return cartWrapper.cart;\n            },\n            createPaymentArguments: (cart: Cart) => {\n                const orderCartLink = buildLanguageMarketAwareLink(\n                    `/order/cart/${cartWrapper.cartId}`,\n                    context.language,\n                    context.market,\n                );\n\n                return {\n                    amount: cart.total.gross * 100, // in cents\n                    currency: cart.total.currency,\n                    urls: {\n                        continue: `${context.baseUrl}${orderCartLink}`,\n                        cancel: `${context.baseUrl}/cancel-payment`,\n                        callback: `${context.baseUrl}/api/webhook/payment/quickpay`,\n                    },\n                };\n            },\n        },\n    );\n};\n", "import { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    CartWrapper,\n    handleRazorPayOrderPayload,\n    razorPayPaymentPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport { RequestContext, validatePayload } from '../../http/utils';\n\nexport default async (\n    cartWrapper: CartWrapper,\n    context: RequestContext,\n    payload: unknown,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    return await handleRazorPayOrderPayload(validatePayload(payload, razorPayPaymentPayload), {\n        currency: cartWrapper.cart.total.currency.toUpperCase(),\n        credentials: {\n            key_id: process.env.RAZORPAY_ID ?? storeFrontConfig?.configuration?.RAZORPAY_ID ?? '',\n            key_secret: process.env.RAZORPAY_SECRET ?? storeFrontConfig?.configuration?.RAZORPAY_SECRET ?? '',\n        },\n        fetchCart: async () => {\n            return cartWrapper.cart;\n        },\n    });\n};\n", "import { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    Cart,\n    CartWrapper,\n    handleMontonioCreatePaymentLinkRequestPayload,\n    montonioCreatePaymentLinkPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport { RequestContext, validatePayload } from '../../http/utils';\nimport { buildLanguageMarketAwareLink } from '../../LanguageAndMarket';\n\nexport default async (\n    cartWrapper: CartWrapper,\n    context: RequestContext,\n    payload: unknown,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    return await handleMontonioCreatePaymentLinkRequestPayload(\n        validatePayload(payload, montonioCreatePaymentLinkPayload),\n        {\n            origin: process.env.MONTONIO_ORIGIN ?? storeFrontConfig.configuration?.MONTONIO_ORIGIN ?? '',\n            access_key: process.env.MONTONIO_ACCESS_KEY ?? storeFrontConfig.configuration?.MONTONIO_ACCESS_KEY ?? '',\n            secret_key: process.env.MONTONIO_SECRET_KEY ?? storeFrontConfig.configuration?.MONTONIO_SECRET_KEY ?? '',\n            fetchCart: async () => {\n                return cartWrapper.cart;\n            },\n            otherPaymentArgumentsForLink: context.url.searchParams.has('method')\n                ? {\n                      preselected_aspsp: context.url.searchParams.get('method'),\n                  }\n                : {},\n            createPaymentArguments: (cart: Cart) => {\n                const orderCartLink = buildLanguageMarketAwareLink(\n                    `/order/cart/${cartWrapper.cartId}`,\n                    context.language,\n                    context.market,\n                );\n                return {\n                    amount: cart.total.gross,\n                    currency: cart.total.currency,\n                    urls: {\n                        return: `${context.baseUrl}${orderCartLink}`,\n                        notification: `${context.baseUrl}/api/webhook/payment/montonio`,\n                    },\n                    customer: {\n                        email: cartWrapper.customer.email,\n                        firstName: cartWrapper.customer.firstName,\n                        lastName: cartWrapper.customer.lastName,\n                    },\n                };\n            },\n        },\n    );\n};\n", "import { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    CartWrapper,\n    handleAdyenPaymentSessionPayload,\n    adyenPaymentPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport { RequestContext, validatePayload } from '../../http/utils';\nimport { buildLanguageMarketAwareLink } from '../../LanguageAndMarket';\n\nexport default async (\n    cartWrapper: CartWrapper,\n    context: RequestContext,\n    payload: unknown,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    const orderCartLink = buildLanguageMarketAwareLink(\n        `/order/cart/${cartWrapper.cartId}`,\n        context.language,\n        context.market,\n    );\n    const currency = cartWrapper.cart.total.currency.toUpperCase();\n\n    return await handleAdyenPaymentSessionPayload(validatePayload(payload, adyenPaymentPayload), {\n        currency,\n        returnUrl: `${context.baseUrl}${orderCartLink}`,\n        merchantAccount:\n            process.env.ADYEN_MERCHANT_ACCOUNT ?? storeFrontConfig?.configuration?.ADYEN_MERCHANT_ACCOUNT ?? '',\n        apiKey: process.env.ADYEN_API_KEY ?? storeFrontConfig?.configuration?.ADYEN_API_KEY ?? '',\n        env: process.env.ADYEN_ENV ?? storeFrontConfig?.configuration?.ADYEN_ENV ?? '',\n        countryCode: currency === 'NOK' ? 'NO' : currency === 'USD' ? 'US' : 'FR',\n        fetchCart: async () => {\n            return cartWrapper.cart;\n        },\n    });\n};\n", "import { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    Cart,\n    CartWrapper,\n    VippsAppCredentials,\n    fetchVippsCheckoutSession,\n    fetchVippsPayment,\n    handleVippsCreateCheckoutSessionRequestPayload,\n    handleVippsInitiatePaymentRequestPayload,\n    vippsInitiatePaymentPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport { RequestContext, validatePayload } from '../../http/utils';\nimport { buildLanguageMarketAwareLink } from '~/use-cases/LanguageAndMarket';\nimport { v4 as uuidv4 } from 'uuid';\nimport { pollingUntil } from '~/use-cases/polling';\nimport receivePaymentEvent from '~/use-cases/payments/vipps/receivePaymentEvent';\n\n// when using the webhook we won't need this\nimport { cartWrapperRepository } from '~/use-cases/services.server';\n\nexport default async (\n    cartWrapper: CartWrapper,\n    context: RequestContext,\n    payload: unknown,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    const vippsMethod = context.url.searchParams.get('method') ?? 'CARD';\n    const vippsFlowInput = context.url.searchParams.get('flow') ?? 'WEB_REDIRECT';\n\n    const vippsFlow = (() => {\n        if (vippsMethod === 'CARD') {\n            return 'WEB_REDIRECT';\n        }\n        if (vippsMethod === 'CHECKOUT') {\n            if (['IFRAME', 'HANDOFF'].includes(vippsFlowInput)) {\n                return 'IFRAME';\n            }\n        }\n        return vippsFlowInput;\n    })();\n\n    const credentials: VippsAppCredentials = {\n        origin: process.env.VIPPS_ORIGIN ?? storeFrontConfig?.configuration?.VIPPS_ORIGIN ?? '',\n        clientId: process.env.VIPPS_CLIENT_ID ?? storeFrontConfig?.configuration?.VIPPS_CLIENT_ID ?? '',\n        clientSecret: process.env.VIPPS_CLIENT_SECRET ?? storeFrontConfig?.configuration?.VIPPS_CLIENT_SECRET ?? '',\n        merchantSerialNumber: process.env.VIPPS_MSN ?? storeFrontConfig?.configuration?.VIPPS_MSN ?? '',\n        subscriptionKey:\n            process.env.VIPPS_SUBSCRIPTION_KEY ?? storeFrontConfig?.configuration?.VIPPS_SUBSCRIPTION_KEY ?? '',\n    };\n\n    const commons = {\n        ...credentials,\n        fetchCart: async () => {\n            return cartWrapper.cart;\n        },\n    };\n\n    /** Vipps Checkout flow is different, they use Polling\n     * https://developer.vippsmobilepay.com/docs/vipps-developers/common-topics/polling-guidelines/\n     *\n     * This is a boilerplate we are going to trigger the polling session here and imitate the webhook boilerplate mechanism\n     * So the day Vipps Webhooks are available we can just remove this and use the webhook mechanism\n     */\n\n    // Checkout flow\n    if (vippsMethod === 'CHECKOUT') {\n        const handlingResult = await handleVippsCreateCheckoutSessionRequestPayload(\n            validatePayload(payload, vippsInitiatePaymentPayload),\n            {\n                ...commons,\n                createCheckoutArguments: (cart: Cart) => {\n                    const orderCartLink = buildLanguageMarketAwareLink(\n                        `/order/cart/${cartWrapper.cartId}`,\n                        context.language,\n                        context.market,\n                    );\n                    const token = uuidv4();\n                    return {\n                        amount: cart.total.gross * 100, // in cents (not sure here if this is correct)\n                        currency: 'NOK', // cart.total.currency,\n                        callbackUrl: `${context.baseUrl}/api/webhook/payment/vipps?token=${token}`,\n                        returnUrl: `${context.baseUrl}${orderCartLink}`,\n                        callbackAuthorizationToken: token,\n                        paymentDescription: `Payment for Cart ${cartWrapper.cartId}`,\n                    };\n                },\n            },\n        );\n\n        if (handlingResult.pollingUrl) {\n            pollingUntil(async () => {\n                const { payment, session } = await fetchVippsCheckoutSession(handlingResult.pollingUrl, credentials);\n                if (!payment) {\n                    return false;\n                }\n                await receivePaymentEvent(cartWrapperRepository, cartWrapper, payment, storeFrontConfig).catch(\n                    console.error,\n                );\n                return session.paymentDetails?.state !== 'CREATED'; // if that's different from CREATED we stop polling\n            });\n        }\n        return handlingResult;\n    }\n\n    // ePayment flow\n    const handlingResult = await handleVippsInitiatePaymentRequestPayload(\n        validatePayload(payload, vippsInitiatePaymentPayload),\n        {\n            ...commons,\n            createIntentArguments: (cart: Cart) => {\n                const orderCartLink = buildLanguageMarketAwareLink(\n                    `/order/cart/${cartWrapper.cartId}`,\n                    context.language,\n                    context.market,\n                );\n                return {\n                    amount: cart.total.gross * 100, // in cents (not sure here if this is correct)\n                    currency: 'NOK', // cart.total.currency,\n                    paymentMethod: vippsMethod as 'CARD' | 'WALLET',\n                    userFlow: vippsFlow as 'PUSH_MESSAGE' | 'NATIVE_REDIRECT' | 'WEB_REDIRECT' | 'QR',\n                    returnUrl: `${context.baseUrl}${orderCartLink}`,\n                };\n            },\n        },\n    );\n\n    if (handlingResult.reference) {\n        pollingUntil(async () => {\n            const payment = await fetchVippsPayment(handlingResult.reference, credentials);\n            if (!payment) {\n                return false;\n            }\n            await receivePaymentEvent(cartWrapperRepository, cartWrapper, payment, storeFrontConfig).catch(\n                console.error,\n            );\n            return payment.state !== 'CREATED'; // if that's different from CREATED we stop polling\n        });\n    }\n    return handlingResult;\n};\n", "import { createClient } from '@crystallize/js-api-client';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    CartWrapper,\n    CartWrapperRepository,\n    handleVippsPayPaymentUpdateWebhookRequestPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport handlePaymentAuthorized from './handlePaymentAuthorized';\n\nexport default async (\n    cartWrapperRepository: CartWrapperRepository,\n    cartWrapper: CartWrapper, // once we actually use the webhook that won't be available, id will be in the payload fetchable by cartWrapperRepository\n    payload: any,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    // once again here that is a trick, when use with webhooks we should follow the same dependency injection pattern as the other payment\n    const apiClient = createClient({\n        tenantId: storeFrontConfig.tenantId,\n        tenantIdentifier: storeFrontConfig.tenantIdentifier,\n        accessTokenId: storeFrontConfig.configuration.CRYSTALLIZE_ACCESS_TOKEN_ID,\n        accessTokenSecret: storeFrontConfig.configuration.CRYSTALLIZE_ACCESS_TOKEN_SECRET,\n    });\n\n    return await handleVippsPayPaymentUpdateWebhookRequestPayload(payload, {\n        handleEvent: async (payment: any) => {\n            if (payment.state === 'AUTHORIZED') {\n                return await handlePaymentAuthorized(\n                    cartWrapperRepository,\n                    cartWrapper,\n                    payment,\n                    apiClient,\n                    storeFrontConfig,\n                );\n            }\n        },\n    });\n};\n", "import { LoaderFunction, Response } from '@remix-run/node';\nimport ReactPDF from '@react-pdf/renderer';\nimport { StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { getContext } from '~/use-cases/http/utils';\nimport { SingleProduct } from '~/ui/components/pdf/single-product';\nimport dataFetcherForShapePage from '~/use-cases/dataFetcherForShapePage.server';\nimport { Product } from '~/use-cases/contracts/Product';\nimport { authenticatedUser } from '~/core/authentication.server';\nimport { marketIdentifiersForUser } from '~/use-cases/marketIdentifiersForUser';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const path = `/shop/${params.folder}/${params.product}`;\n    const { shared } = await getStoreFront(requestContext.host);\n    const user = await authenticatedUser(request);\n    const data = (await dataFetcherForShapePage(\n        'product',\n        path,\n        requestContext,\n        params,\n        marketIdentifiersForUser(user),\n    )) as {\n        product: Product;\n    };\n    const pdf = await ReactPDF.renderToStream(<SingleProduct product={data.product} />);\n    return new Response(pdf, {\n        headers: {\n            ...StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier).headers,\n            'Content-Type': 'application/pdf',\n        },\n    });\n};\n", "import { Document, Page, Text, Image, View, Link } from '@react-pdf/renderer';\nimport { styles } from './styles';\nimport { ContentTransformer, NodeContent } from '@crystallize/reactjs-components';\nimport displayPriceFor from '~/use-cases/checkout/pricing';\nimport { Price } from './shared';\nimport type { Product as ProductType } from '~/use-cases/contracts/Product';\n\nconst overrides = {\n    link: (props: any) => (\n        <Link src={props.metadata.href}>\n            <NodeContent {...props} />\n        </Link>\n    ),\n\n    div: (props: any) => (\n        <View>\n            <NodeContent {...props} />\n        </View>\n    ),\n    span: (props: any) => (\n        <View>\n            <NodeContent {...props} />\n        </View>\n    ),\n    paragraph: (props: any) => (\n        <Text style={{ fontSize: 12 }}>\n            <NodeContent {...props} />\n        </Text>\n    ),\n    quote: (props: any) => (\n        <Text style={{ fontSize: 16, padding: 15 }}>\n            \"<NodeContent {...props} />\n            \"\"\n        </Text>\n    ),\n    'line-break': (props: any) => (\n        <Text style={{ fontSize: 16, width: '100%', height: '10' }}>\n            <NodeContent {...props} />\n        </Text>\n    ),\n};\n\nexport const SingleProduct: React.FC<{ product: ProductType }> = ({ product }) => {\n    const primaryVariant = product.defaultVariant;\n    let description = primaryVariant.description || product.description;\n    const currency = primaryVariant.priceVariants.default.currency;\n    const price = displayPriceFor(\n        primaryVariant,\n        {\n            default: 'default',\n            discounted: 'sales',\n        },\n        currency.code,\n    );\n\n    return (\n        <Document>\n            <Page style={styles.productPage}>\n                <View\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        position: 'relative',\n                        borderRadius: 6,\n                        borderWidth: 1,\n                        borderStyle: 'solid',\n                        borderColor: '#dfdfdf',\n                        overflow: 'hidden',\n                    }}\n                >\n                    <Image style={styles.image} src={product.defaultVariant.images[0].url} />\n                </View>\n                <View style={styles.productDescriptionContainer}>\n                    <Text style={styles.title}>{product.name}</Text>\n                    <Text style={styles.productDescription}>\n                        {!!description?.length &&\n                            (description?.length < 152 ? description : `${description?.slice(0, 152)} ...`)}\n                    </Text>\n\n                    <Text style={styles.price}>\n                        <Price currencyCode={currency.code}>{price.default}</Price>\n                    </Text>\n                </View>\n            </Page>\n\n            {product.story &&\n                product.story.map((paragraph, storyIndex) => {\n                    const images = paragraph.images;\n                    return (\n                        <Page style={{ height: '100%' }} key={`story-paragraph-#${storyIndex}`}>\n                            <View style={{ flexDirection: 'row', height: '100%' }}>\n                                {images && (\n                                    <View\n                                        style={{\n                                            minWidth: '50%',\n                                            height: '100%',\n                                            display: 'flex',\n                                            flexDirection: 'column',\n                                        }}\n                                    >\n                                        {images?.map((img, imgIndex) => (\n                                            <Image\n                                                key={`story-paragraph-#${storyIndex}-image-#${imgIndex}-${img.url}`}\n                                                src={img.url}\n                                                style={{\n                                                    height: '100%',\n                                                    width: '100%',\n                                                    maxHeight: `${100 / images.length}%`,\n                                                    overflow: 'hidden',\n                                                    objectFit: 'cover',\n                                                }}\n                                            />\n                                        ))}\n                                    </View>\n                                )}\n\n                                <View style={{ padding: images ? 35 : 100, width: '100%' }}>\n                                    <Text style={{ fontSize: 18, marginBottom: 15 }}>{paragraph.title}</Text>\n                                    <Text style={{ fontSize: 14, lineHeight: 1.6 }}>\n                                        <ContentTransformer json={paragraph.body?.json} overrides={overrides} />\n                                    </Text>\n                                </View>\n                            </View>\n                        </Page>\n                    );\n                })}\n            <Page style={styles.tablePage}>\n                <View style={styles.table}>\n                    <View style={styles.tableHeader}>\n                        <Text\n                            style={{\n                                ...styles.tableHeaderName,\n                                minWidth: '43%',\n                                paddingLeft: 40,\n                            }}\n                        >\n                            Name\n                        </Text>\n                        {Object.keys(product.defaultVariant.attributes).map((key) => (\n                            <Text\n                                key={`variants-attribute-header-${key}`}\n                                style={{ ...styles.tableHeaderName, width: '20%' }}\n                            >\n                                {product.defaultVariant.attributes[key]}\n                            </Text>\n                        ))}\n                        <Text\n                            style={{\n                                ...styles.tableHeaderName,\n                                paddingLeft: '5%',\n                            }}\n                        >\n                            Price\n                        </Text>\n                        <Text></Text>\n                    </View>\n                    {product.variants.map((variant, i) => {\n                        const variantPrice = displayPriceFor(\n                            variant,\n                            {\n                                default: 'default',\n                                discounted: 'sales',\n                            },\n                            currency.code,\n                        );\n\n                        return (\n                            <View\n                                key={i}\n                                style={{\n                                    ...styles.tableRow,\n                                    backgroundColor: `${i % 2 ? 'transparent' : '#f7f7f7'}`,\n                                }}\n                            >\n                                <Image style={styles.tableCellImage} src={variant?.images![0]?.url} />\n                                <View\n                                    style={{\n                                        ...styles.tableCellName,\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                    }}\n                                >\n                                    <Text style={{ fontSize: 8 }}>{variant?.name}</Text>\n                                    <Text style={{ fontSize: 8 }}>{variant?.sku}</Text>\n                                </View>\n\n                                {Object.keys(variant.attributes).map((key) => (\n                                    <Text\n                                        key={`attribute-value-${variant.sku}-${key}`}\n                                        style={{ fontSize: 10, color: '#000', width: '20%' }}\n                                    >\n                                        {variant.attributes[key]}\n                                    </Text>\n                                ))}\n\n                                <View\n                                    style={{\n                                        marginTop: 5,\n                                        width: '30%',\n                                        textAlign: 'right',\n                                        marginRight: 10,\n                                    }}\n                                >\n                                    {variantPrice.discounted && variantPrice.discounted < variantPrice.default ? (\n                                        <View>\n                                            <Text style={{ fontSize: 10, fontWeight: 600 }}>\n                                                <Price currencyCode={variantPrice.currency.code}>\n                                                    {variantPrice.discounted}\n                                                </Price>\n                                            </Text>\n                                            <View>\n                                                <Text\n                                                    style={{\n                                                        fontSize: 8,\n                                                        textDecoration: 'line-through',\n                                                    }}\n                                                >\n                                                    <Price currencyCode={variantPrice.currency.code}>\n                                                        {variantPrice.default}\n                                                    </Price>\n                                                </Text>\n                                            </View>\n                                        </View>\n                                    ) : (\n                                        <Text style={{ fontSize: 10, fontWeight: 600 }}>\n                                            <Price currencyCode={variantPrice.currency.code}>\n                                                {variantPrice.default}\n                                            </Price>\n                                        </Text>\n                                    )}\n                                </View>\n                            </View>\n                        );\n                    })}\n                </View>\n            </Page>\n        </Document>\n    );\n};\n", "import { StyleSheet } from '@react-pdf/renderer';\n\nexport const styles = StyleSheet.create({\n    productPage: {\n        // flexDirection: 'row',\n        fontFamily: 'Helvetica',\n    },\n    tablePage: {\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n    },\n    image: {\n        height: '100%',\n        width: '100%',\n        objectFit: 'cover',\n    },\n    title: {\n        marginBottom: 15,\n        fontWeight: 700,\n        color: '#fff',\n        fontSize: 24,\n    },\n    productDescriptionContainer: {\n        width: '50%',\n        position: 'absolute',\n        right: '0%',\n        top: '50%',\n        padding: 25,\n        borderTopLeftRadius: 6,\n        borderBottomLeftRadius: 6,\n        backgroundColor: '#000',\n    },\n    productDescription: {\n        color: '#fff',\n        fontSize: 10,\n        lineHeight: 1.5,\n    },\n    price: {\n        color: '#fff',\n        marginTop: 15,\n        fontStyle: 'bold',\n        borderRadius: 8,\n        fontSize: 16,\n        textAlign: 'left',\n    },\n    productName: {\n        fontWeight: 'bold',\n        fontSize: 16,\n        marginBottom: 10,\n    },\n    productPrice: {\n        fontWeight: 'bold',\n        fontSize: 12,\n    },\n    table: {\n        justifyContent: 'flex-start',\n        flexDirection: 'column',\n        padding: '10%',\n    },\n    tableRow: {\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexDirection: 'row',\n        borderTopWidth: 1,\n        borderTopColor: '#dfdfdf',\n    },\n    tableCell: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'row',\n        borderRadius: 4,\n    },\n    tableCellImage: {\n        width: 30,\n        height: 30,\n        marginRight: 10,\n    },\n    tableCellName: {\n        color: '#000',\n        fontSize: 10,\n        minWidth: '35%',\n        paddingTop: 15,\n        paddingBottom: 15,\n        fontWeight: 900,\n    },\n    tableHeader: {\n        alignItems: 'center',\n        flexDirection: 'row',\n        paddingBottom: 10,\n    },\n    tableHeaderName: {\n        fontSize: 8,\n        color: '#333',\n    },\n});\n", "import { getCurrencyFromCode } from '~/use-cases/contracts/Currency';\n\nimport { Text } from '@react-pdf/renderer';\n\nexport const Price: React.FC<{\n    children: number;\n    currencyCode: string;\n    className?: string;\n}> = ({ children, currencyCode }) => {\n    const currency = getCurrencyFromCode(currencyCode);\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: currency.code,\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 5,\n    });\n\n    return <Text>{formatter.format(children)}</Text>;\n};\n", "import { RequestContext } from './http/utils';\nimport { getStoreFront } from './storefront.server';\nimport { CrystallizeAPI } from './crystallize/read';\n\nexport default async (\n    shapeIdentifier: string,\n    path: string,\n    request: RequestContext,\n    params?: any,\n    marketIdentifiers?: string[],\n) => {\n    const { secret } = await getStoreFront(request.host);\n    const api = CrystallizeAPI({\n        apiClient: secret.apiClient,\n        language: request.language,\n        isPreview: request.isPreview,\n    });\n    const url = request.url;\n    switch (shapeIdentifier) {\n        case 'product':\n            const product = await api.fetchProduct(path, marketIdentifiers);\n            if (!product) {\n                throw new Response('Product Not Found', {\n                    status: 404,\n                    statusText: 'Product Not Found',\n                });\n            }\n            return {\n                product,\n                preSelectedSku: request.url.searchParams.get('sku') ?? '',\n            };\n        case 'category':\n            const searchParams = {\n                orderBy: url.searchParams.get('orderBy'),\n                filters: {\n                    price: {\n                        min: url.searchParams.get('min'),\n                        max: url.searchParams.get('max'),\n                    },\n                },\n                attributes: url.searchParams.getAll('attr'),\n            };\n            // we don't need to consider the preview params here.\n            url.searchParams.delete('preview');\n\n            //@todo: we have way too many query/fetch here, we need to agregate the query, GraphQL ;) => we can reduce to one call.\n            const [category, products, priceRangeAndAttributes] = await Promise.all([\n                api.fetchFolderWithChildren(path, marketIdentifiers),\n                api.searchOrderBy(path, searchParams.orderBy, searchParams.filters, searchParams.attributes),\n                api.fetchPriceRangeAndAttributes(path),\n            ]);\n\n            if (!category) {\n                throw new Response('Category Not Found', {\n                    status: 404,\n                    statusText: 'Category Not Found',\n                });\n            }\n            return { category, products, priceRangeAndAttributes };\n        case 'folder':\n            return await api.fetchFolderWithChildren(path, marketIdentifiers);\n        case 'abstract-story':\n        case 'story':\n        case 'curated-product-story':\n            const story = await api.fetchDocument(path, marketIdentifiers);\n            if (!story) {\n                throw new Response('Story Not Found', {\n                    status: 404,\n                    statusText: 'Story Not Found',\n                });\n            }\n            return story;\n\n        case '_topic':\n            const { products: topicProducts, topics } = await api.searchByTopic(path);\n            const topic = topics.find((topic) => topic.path === path);\n            return {\n                products: topicProducts,\n                topics,\n                topic,\n            };\n        case 'landing-page':\n            return await api.fetchLandingPage(path, marketIdentifiers);\n    }\n    throw new Error(`No page renderer found for shape ${shapeIdentifier}`);\n};\n", "import { authCookie } from '~/core/cookies.server';\nimport jwt, { JwtPayload } from 'jsonwebtoken';\n\nexport async function authenticate(request: Request): Promise<{ user: any } | undefined> {\n    const unauthorized = (code: number) => {\n        throw new Error('Unauthorized. Error code: ' + code);\n    };\n    const cookieHeader = request.headers.get('Cookie');\n    const cookie = (await authCookie.parse(cookieHeader)) || {};\n\n    const token = cookie.jwt;\n    if (token === undefined) {\n        unauthorized(1);\n    }\n    try {\n        const decoded = jwt.verify(token, `${process.env.JWT_SECRET}`);\n        if (decoded.sub === 'isLoggedInOnServiceApiToken') {\n            return {\n                user: jwt.decode(token as string) as JwtPayload,\n            };\n        }\n        unauthorized(3);\n    } catch (exception: any) {\n        console.log(exception.message);\n        unauthorized(2);\n    }\n    unauthorized(4);\n}\n\nexport async function authenticatedUser(request: Request): Promise<any> {\n    try {\n        let auth = await authenticate(request);\n        return auth?.user;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport async function isAuthenticated(request: Request): Promise<boolean> {\n    try {\n        await authenticate(request);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { cartWrapperRepository } from '~/use-cases/services.server';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport receivePaymentEvent from '~/use-cases/payments/razorpay/receivePaymentEvent';\n\nexport const action: ActionFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const body = await request.json();\n    const data = await receivePaymentEvent(cartWrapperRepository, storefront.apiClient, body, storefront.config);\n    return json(data);\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    CartWrapperRepository,\n    handleRazorPayPaymentVerificationPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport { cartWrapperRepository } from '~/use-cases/services.server';\nimport pushOrder from '../../crystallize/write/pushOrder';\n\nexport default async (\n    cartWrapper: CartWrapperRepository,\n    apiClient: ClientInterface,\n    payload: any,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    return await handleRazorPayPaymentVerificationPayload(payload, {\n        orderCreationId: payload.orderCreationId,\n        razorpayPaymentId: payload.razorpayPaymentId,\n        razorpayOrderId: payload.razorpayOrderId,\n        razorpaySignature: payload.razorpaySignature,\n        key_secret: process.env.RAZORPAY_SECRET || storeFrontConfig.configuration?.RAZORPAY_SECRET || '',\n        key_id: process.env.RAZORPAY_ID || storeFrontConfig.configuration?.RAZORPAY_ID || '',\n        handleEvent: async (eventName: string, event: any) => {\n            const cartId = event.notes.cartId;\n            const cartWrapper = await cartWrapperRepository.find(cartId);\n            if (!cartWrapper) {\n                throw {\n                    message: `Cart '${cartId}' does not exist.`,\n                    status: 404,\n                };\n            }\n            switch (eventName) {\n                case 'success':\n                    const orderCreatedConfirmation = await pushOrder(cartWrapperRepository, apiClient, cartWrapper!, {\n                        //@ts-ignore\n                        provider: 'custom',\n                        custom: {\n                            properties: [\n                                { property: 'razorpay_order_id', value: event.id },\n                                { property: 'razorpay_receipt', value: event.receipt },\n                            ],\n                        },\n                    });\n                    return orderCreatedConfirmation;\n            }\n        },\n    });\n};\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { createMailer } from '~/use-cases/services.server';\nimport { getContext } from '~/use-cases/http/utils';\nimport sendMagickLink from '~/use-cases/user/sendMagickLink';\n\nexport const action: ActionFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const mailer = createMailer(`${process.env.MAILER_DSN}`);\n    const body: any = await request.json();\n    const data = await sendMagickLink(requestContext, storefront.config, body, mailer);\n    return json(data);\n};\n", "import {\n    handleMagickLinkRegisterPayload,\n    magickLinkUserInfosPayload,\n    MagickLinkUserInfosPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport mjml2html from 'mjml';\nimport { buildLanguageMarketAwareLink } from '../LanguageAndMarket';\nimport { RequestContext, validatePayload } from '../http/utils';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\n\nexport default async (\n    context: RequestContext,\n    storefrontConfig: TStoreFrontConfig,\n    payload: any,\n    mailer: (subject: string, to: string[] | string, from: string, html: string) => void,\n) => {\n    const confirmPath = buildLanguageMarketAwareLink(\n        '/api/magicklink/confirm/:token',\n        context.language,\n        context.market,\n    );\n    return await handleMagickLinkRegisterPayload(\n        validatePayload<MagickLinkUserInfosPayload>(payload, magickLinkUserInfosPayload),\n        {\n            mailer,\n            jwtSecret: `${process.env.JWT_SECRET}`,\n            confirmLinkUrl:\n                `${context.baseUrl}${confirmPath}` +\n                (context.callbackPath !== '' ? `?callbackPath=${context.callbackPath}` : ''),\n            subject: `[Crystallize - ${storefrontConfig.identifier}] - Magic link login`,\n            from: 'hello@crystallize.com',\n            buildHtml: (request: MagickLinkUserInfosPayload, link: string) =>\n                mjml2html(\n                    `<mjml>\n                        <mj-body>\n                        <mj-section>\n                            <mj-column>\n                            <mj-text>Hi there ${request.email}! Simply follow the link below to login.</mj-text>\n                            <mj-button href=\"${link}\" align=\"left\">Click here to login</mj-button>\n                            </mj-column>\n                        </mj-section>\n                        </mj-body>\n                    </mjml>`,\n                ).html,\n            host: context.host,\n        },\n    );\n};\n", "import { LoaderFunction, Response } from '@remix-run/node';\nimport ReactPDF from '@react-pdf/renderer';\nimport { Invoice } from '~/ui/components/pdf/order-invoice';\nimport { createOrderFetcher } from '@crystallize/js-api-client';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { getContext } from '~/use-cases/http/utils';\n\nexport const loader: LoaderFunction = async ({ context, params, request }) => {\n    const requestContext = getContext(request);\n    const { secret } = await getStoreFront(requestContext.host);\n    const response = await createOrderFetcher(secret.apiClient).byId(`${params.id}`);\n    let pdf = await ReactPDF.renderToStream(<Invoice data={response} />);\n\n    return new Response(pdf, {\n        headers: {\n            'Content-Type': 'application/pdf',\n        },\n    });\n};\n", "import { Document, Page, Text, Image, StyleSheet, View, Font } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n    page: {\n        fontFamily: 'Helvetica',\n        fontSize: 11,\n        paddingTop: 30,\n        paddingLeft: 60,\n        paddingRight: 60,\n        lineHeight: 1.5,\n        flexDirection: 'column',\n        backgroundColor: '#fff',\n    },\n    tablePage: {\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n    },\n    image: {\n        height: '70px',\n        width: '70px',\n    },\n    title: {\n        marginBottom: 15,\n        fontWeight: 'bold',\n        color: '#434343',\n        fontSize: 20,\n    },\n    productDescription: {\n        color: '#373567',\n        width: '60%',\n        fontSize: 16,\n        textAlign: 'center',\n        lineHeight: '140%',\n    },\n\n    productName: {\n        fontWeight: 'bold',\n        fontSize: 16,\n        marginBottom: 10,\n    },\n    productPrice: {\n        fontWeight: 'bold',\n        fontSize: 12,\n    },\n    table: {\n        justifyContent: 'flex-start',\n        flexDirection: 'column',\n        paddingTop: 80,\n    },\n    tableRow: {\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexDirection: 'row',\n        borderTopWidth: 1,\n        borderTopColor: '#434343',\n        borderBottomWidth: 1,\n        borderBottomColor: '#434343',\n    },\n    tableCell: {\n        flexDirection: 'row',\n    },\n    tableCellImage: {\n        width: 30,\n        height: 30,\n        marginRight: 10,\n    },\n    tableCellName: {\n        color: '#434343',\n        fontSize: 12,\n        minWidth: '35%',\n        paddingTop: 15,\n        paddingBottom: 15,\n    },\n    tableHeader: {\n        alignItems: 'center',\n        flexDirection: 'row',\n        paddingBottom: 10,\n    },\n    tableHeaderName: {\n        fontSize: 12,\n        color: '#434343',\n    },\n    container: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingBottom: '80px',\n        paddingTop: 10,\n    },\n    address: {\n        textAlign: 'right',\n        fontSize: 12,\n        color: '#434343',\n    },\n    lineContainer: {\n        borderBottom: '1px solid black',\n    },\n    infoContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingTop: 10,\n        width: '50%',\n        paddingBottom: 10,\n    },\n    infoFields: {\n        color: '#7D7D7D',\n        fontWeight: 'bold',\n    },\n    infoDetails: {\n        color: '#434343',\n    },\n    totals: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        width: '100%',\n        marginTop: 20,\n        fontWeight: 'bold',\n        paddingRight: 30,\n    },\n    priceInfo: {\n        width: '200px',\n    },\n});\n\nexport const Invoice = (data: any) => {\n    let order = data.data;\n    const date = new Date(order.createdAt);\n    let creationDate = date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    });\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: order.total.currency,\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n    });\n\n    return (\n        <Document>\n            <Page style={styles.page}>\n                <View style={styles.lineContainer}>\n                    <Text style={styles.title}>Receipt</Text>\n                </View>\n                <View style={styles.lineContainer}>\n                    <View style={styles.infoContainer}>\n                        <View style={styles.infoFields}>\n                            <Text>Order Number:</Text>\n                            <Text>Date of Issue:</Text>\n                            <Text>Due Date:</Text>\n                            <Text>Email:</Text>\n                        </View>\n                        <View style={styles.infoDetails}>\n                            <Text>{order.id}</Text>\n                            <Text>{creationDate}</Text>\n                            <Text>{creationDate}</Text>\n                            <Text>{order?.customer?.identifier}</Text>\n                        </View>\n                    </View>\n                </View>\n                <View style={styles.table}>\n                    <View style={styles.tableHeader}>\n                        <Text\n                            style={{\n                                ...styles.tableHeaderName,\n                                minWidth: '40%',\n                            }}\n                        >\n                            Name\n                        </Text>\n\n                        <Text style={{ ...styles.tableHeaderName, width: '38%' }}>Quantity</Text>\n\n                        <Text\n                            style={{\n                                ...styles.tableHeaderName,\n                                paddingLeft: '5%',\n                            }}\n                        >\n                            Price\n                        </Text>\n                    </View>\n                    {order?.cart?.map((item: any, index: number) => (\n                        <View\n                            key={index}\n                            style={{\n                                ...styles.tableRow,\n                                backgroundColor: `${index % 2 ? 'transparent' : '#fff'}`,\n                            }}\n                        >\n                            <Text style={{ width: '40%' }}>{item?.name}</Text>\n\n                            <Text style={{ width: '40%' }}>{item?.quantity}</Text>\n\n                            <Text\n                                style={{\n                                    marginTop: 0,\n                                    padding: 5,\n                                    marginLeft: '3%',\n                                }}\n                            >\n                                {formatter.format(item.price?.gross)}\n                            </Text>\n                        </View>\n                    ))}\n                </View>\n                <View style={{ width: '100%' }}>\n                    <View style={styles.totals}>\n                        <View style={styles.priceInfo}>\n                            <Text>Tax ({order.total.tax.percent}%)</Text>\n                            <Text style={{ marginTop: 5 }}>Total:</Text>\n                        </View>\n                        <View>\n                            <Text>{formatter.format(order.total.gross - order.total.net)}</Text>\n                            <Text style={{ marginTop: 5 }}>{formatter.format(order.total.gross)}</Text>\n                        </View>\n                    </View>\n                </View>\n                <Text style={{ marginTop: 200, textAlign: 'center' }}>Thank you for your purchase!</Text>\n            </Page>\n        </Document>\n    );\n};\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport receivePaymentEvent from '~/use-cases/payments/klarna/receivePaymentEvent';\nimport { cartWrapperRepository } from '~/use-cases/services.server';\n\nexport const action: ActionFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const cartId = params.cartId as string;\n    const body = await request.json();\n    const data = await receivePaymentEvent(\n        cartWrapperRepository,\n        storefront.apiClient,\n        cartId,\n        body,\n        storefront.config,\n    );\n    return json(data);\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    Cart,\n    CartWrapperRepository,\n    handleKlarnaPaymentWebhookRequestPayload,\n    KlarnaOrderResponse,\n} from '@crystallize/node-service-api-request-handlers';\nimport pushOrder from '../../crystallize/write/pushOrder';\nimport { getKlarnaOrderInfos, getKlarnaVariables } from './utils';\n\nexport default async (\n    cartWrapperRepository: CartWrapperRepository,\n    apiClient: ClientInterface,\n    cartId: string,\n    payload: any,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    const cartWrapper = await cartWrapperRepository.find(cartId);\n    if (!cartWrapper) {\n        throw {\n            message: `Cart '${cartId}' does not exist.`,\n            status: 404,\n        };\n    }\n    const currency = cartWrapper.cart.total.currency.toUpperCase();\n    const { locale, origin } = getKlarnaVariables(currency);\n    await handleKlarnaPaymentWebhookRequestPayload(payload, {\n        cartId,\n        origin,\n        country: locale.country,\n        locale: locale.locale,\n        credentials: {\n            username: process.env.KLARNA_USERNAME ?? storeFrontConfig.configuration?.KLARNA_USERNAME ?? '',\n            password: process.env.KLARNA_PASSWORD ?? storeFrontConfig.configuration?.KLARNA_PASSWORD ?? '',\n        },\n        fetchCart: async () => {\n            return cartWrapper.cart;\n        },\n        handleEvent: async (orderResponse: KlarnaOrderResponse) => {\n            const orderCreatedConfirmation = await pushOrder(cartWrapperRepository, apiClient, cartWrapper, {\n                //@ts-ignore\n                provider: 'klarna',\n                klarna: {\n                    orderId: orderResponse.order_id,\n                    merchantReference1: cartId,\n                },\n            });\n            return orderCreatedConfirmation;\n        },\n        confirmPaymentArguments: (cart: Cart) => {\n            return {\n                ...getKlarnaOrderInfos(cart),\n            };\n        },\n    });\n};\n", "import { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { HeadersFunction, json, LinksFunction, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { buildMetas } from '~/use-cases/MicrodataBuilder';\nimport { getContext } from '~/use-cases/http/utils';\nimport Product from '~/ui/pages/Product';\nimport dataFetcherForShapePage from '~/use-cases/dataFetcherForShapePage.server';\nimport videoStyles from '@crystallize/reactjs-components/assets/video/styles.css';\nimport { authenticatedUser } from '~/core/authentication.server';\nimport { marketIdentifiersForUser } from '~/use-cases/marketIdentifiersForUser';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n    return buildMetas(data.data);\n};\n\nexport const links: LinksFunction = () => {\n    return [{ rel: 'stylesheet', href: videoStyles }];\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const path = `/shop/${params.folder}/${params.product}`;\n    const { shared } = await getStoreFront(requestContext.host);\n    const user = await authenticatedUser(request);\n\n    const data = await dataFetcherForShapePage('product', path, requestContext, params, marketIdentifiersForUser(user));\n    return json({ data }, StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier));\n};\n\nexport default () => {\n    const { data } = useLoaderData();\n    return <Product data={data} />;\n};\n", "export const buildMetas = (data: any) => {\n    const item = data?.product || data?.folder || data?.document || data?.data || data;\n\n    const metaData =\n        item?.meta?.content?.chunks?.[0] || item?.meta?.content?.chunks?.[0] || item?.meta?.content?.chunks?.[0];\n    const title = item?.title || metaData?.find((meta: any) => meta.id === 'title')?.content?.text;\n    const description =\n        item?.description || metaData?.find((meta: any) => meta.id === 'description')?.content?.plainText?.[0];\n    const image =\n        item?.defaultVariant?.images[0]?.url ||\n        metaData?.find((meta: any) => meta.id === 'image')?.content?.firstImage?.url;\n    const altDescription = item?.components?.find((comp: any) => comp.id === 'description')?.content?.plainText?.[0];\n    const altImage =\n        item?.variants?.[0]?.images?.[0]?.url ||\n        item?.components?.find((comp: any) => comp.id === 'shoppable-image')?.content?.images?.[0]?.variants?.[0]?.url;\n\n    const seo = {\n        title: item?.seo?.title || title || item?.name,\n        description: item?.seo?.description || description?.plainText || description || altDescription,\n        image: item?.seo?.image || image || altImage,\n    };\n\n    return {\n        title: seo.title,\n        'og:title': seo.title,\n        description: seo.description,\n        'og:description': seo.description,\n        'og:image': seo.image,\n        'twitter:image': seo.image,\n        'twitter:card': 'summary_large_image',\n        'twitter:description': seo.description,\n    };\n};\n", "'use client';\nimport { useEffect, useState } from 'react';\nimport { useAppContext } from '../app-context/provider';\nimport { AddToCartBtn } from '../components/add-to-cart-button';\nimport { ImageGallery } from '../components/image-gallery';\nimport { Product } from '../components/item/product';\nimport type { Product as ProductType } from '~/use-cases/contracts/Product';\nimport { Price } from '../components/price';\nimport { ProductBody } from '../components/product/product-body';\nimport { StockLocations } from '../components/product/stock-location';\nimport { TopicLabels } from '../components/product/topic-labels';\nimport { VariantSelector } from '../components/variant-selector';\nimport { ProductVariant } from '~/use-cases/contracts/ProductVariant';\nimport { buildSchemaMarkup } from '~/use-cases/SchemaMarkupBuilder';\n\nexport default ({\n    data,\n}: {\n    data: {\n        product: ProductType;\n        preSelectedSku: string;\n    };\n}) => {\n    const { _t } = useAppContext();\n    const { product, preSelectedSku } = data;\n\n    const primaryVariant = product.variants.find((variant) => variant.sku === preSelectedSku) ?? product.defaultVariant;\n    let [selectedVariant, setSelectedVariant] = useState(primaryVariant);\n    const description = selectedVariant.description || product.description;\n\n    useEffect(() => {\n        setSelectedVariant(primaryVariant);\n    }, [product]);\n\n    return (\n        <>\n            <script\n                type=\"application/ld+json\"\n                dangerouslySetInnerHTML={{\n                    __html: JSON.stringify(buildSchemaMarkup(product)),\n                }}\n            />\n            <div className=\"pl-6 md:px-6 mx-auto xl:container full\">\n                <div className=\"flex gap-20 lg:flex-row flex-col-reverse \">\n                    <div className=\"lg:w-4/6 w-full pr-6 md:pr-6\">\n                        <div className=\"img-container overflow-hidden rounded-md\">\n                            <ImageGallery images={selectedVariant.images} />\n                        </div>\n                        <ProductBody\n                            story={product?.story}\n                            propertiesTable={product?.specifications}\n                            dimensions={product?.dimensions}\n                            downloads={product?.downloads}\n                        />\n                    </div>\n                    <div className=\"lg:w-2/6 w-full\">\n                        <div className=\"flex flex-col gap-2 sticky top-16 pb-10\">\n                            <div className=\"mb-2\">{product.topics && <TopicLabels topics={product.topics} />}</div>\n                            <div className=\"pr-6 md:pr-6\">\n                                <h1 className=\"font-bold text-4xl mb-2\">{product.title}</h1>\n                                <p className=\"text-md font-normal\">{description}</p>\n                            </div>\n                            <VariantSelector\n                                variants={product.variants}\n                                selectedVariant={selectedVariant}\n                                onVariantChange={(variant: ProductVariant) => {\n                                    const url = new URL(window.location.href);\n                                    url.searchParams.set('sku', variant.sku);\n                                    window.history.pushState({}, '', url);\n                                    setSelectedVariant(variant);\n                                }}\n                                renderingType=\"default\"\n                            />\n                            {selectedVariant && (\n                                <div className=\"\">\n                                    <Price variant={selectedVariant} />\n                                    <AddToCartBtn pack={[{ variant: selectedVariant, quantity: 1 }]} />\n                                </div>\n                            )}\n                            <div className=\"bg-[#dfdfdf] h-[1px] mt-5\" />\n                            <StockLocations locations={Object.values(selectedVariant.stockLocations)} />\n                        </div>\n                    </div>\n                </div>\n\n                {product.relatedItems && (\n                    <div className=\"w-full border-t border-[#dfdfdf] pr-6 sm:pr-0\">\n                        <h2 className=\"font-bold mt-20 mb-4 text-xl\">{_t('relatedProducts')}</h2>\n                        <div className=\"grid gap-5 grid-cols-2 grid md:grid-cols-4 lg:grid-cols-5 pb-5\">\n                            {product.relatedItems.map((item, index) => (\n                                <Product item={item} key={`${item.path}-${index}`} />\n                            ))}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    );\n};\n", "import { useState } from 'react';\nimport { useLocalCart } from '../hooks/useLocalCart';\nimport { useAppContext } from '../app-context/provider';\nimport { ProductVariant } from '../../use-cases/contracts/ProductVariant';\nimport { ServiceAPI } from '../../use-cases/service-api';\n\nexport type VariantPack = VariantPackItem[];\n\nexport type VariantPackItem = {\n    variant: ProductVariant;\n    quantity: number;\n    key?: string; // a pack can have multiple items with the same variant...\n};\n\nexport const AddToCartBtn: React.FC<{\n    pack: VariantPack;\n    label?: string;\n}> = ({ pack, label = 'addToCart' }) => {\n    const { state } = useAppContext();\n    const [showTada, setShowTada] = useState(false);\n    const { dispatch: contextDispatch, _t } = useAppContext();\n    const [showLoader, setShowLoader] = useState(false);\n    const { add } = useLocalCart();\n\n    const handleClick = () => {\n        setShowTada(true);\n        contextDispatch.addItemsToCart(pack.map((packitem: VariantPackItem) => packitem.variant));\n\n        pack.forEach((packitem: VariantPackItem) => {\n            add(\n                {\n                    name: packitem.variant.name,\n                    sku: packitem.variant.sku,\n                    price:\n                        packitem.variant.priceVariants.default.priceFor.price <\n                        packitem.variant.priceVariants.default.value\n                            ? packitem.variant.priceVariants.default.priceFor.price\n                            : packitem.variant.priceVariants.default.value,\n                },\n                packitem.quantity,\n            );\n        });\n        setTimeout(() => {\n            setShowTada(false);\n        }, 1500);\n    };\n\n    let defaultStock = pack.reduce((memo: number, packitem: VariantPackItem) => {\n        const defaultStockLocation = packitem.variant?.stockLocations?.default;\n        return memo + (defaultStockLocation?.stock || 0);\n    }, 0);\n\n    return (\n        <div className=\"flex gap-1 mt-4 flex-col sm:flex-row\">\n            <button\n                data-testid=\"add-to-cart-button\"\n                className=\"bg-[#000] border px-5 py-3 relative overflow-hidden h-[50px] rounded-md text-[#fff] sm:w-[180px] w-full font-bold hover:bg-black-100 disabled:opacity-50 disabled:cursor-not-allowed\"\n                onClick={() => {\n                    handleClick();\n                }}\n                disabled={defaultStock < 1}\n            >\n                <span\n                    className={`transition-all left-0 top-0 h-full w-full flex items-center justify-center absolute\n                    ${showTada ? 'scale-0' : 'scale-100'}`}\n                >\n                    {_t(label)}\n                </span>\n                <span\n                    className={`text-3xl transition-all left-0 top-0 h-full w-full flex items-center justify-center absolute ${\n                        showTada ? 'scale-100' : 'scale-0'\n                    }`}\n                >\n                    \uD83C\uDF89\n                </span>\n            </button>\n            {state.paymentImplementations.includes('vipps') && (\n                <>\n                    <button\n                        className=\"flex flex-row gap-1 items-center bg-textBlack border py-3 relative overflow-hidden h-[50px] rounded-md text-[#fff] sm:w-[200px] w-full font-bold  disabled:opacity-50 disabled:cursor-not-allowed justify-center hover:brightness-95\"\n                        onClick={async () => {\n                            setShowLoader(true);\n                            const response = await ServiceAPI({\n                                language: state.language,\n                                serviceApiUrl: state.serviceApiUrl,\n                            }).vipps.initiateExpressCheckoutPaymentIntent(\n                                pack.map((packitem: VariantPackItem) => {\n                                    return {\n                                        sku: packitem.variant.sku,\n                                        quantity: packitem.quantity,\n                                    };\n                                }),\n                            );\n                            window.location.href = response.url || response.redirectUrl;\n                        }}\n                        disabled={defaultStock < 1}\n                    >\n                        {showLoader ? (\n                            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-white\"></div>\n                        ) : (\n                            <>\n                                <span>{_t('payment.vipps.button')}</span>\n                                <svg\n                                    width=\"64\"\n                                    height=\"15\"\n                                    viewBox=\"0 0 64 15\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                >\n                                    <path\n                                        fillRule=\"evenodd\"\n                                        clipRule=\"evenodd\"\n                                        d=\"M64 4.3784C63.2798 1.63069 61.5314 0.540009 59.1448 0.540009C57.2111 0.540009 54.7843 1.63069 54.7843 4.25716C54.7843 5.95402 55.9566 7.28761 57.8694 7.63118L59.6797 7.95418C60.9142 8.1763 61.2639 8.64111 61.2639 9.26742C61.2639 9.97448 60.5028 10.3785 59.3714 10.3785C57.8904 10.3785 56.9646 9.85324 56.8205 8.37829L54.2082 8.78248C54.6193 11.6309 57.17 12.8029 59.4739 12.8029C61.6547 12.8029 63.9793 11.5501 63.9793 9.02495C63.9793 7.30752 62.9299 6.05534 60.9756 5.6912L58.9805 5.32793C57.8694 5.12594 57.4994 4.58038 57.4994 4.05518C57.4994 3.38838 58.2192 2.9645 59.2067 2.9645C60.4617 2.9645 61.3461 3.38838 61.3873 4.78237L64 4.3784ZM5.925 8.70128L8.6399 0.842871H11.8283L7.09686 12.4994H4.73146L0 0.84309H3.18843L5.925 8.70128ZM22.6083 4.17642C22.6083 5.1056 21.8678 5.75204 21.0036 5.75204C20.1397 5.75204 19.3993 5.1056 19.3993 4.17642C19.3993 3.24702 20.1397 2.60079 21.0036 2.60079C21.8678 2.60079 22.6086 3.24702 22.6086 4.17642H22.6083ZM23.1021 8.29777C22.0321 9.67114 20.9008 10.6206 18.9053 10.6207C16.8693 10.6207 15.285 9.40858 14.0507 7.63097C13.5569 6.90356 12.7958 6.74206 12.2402 7.1259C11.726 7.48961 11.6029 8.25728 12.0757 8.92408C13.783 11.4897 16.1487 12.9844 18.9051 12.9844C21.4357 12.9844 23.4107 11.7725 24.9533 9.75216C25.5291 9.00483 25.5086 8.23715 24.9533 7.81283C24.4388 7.40842 23.6777 7.55044 23.1021 8.29777ZM30.2 6.64094C30.2 9.02494 31.5989 10.2776 33.1625 10.2776C34.6434 10.2776 36.1659 9.10569 36.1659 6.64094C36.1659 4.21645 34.6434 3.04502 33.1828 3.04502C31.5989 3.04502 30.2 4.15605 30.2 6.64094ZM30.2 2.45941V0.862998H27.2996V16.54H30.2V10.964C31.1669 12.2571 32.4217 12.8029 33.8409 12.8029C36.4951 12.8029 39.0868 10.7421 39.0868 6.49978C39.0868 2.43884 36.392 0.540215 34.0879 0.540215C32.257 0.540215 31.0025 1.36829 30.2 2.45941ZM44.1276 6.64094C44.1276 9.02494 45.5262 10.2776 47.0898 10.2776C48.5708 10.2776 50.093 9.10569 50.093 6.64094C50.093 4.21645 48.5708 3.04502 47.1102 3.04502C45.5262 3.04502 44.1273 4.15605 44.1273 6.64094H44.1276ZM44.1276 2.45941V0.862998H44.1273H41.227V16.54H44.1273V10.964C45.0943 12.2571 46.349 12.8029 47.7683 12.8029C50.4222 12.8029 53.0142 10.7421 53.0142 6.49978C53.0142 2.43884 50.3194 0.540215 48.0152 0.540215C46.1843 0.540215 44.9298 1.36829 44.1276 2.45941Z\"\n                                        fill=\"white\"\n                                    />\n                                </svg>\n                            </>\n                        )}\n                    </button>\n                </>\n            )}\n        </div>\n    );\n};\n", "import { getJson, postJson } from '@crystallize/reactjs-hooks';\nimport { Customer } from '../contracts/Customer';\nimport { LocalCart } from '../contracts/LocalCart';\nimport { sendPaidOrderWithCrystalCard, sendPaidOrderWithCrystalCoin } from './payments/crystal';\n\nexport function placeCart(\n    serviceApiUrl: string,\n    language: string,\n    cart: LocalCart,\n    customer: Partial<Customer>,\n    options?: { pickupPoint: any },\n) {\n    return postJson<any>(serviceApiUrl + '/cart/place', {\n        cartId: cart.cartId,\n        locale: language,\n        items: Object.values(cart.items),\n        customer,\n        options,\n        extra: cart.extra,\n    });\n}\n\nexport type ServiceAPIContext = {\n    locale?: string;\n    language: string;\n    serviceApiUrl: string;\n};\n\nexport const ServiceAPI = ({ locale, language, serviceApiUrl }: ServiceAPIContext) => {\n    return {\n        stripe: {\n            fetchPaymentIntent: (cart: LocalCart) =>\n                postJson<any>(serviceApiUrl + '/payment/stripe/create', {\n                    cartId: cart.cartId,\n                }),\n        },\n        vipps: {\n            fetchPaymentIntent: (cart: LocalCart, method: string, flow: string) =>\n                postJson<any>(serviceApiUrl + '/payment/vipps/create?method=' + method + '&flow=' + flow, {\n                    cartId: cart.cartId,\n                }),\n            initiateExpressCheckoutPaymentIntent: (items: { sku: string; quantity: number }[]) =>\n                postJson<any>(serviceApiUrl + '/payment/vipps/buynow', {\n                    locale: language,\n                    items,\n                }),\n        },\n        quickpay: {\n            fetchPaymentLink: (cart: LocalCart) =>\n                postJson<any>(serviceApiUrl + '/payment/quickpay/create', {\n                    cartId: cart.cartId,\n                }),\n        },\n        montonio: {\n            fetchPaymentLink: (cart: LocalCart, method: string) =>\n                postJson<any>(serviceApiUrl + '/payment/montonio/create?method=' + method, { cartId: cart.cartId }),\n            fetchPickupPoints: () => getJson<any>(serviceApiUrl + '/shipping/montonio/pickup-points'),\n            fetchBanks: () => getJson<any>(serviceApiUrl + '/payment/montonio/payment-methods'),\n        },\n        klarna: {\n            initiatePayment: (cart: LocalCart) =>\n                postJson<any>(serviceApiUrl + '/payment/klarna/create', {\n                    cartId: cart.cartId,\n                }),\n        },\n        razorpay: {\n            initiatePayment: (cart: LocalCart) =>\n                postJson<any>(serviceApiUrl + '/payment/razorpay/create', {\n                    cartId: cart.cartId,\n                }),\n            receivePayment: (baseUrl: string, payload: any) =>\n                postJson<any>(baseUrl + '/api/webhook/payment/razorpay/verify', payload),\n        },\n        adyen: {\n            initiatePayment: (cart: LocalCart) =>\n                postJson<any>(serviceApiUrl + '/payment/adyen/create', {\n                    cartId: cart.cartId,\n                }),\n            receivePayment: (baseUrl: string, payload: any) =>\n                postJson<any>(baseUrl + '/api/webhook/payment/adyen', payload),\n        },\n        fetchOrders: () => getJson<any>(serviceApiUrl + '/orders'),\n        fetchOrder: (orderId: string, cartId?: string) =>\n            getJson<any>(serviceApiUrl + '/orders/' + orderId + (cartId ? '?cartId=' + cartId : '')),\n        placeCart: (cart: LocalCart, customer: Partial<Customer>, options?: { pickupPoint: any }) =>\n            placeCart(serviceApiUrl, language, cart, customer, options),\n        registerAndSendMagickLink: (userInfos: any) => postJson<any>(serviceApiUrl + '/magicklink/register', userInfos),\n        sendMagickLink: (email: string, callbackPath: string) =>\n            postJson<any>(serviceApiUrl + '/magicklink/register?callbackPath=' + callbackPath, {\n                email,\n                firstname: '',\n                lastname: '',\n            }),\n        fetchCart: (cartId: string) => getJson<any>(serviceApiUrl + '/cart/' + cartId),\n        fetchRemoteCart: (cart: LocalCart) =>\n            postJson<any>(serviceApiUrl + '/cart', {\n                locale: language,\n                items: Object.values(cart.items),\n                cartId: cart.cartId,\n                withImages: true,\n                extra: cart.extra,\n            }),\n        // THIS SHOULD BE REMOVED IN A REAL PROJECT\n        sendPaidOrderWithCrystalCoin: (cart: LocalCart, customer: Partial<Customer>) =>\n            sendPaidOrderWithCrystalCoin(serviceApiUrl, language, cart, customer),\n        // THIS SHOULD BE REMOVED IN A REAL PROJECT\n        sendPaidOrderWithCrystalCard: (cart: LocalCart, customer: Partial<Customer>, card: any) =>\n            sendPaidOrderWithCrystalCard(serviceApiUrl, language, cart, customer, card),\n    };\n};\n", "import { postJson } from '@crystallize/reactjs-hooks';\nimport { Customer } from '../../contracts/Customer';\nimport { LocalCart } from '../../contracts/LocalCart';\nimport { placeCart } from '..';\n\n// /!\\ in real life that would not be that simple and the paid acknowledgement would be a separate service and/or call by the payment provider\n// THIS SHOULD BE REMOVED IN A REAL PROJECT\nexport async function sendPaidOrderWithCrystalCoin(\n    serviceApiUrl: string,\n    language: string,\n    cart: LocalCart,\n    customer: Partial<Customer>,\n) {\n    const cartWrapper = await placeCart(serviceApiUrl, language, cart, customer);\n    return await postJson<any>(serviceApiUrl + '/payment/crystal/coin/confirmed', {\n        cartId: cartWrapper.cartId,\n    });\n}\n\n// /!\\ in real life that would not be that simple and the paid acknowledgement would be a separate service and/or call by the payment provider\n// THIS SHOULD BE REMOVED IN A REAL PROJECT\nexport async function sendPaidOrderWithCrystalCard(\n    serviceApiUrl: string,\n    language: string,\n    cart: LocalCart,\n    customer: Partial<Customer>,\n    card: any,\n) {\n    const cartWrapper = await placeCart(serviceApiUrl, language, cart, customer);\n    return await postJson<any>(serviceApiUrl + '/payment/crystal/card/confirmed', {\n        cartId: cartWrapper.cartId,\n        card,\n    });\n}\n", "import { Image } from '@crystallize/reactjs-components';\nimport { Image as ImageType } from '../../use-cases/contracts/Image';\n\nexport const ImageGallery: React.FC<{ images: ImageType[] }> = ({ images }) => {\n    const galleryHasOddNubmer = images?.length % 2 || false;\n    if (!images || images.length === 0) {\n        return null;\n    }\n    return (\n        <div className=\"frntr-img-gallery \">\n            {images.map((img, i) => {\n                if (img.variants.length === 0) return null;\n                const isPortraitImg = img.variants[0].height > img.variants[0].width;\n                return (\n                    <div key={i} className={`${isPortraitImg ? 'portrait' : 'landscape'} frntr-img`}>\n                        <Image\n                            {...img}\n                            sizes={`${i < 1 || (i === images?.length && !galleryHasOddNubmer) ? '50vw' : '33vw'}`}\n                            loading=\"lazy\"\n                            key={img.url}\n                        />\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n", "'use client';\n\nimport { Image } from '@crystallize/reactjs-components';\nimport Link from '~/bridge/ui/Link';\nimport { useAppContext } from '../../app-context/provider';\nimport displayPriceFor from '~/use-cases/checkout/pricing';\nimport { Price } from '../price';\nimport { ProductSlim } from '~/use-cases/contracts/Product';\nimport { DataMapper } from '~/use-cases/mapper';\n\nexport const Product: React.FC<{ item: ProductSlim }> = ({ item }) => {\n    const { state, path } = useAppContext();\n    const { percent: discountPercentage } = displayPriceFor(\n        item.variant,\n        {\n            default: 'default',\n            discounted: 'sales',\n        },\n        state.currency.code,\n    );\n    const attributesKeys = Object.keys(item.variant.attributes ?? {});\n    return (\n        <Link\n            to={path(item.path)}\n            data-testid=\"product-link\"\n            prefetch=\"intent\"\n            className=\"grid grid-rows-[1fr_minmax(25px_50px)_40px] place-items-stretch w-full min-h-full justify-stretch items-stretch relative product-link\"\n        >\n            {discountPercentage > 0 && (\n                <div className=\"absolute top-3 right-2 bg-green2 items-center flex z-[20] justify-center rounded-full w-[45px] h-[45px] text-[#fff] text-sm\">\n                    -{discountPercentage}%\n                </div>\n            )}\n            <div className=\"img-container img-contain img-border border-solid border border-[#dfdfdf] aspect-[3/4] bg-[#fff] rounded-md h-full overflow-hidden grow-1\">\n                <Image\n                    {...item.variant.images[0]}\n                    sizes=\"300px\"\n                    loading=\"lazy\"\n                    fallbackAlt={item.name}\n                    key={item.name}\n                />\n            </div>\n            <div className=\"pl-1\">\n                <p className=\"text-md line-clamp-2 overflow-hidden\">{item.name}</p>\n            </div>\n            {attributesKeys.length > 0 && (\n                <div className=\"flex gap-3 my-2\">\n                    {attributesKeys.map((key) => (\n                        <div className=\"text-xs bg-grey py-1 px-3 rounded\" key={key}>\n                            {item.variant.attributes[key]}\n                        </div>\n                    ))}\n                </div>\n            )}\n\n            <div className=\"pl-1\">\n                <Price variant={item.variant} size=\"small\" />\n            </div>\n        </Link>\n    );\n};\n\nexport const ProductFromCell: React.FC<{ item: any }> = ({ item }) => {\n    const mapper = DataMapper();\n    const productVariant = mapper.API.Object.APIProductVariantToProductVariant(item.defaultVariant);\n    return (\n        <Product\n            item={{\n                id: item.id,\n                name: item.name,\n                path: item.path,\n                variant: productVariant,\n                topics: [],\n            }}\n        />\n    );\n};\n", "import Arrow from '~/assets/arrow.svg';\nimport { useAppContext } from '../../app-context/provider';\nimport { Dimensions } from '~/use-cases/contracts/Dimensions';\n\nexport const DimensionsTable: React.FC<{ dimensions: Dimensions }> = ({ dimensions }) => {\n    const { _t } = useAppContext();\n    if (Object.keys(dimensions).length === 0) {\n        return null;\n    }\n    return (\n        <details className=\"border-t border-[#dfdfdf] hover:bg-[#fefefe] frntr-accordination\" open>\n            <summary className=\"font-bold text-2xl py-10 flex items-center justify-between w-full\">\n                <span>{_t('dimensions')}</span>\n                <img src={`${Arrow}`} alt=\"Arrow\" className=\"frntr-accordination-arrow w-[20px] h-[20px] mr-4\" />\n            </summary>\n\n            <div className=\"rounded-md h-auto -mt-4 mb-10\">\n                <div>\n                    {Object.keys(dimensions).map((key, index) => {\n                        const dimension = dimensions[key];\n                        return (\n                            <div key={`${index}-${key}`} className=\"flex justify-between py-4 px-2 odd:bg-[#efefef]\">\n                                <p className=\"font-semibold text-md\">{dimension.title}</p>\n                                <p className=\"text-md\">\n                                    {dimension.value}\n                                    {dimension.unit}\n                                </p>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </details>\n    );\n};\n", "import { Video } from '@crystallize/reactjs-components';\nimport { ContentTransformer } from '@crystallize/reactjs-components';\nimport { Paragraph } from '~/use-cases/contracts/Paragraph';\nimport { ImageGallery } from '../image-gallery';\n\nexport const ParagraphCollection: React.FC<{ paragraphs: Paragraph[] }> = ({ paragraphs }) => {\n    if (paragraphs.length === 0) {\n        return null;\n    }\n\n    return (\n        <>\n            {paragraphs.map((paragraph, index) => (\n                <div key={index}>\n                    <div className=\"mt-10 md:mt-10 lg:mx-10 mb-20 pt-5 max-w-[800px] frntr-paragraph mx-2 w-auto\">\n                        <div className=\"my-10 mx-auto\">\n                            <h2 className=\"font-bold mt-10 text-3xl\">{paragraph.title}</h2>\n                            <div className=\"frntr-content-transformer\">\n                                <ContentTransformer json={paragraph.body.json} />\n                            </div>\n                        </div>\n                    </div>\n                    <ImageGallery images={paragraph?.images} />\n                    {paragraph.videos && paragraph.videos.length > 0 && (\n                        <div className=\"w-full img-container img-contain md:py-0\">\n                            <Video\n                                {...paragraph?.videos?.[0]}\n                                thumbnailProps={{ sizes: '(max-width: 700px) 90vw, 700px' }}\n                            />\n                        </div>\n                    )}\n                </div>\n            ))}\n        </>\n    );\n};\n", "import Arrow from '~/assets/arrow.svg';\nimport { CrystallizePropertiesTable } from '~/use-cases/contracts/PropertiesTable';\n\nexport const PropertiesTable: React.FC<{ table: CrystallizePropertiesTable }> = ({ table }) => {\n    return (\n        <details className=\"border-t border-[#dfdfdf] mt-20 hover:bg-[#fefefe] frntr-accordination\" open>\n            <summary className=\"font-bold text-2xl py-10 flex items-center justify-between w-full\">\n                <span>{table?.title}</span>\n                <img src={`${Arrow}`} alt=\"Arrow\" className=\"frntr-accordination-arrow w-[20px] h-[20px] mr-4\" />\n            </summary>\n            {table.properties && (\n                <div className=\"rounded-md h-auto -mt-4 mb-10\">\n                    <div>\n                        {Object.keys(table.properties).map((key) => (\n                            <div className=\"flex justify-between py-4 px-2 odd:bg-[#efefef]\" key={key}>\n                                <p className=\"font-semibold text-md\">{key}</p>\n                                <p className=\"text-md\">{table.properties[key]}</p>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </details>\n    );\n};\n", "import FileDownloadIcon from '~/assets/documentDownloadIcon.svg';\nimport { ContentTransformer } from '@crystallize/reactjs-components';\nimport Arrow from '~/assets/arrow.svg';\nimport { useAppContext } from '../../app-context/provider';\nimport { FileDownload } from '~/use-cases/contracts/FileDownload';\n\nexport const Files: React.FC<{ files: FileDownload[] }> = ({ files }) => {\n    const { _t } = useAppContext();\n    return (\n        <details className=\"border-t border-[#dfdfdf] hover:bg-[#fefefe] frntr-accordination min-h-fit\" open>\n            <summary className=\"font-bold text-2xl py-10 flex items-center justify-between w-full\">\n                <span>{_t('specifications')}</span>\n                <img src={`${Arrow}`} alt=\"Arrow\" className=\"frntr-accordination-arrow w-[20px] h-[20px] mr-4\" />\n            </summary>\n\n            {files.length > 0 && (\n                <div className=\"grid gap-5 grid-col-1 sm:grid-cols-2  lg:grid-cols-2 xl:grid-cols-3 h-auto -mt-4 mb-10\">\n                    {files.map((file, index) => {\n                        return (\n                            <div\n                                key={index}\n                                className=\"bg-[#efefef] p-6 min-h-[300px] flex h-full flex-col justify-between w-full rounded-md\"\n                            >\n                                <div className=\"mt-2 gap-2 mb-4\">\n                                    <img\n                                        className=\"w-[25px] h-[25px] mb-2\"\n                                        src={`${FileDownloadIcon}`}\n                                        width=\"40\"\n                                        height=\"40\"\n                                        alt=\"User icon\"\n                                    />\n                                    <p className=\"font-semibold text-md\">{file.title}</p>\n                                    <div className=\"text-sm text-elipsis\">\n                                        <ContentTransformer json={file.description?.json} />\n                                    </div>\n                                </div>\n\n                                {files.length > 0 && (\n                                    <div className=\"flex text-sm flex-col\">\n                                        {file.files.map((file) => (\n                                            <a className=\"mt-1 underline truncate\" href={file.url} key={file.url}>\n                                                \u279E {file.title}\n                                            </a>\n                                        ))}\n                                    </div>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n            )}\n        </details>\n    );\n};\n", "import { DimensionsTable } from './dimensions-table';\nimport { ParagraphCollection } from '../crystallize-components/paragraph-collection';\nimport { PropertiesTable } from '../crystallize-components/properties-table';\nimport { Files } from '../../components/product/files';\nimport { Paragraph } from '../../../use-cases/contracts/Paragraph';\nimport { CrystallizePropertiesTable } from '../../../use-cases/contracts/PropertiesTable';\nimport { FileDownload } from '../../../use-cases/contracts/FileDownload';\nimport { Dimensions } from '../../../use-cases/contracts/Dimensions';\n\nexport const ProductBody: React.FC<{\n    story?: Paragraph[];\n    dimensions?: Dimensions;\n    propertiesTable?: CrystallizePropertiesTable[];\n    downloads?: FileDownload[];\n}> = ({ story, dimensions, propertiesTable, downloads }) => {\n    return (\n        <>\n            {story && <ParagraphCollection paragraphs={story} />}\n            <div className=\"mt-20\">\n                {propertiesTable &&\n                    propertiesTable.map((table: CrystallizePropertiesTable, index: number) => (\n                        <PropertiesTable table={table} key={index} />\n                    ))}\n                {dimensions && <DimensionsTable dimensions={dimensions} />}\n                {downloads && downloads.length > 0 && <Files files={downloads!} />}\n            </div>\n        </>\n    );\n};\n", "import StockIcon from '~/assets/stockIcon.svg';\nimport { useState } from 'react';\nimport { useAppContext } from '../../app-context/provider';\nimport { StockLocation } from '../../../use-cases/contracts/StockLocation';\n\nconst StockIndicators: React.FC<{ location: StockLocation }> = ({ location }) => {\n    const { _t } = useAppContext();\n    const stock = location.stock || 0;\n    if (stock < 1) {\n        return (\n            <>\n                <div className=\"flex items-center gap-2\">\n                    <img className=\"w-[18px] h-[18px]\" src={`${StockIcon}`} width=\"20\" height=\"20\" alt=\"User icon\" />\n                    <p className=\"font-semibold\">{location.name}</p>\n                    <div className=\"w-2.5 h-2.5 rounded-full bg-[#F42C04]\" />\n                </div>\n                <p className=\"font-medium text-black\">{_t('stock.outOfStock')}</p>\n            </>\n        );\n    }\n    if (stock > 0 && stock < 21) {\n        return (\n            <>\n                <div className=\"flex items-center gap-2\">\n                    <img className=\"w-[18px] h-[18px]\" src={`${StockIcon}`} width=\"20\" height=\"20\" alt=\"User icon\" />\n                    <p className=\"font-semibold\">{location.name}</p>\n                    <div className=\"w-2.5 h-2.5 rounded-full bg-[#FFC60A]\" />\n                </div>\n                <p className=\"font-medium text-black\">{_t('stock.lowStock')}</p>\n            </>\n        );\n    }\n    return (\n        <>\n            <div className=\"flex items-center gap-2\">\n                <img className=\"w-[18px] h-[18px]\" src={`${StockIcon}`} width=\"20\" height=\"20\" alt=\"User icon\" />\n                <p className=\"font-semibold\">{location.name}</p>\n                <div className=\"w-2.5 h-2.5 rounded-full bg-green2\" />\n            </div>\n            <p className=\"font-medium text-green2 text-right\">{_t('stock.inStock')}</p>\n        </>\n    );\n};\n\nexport const StockLocations: React.FC<{ locations: StockLocation[] }> = ({ locations }) => {\n    const [locationCountToShow, setLocationCountToShow] = useState(1);\n    const { _t } = useAppContext();\n    if (locations.length === 0) return null;\n    return (\n        <div>\n            {locations.slice(0, locationCountToShow).map((location) => (\n                <div key={location.identifier} className=\"flex pt-2 items-center gap-2 justify-between\">\n                    <StockIndicators location={location} />\n                </div>\n            ))}\n            {locations.length > 1 && (\n                <button\n                    onClick={() =>\n                        locationCountToShow == locations.length\n                            ? setLocationCountToShow(1)\n                            : setLocationCountToShow(locations.length)\n                    }\n                    className=\"text-[#000] font-regular text-xs ml-7 mt-1 opacity-[0.6] hover:opacity-[1] underline\"\n                >\n                    {locationCountToShow == locations.length\n                        ? _t('stock.showLessAvailability')\n                        : _t('stock.showMoreAvailability', { count: locations.length - 1 })}\n                </button>\n            )}\n        </div>\n    );\n};\n", "import Link from '~/bridge/ui/Link';\nimport { useAppContext } from '../../app-context/provider';\nimport { Topic } from '../../../use-cases/contracts/Topic';\n\nexport const TopicLabels: React.FC<{ topics: Topic[] }> = ({ topics }) => {\n    const { path } = useAppContext();\n    return (\n        <div className=\"flex flex-wrap gap-2\">\n            {topics.map((topic) => (\n                <Link to={path(topic.path)} key={topic.name}>\n                    <div className=\"rounded-md bg-[#efefef] border border-[transparent] hover:border-[#000] px-3 py-1\">\n                        <p className=\"text-xs font-bold\">{topic.name}</p>\n                    </div>\n                </Link>\n            ))}\n        </div>\n    );\n};\n", "import { Image } from '@crystallize/reactjs-components';\nimport { ProductVariant } from '~/use-cases/contracts/ProductVariant';\n\nfunction reduceAttributes(variants: ProductVariant[]) {\n    return variants.reduce((acc: Record<string, string[]>, variant: ProductVariant) => {\n        Object.keys(variant.attributes).forEach((key) => {\n            const value = variant.attributes[key];\n            if (!acc[key]) {\n                acc[key] = [];\n            }\n            if (!acc[key].includes(value)) {\n                acc[key].push(value);\n            }\n        });\n        return acc;\n    }, {});\n}\n\nfunction findMostSuitableVariant(variants: ProductVariant[], attributes: Record<string, string>) {\n    return variants.find((variant) => {\n        return Object.keys(attributes).every((key) => {\n            return variant.attributes[key] === attributes[key];\n        });\n    });\n}\n\nexport const VariantSelector: React.FC<{\n    variants: ProductVariant[];\n    selectedVariant: ProductVariant;\n    onVariantChange: Function;\n    renderingType: string;\n}> = ({ variants, selectedVariant, onVariantChange, renderingType = 'default' }) => {\n    const attributes = reduceAttributes(variants);\n\n    function onAttributeSelect(key: string, value: string) {\n        let variant = findMostSuitableVariant(variants, {\n            ...selectedVariant.attributes,\n            [key]: value,\n        });\n\n        if (!variant) {\n            variant = variants.find((variant) =>\n                Object.keys(variant.attributes).some((vkey) => vkey === key && variant.attributes[vkey] === value),\n            );\n        }\n\n        if (!variant) {\n            variant = variants.find((variant) => Object.keys(variant.attributes).some((vkey) => vkey === key));\n        }\n        onVariantChange(variant);\n    }\n\n    const renderingTypes = {\n        default: (\n            <div>\n                {Object.keys(attributes).map((key) => {\n                    const values = attributes[key];\n                    return (\n                        <div key={key} className=\"border-[#dfdfdf]\">\n                            <p className=\"mt-2 text-sm  font-semibold\">{key}</p>\n                            <div className=\"flex mb-5 flex-nowrap md:flex-wrap gap-2 overflow-x-scroll py-2 px-1\">\n                                {values.map((value) => {\n                                    const mostSuitableVariant = findMostSuitableVariant(variants, {\n                                        ...selectedVariant.attributes,\n                                        [key]: value,\n                                    });\n                                    return (\n                                        <button\n                                            key={value}\n                                            onClick={(e) => onAttributeSelect(key, value)}\n                                            type=\"button\"\n                                            className=\"w-2/6 md:w-1/6 md:py-2 py-4 rounded-lg text-text flex flex-col items-center text-xs font-medium overflow-hidden variant-option\"\n                                            style={{\n                                                opacity: !mostSuitableVariant ? 0.2 : 1,\n                                                border:\n                                                    value === selectedVariant.attributes[key]\n                                                        ? '1px solid #000'\n                                                        : '1px solid #efefef',\n                                            }}\n                                        >\n                                            <div className=\"img-container p-3 w-[80px] img-contain\">\n                                                {mostSuitableVariant?.images?.[0] && (\n                                                    <Image\n                                                        {...mostSuitableVariant.images[0]}\n                                                        sizes=\"100px\"\n                                                        fallbackAlt={mostSuitableVariant.name}\n                                                        key={mostSuitableVariant.sku}\n                                                    />\n                                                )}\n                                            </div>\n                                            {value}\n                                        </button>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        ),\n        dropdown: (\n            <>\n                {Object.keys(attributes).map((key) => {\n                    const values = attributes[key];\n                    return (\n                        <label key={key} className=\"block\">\n                            <select\n                                onChange={(e) => onAttributeSelect(key, e.target.value)}\n                                className=\"py-2 min-w-full w-full px-4 bg-[#efefef] grow-0  text-sm rounded-md min-w-[150px] \"\n                            >\n                                <optgroup label={key}>\n                                    {values.map((value: any) => {\n                                        const mostSuitableVariant = findMostSuitableVariant(variants, {\n                                            ...selectedVariant.attributes,\n                                            [key]: value,\n                                        });\n                                        return (\n                                            <option key={value} disabled={!mostSuitableVariant} value={value}>\n                                                {value}\n                                            </option>\n                                        );\n                                    })}\n                                </optgroup>\n                            </select>\n                        </label>\n                    );\n                })}\n            </>\n        ),\n    };\n\n    return renderingTypes[renderingType as keyof typeof renderingTypes] || null;\n};\n", "import { Product } from './contracts/Product';\n\nexport const buildSchemaMarkup = (product: Product) => {\n    return {\n        '@context': 'https://schema.org/',\n        '@type': 'Product',\n        name: product.seo.title,\n        image: product.seo.image,\n        description: product.seo.description,\n        sku: product.defaultVariant.sku,\n    };\n};\n\nexport const buildSchemaMarkupForBlogPost = (data: any, url?: any) => {\n    const title = data.seo.title;\n    const description = data.seo.description;\n    const altDescription = data.seo.description;\n\n    return {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        mainEntityOfPage: {\n            '@type': 'WebPage',\n            '@id': '',\n        },\n        headline: title || data.name,\n        datePublished: data.createdAt,\n        dateModified: new Date(data.updatedAt),\n        description: description || altDescription,\n    };\n};\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport vippsPipelineChanges from '~/use-cases/payments/vipps/vippsPipelineChanges';\nimport { getStoreFront } from '~/use-cases/storefront.server';\n\n//If you're using Vipps and want to use the webhook to change the order pipeline stage, you will need to add the following query to the webhook settings in the app.\n\n// query GET_ORDER_IN_PIPELINE_DETAILS($orderId: ID!) {\n//   order {\n//     get(id: $orderId) {\n//       id\n//       payment {\n//         ...on CustomPayment {\n//           provider\n//           properties {\n//             property\n//             value\n//           }\n//         }\n//       }\n//       pipelines {\n//         pipeline {\n//           id\n//           name\n//         }\n//         stageId\n//       }\n//     }\n//   }\n// }\n\nexport const action: ActionFunction = async ({ request }) => {\n    if (request.method !== 'POST') {\n        return json({ message: 'Method not allowed' }, 405);\n    }\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const payload = await request.json();\n\n    const vippsPipelines = await vippsPipelineChanges(payload.order, storefront.config);\n\n    return json({\n        message: 'Order Pipleline Stage Change Webhook received',\n        payload: await request.json(),\n    });\n};\n", "import { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    VippsAppCredentials,\n    cancelVippsPayment,\n    captureVippsPayment,\n    refundVippsPayment,\n} from '@crystallize/node-service-api-request-handlers';\n\nexport default async (order: any, storeFrontConfig: TStoreFrontConfig) => {\n    order = order.get;\n    const vippsReference = order.payment?.[0]?.properties?.find(\n        (property: any) => property.property === 'VippsReference',\n    )?.value;\n\n    const credentials: VippsAppCredentials = {\n        origin: process.env.VIPPS_ORIGIN ?? storeFrontConfig?.configuration?.VIPPS_ORIGIN ?? '',\n        clientId: process.env.VIPPS_CLIENT_ID ?? storeFrontConfig?.configuration?.VIPPS_CLIENT_ID ?? '',\n        clientSecret: process.env.VIPPS_CLIENT_SECRET ?? storeFrontConfig?.configuration?.VIPPS_CLIENT_SECRET ?? '',\n        merchantSerialNumber: process.env.VIPPS_MSN ?? storeFrontConfig?.configuration?.VIPPS_MSN ?? '',\n        subscriptionKey:\n            process.env.VIPPS_SUBSCRIPTION_KEY ?? storeFrontConfig?.configuration?.VIPPS_SUBSCRIPTION_KEY ?? '',\n    };\n\n    const vippsPipelineStageId = order.pipelines.find(\n        (pipeline: any) => pipeline.pipeline.id === process.env.VIPPS_PIPELINE_ID,\n    )?.stageId;\n\n    const createBody = (state: string) => {\n        return {\n            merchantInfo: {\n                merchantSerialNumber: process.env.VIPPS_MSN ?? storeFrontConfig?.configuration?.VIPPS_MSN ?? '',\n            },\n            transaction: {\n                transactionText: `Order ${state}`,\n            },\n        };\n    };\n\n    try {\n        switch (vippsPipelineStageId) {\n            case `${process.env.VIPPS_CAPTURED_STAGE_ID}`:\n                await captureVippsPayment(vippsReference, credentials, createBody('captured'));\n                break;\n            case `${process.env.VIPPS_CANCELLED_STAGE_ID}`:\n                await cancelVippsPayment(vippsReference, credentials, createBody('cancelled'));\n                break;\n            case `${process.env.VIPPS_REFUNDED_STAGE_ID}`:\n                await refundVippsPayment(vippsReference, credentials, createBody('refunded'));\n                break;\n            default:\n                break;\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n", "import { LoaderFunction, Response } from '@remix-run/node';\nimport ReactPDF from '@react-pdf/renderer';\nimport { StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { getContext } from '~/use-cases/http/utils';\nimport { Folder } from '~/ui/components/pdf/folder';\nimport dataFetcherForShapePage from '~/use-cases/dataFetcherForShapePage.server';\nimport { ProductSlim } from '~/use-cases/contracts/Product';\nimport { Category } from '~/use-cases/contracts/Category';\nimport { authenticatedUser } from '~/core/authentication.server';\nimport { marketIdentifiersForUser } from '~/use-cases/marketIdentifiersForUser';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const path = `/shop/${params.folder}`;\n    const { shared } = await getStoreFront(requestContext.host);\n    const user = await authenticatedUser(request);\n\n    const data = (await dataFetcherForShapePage(\n        'category',\n        path,\n        requestContext,\n        params,\n        marketIdentifiersForUser(user),\n    )) as {\n        products: ProductSlim[];\n        category: Category;\n    };\n    const { products, category } = data;\n    const pdf = await ReactPDF.renderToStream(<Folder category={category} products={products} />);\n    return new Response(pdf, {\n        headers: {\n            ...StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier).headers,\n            'Content-Type': 'application/pdf',\n        },\n    });\n};\n", "import { Document, Page, Text, Image, View } from '@react-pdf/renderer';\nimport { styles } from './styles';\nimport displayPriceFor from '~/use-cases/checkout/pricing';\nimport { Price } from './shared';\nimport { Category } from '~/use-cases/contracts/Category';\nimport { ProductSlim } from '~/use-cases/contracts/Product';\n\nexport const Folder: React.FC<{ category: Category; products: ProductSlim[] }> = ({ category, products }) => {\n    return (\n        <Document>\n            <Page style={{ ...styles.productPage, alignItems: 'center', justifyContent: 'center' }}>\n                <View\n                    style={{\n                        backgroundColor: '#000',\n                        borderRadius: 2,\n                        maxWidth: '50%',\n                        padding: 35,\n                    }}\n                >\n                    <Text style={{ color: '#fff', marginBottom: 15 }}>{category.title}</Text>\n                    <Text style={{ color: '#fff', fontSize: 12, lineHeight: 1.4 }}>{category.description}</Text>\n                </View>\n            </Page>\n            <Page style={{ ...styles.productPage }}>\n                <View\n                    style={{\n                        flexWrap: 'wrap',\n                        paddingVertical: 20,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        backgroundColor: '#fff',\n                        borderWidth: 1,\n                        borderColor: '#dfdfdf',\n                        borderStyle: 'solid',\n                    }}\n                >\n                    {products.map((product, index) => {\n                        if (!product) return null;\n                        const variant = product.variant;\n                        const name = variant.name;\n                        const image = variant.images?.[0]?.url;\n                        const sku = variant.sku;\n                        const defaultPriceCurrency = variant.priceVariants.default.currency;\n\n                        const price = displayPriceFor(\n                            variant,\n                            {\n                                default: 'default',\n                                discounted: 'sales',\n                            },\n                            defaultPriceCurrency.code,\n                        );\n\n                        return (\n                            <View\n                                wrap={false}\n                                key={`${sku}`}\n                                style={{\n                                    width: '100%',\n                                    display: 'flex',\n                                    padding: 10,\n                                    paddingHorizontal: 20,\n\n                                    overflow: 'hidden',\n                                    flexDirection: 'row',\n                                    borderTopWidth: 1,\n                                    borderColor: '#dfdfdf',\n                                    borderStyle: 'solid',\n                                    backgroundColor: `${index % 2 ? '#f7f7f7' : 'transparent'}`,\n                                }}\n                            >\n                                <View\n                                    style={{\n                                        borderRadius: 4,\n                                        minWidth: '102px',\n                                        maxWidth: '102px',\n                                        height: '135px',\n                                        overflow: 'hidden',\n                                        backgroundColor: '#fff',\n                                        borderWidth: 1,\n                                        borderColor: '#dfdfdf',\n                                        borderStyle: 'solid',\n                                    }}\n                                >\n                                    {image && (\n                                        <Image\n                                            src={image}\n                                            style={{\n                                                borderRadius: 4,\n                                                minWidth: '100px',\n                                                maxWidth: '100px',\n                                                height: '125px',\n                                                objectFit: 'contain',\n                                            }}\n                                        />\n                                    )}\n                                </View>\n\n                                <View\n                                    style={{\n                                        marginLeft: 20,\n                                        flexDirection: 'row',\n                                        justifyContent: 'space-between',\n                                        width: '100%',\n                                    }}\n                                >\n                                    <View style={{ width: '70%' }}>\n                                        <Text style={{ marginTop: 5, fontSize: 16, fontWeight: 'bold' }}>{name}</Text>\n                                        <Text style={{ marginTop: 5, fontSize: 10 }}>{sku}</Text>\n                                        <View style={{ flexDirection: 'column', marginTop: 10 }}>\n                                            {Object.keys(variant.attributes).map((key) => (\n                                                <Text key={`${sku}-${key}`} style={{ fontSize: 10, marginTop: 5 }}>\n                                                    {key}: {variant.attributes[key]}\n                                                </Text>\n                                            ))}\n                                        </View>\n                                    </View>\n\n                                    <View style={{ marginTop: 5, width: '30%', textAlign: 'right' }}>\n                                        {price.discounted && price.discounted < price.default ? (\n                                            <View style={{ marginRight: 15 }}>\n                                                <Text style={{ fontSize: 14, fontWeight: 600 }}>\n                                                    <Price currencyCode={price.currency.code}>{price.discounted}</Price>\n                                                </Text>\n                                                <View>\n                                                    <Text style={{ fontSize: 10, textDecoration: 'line-through' }}>\n                                                        <Price currencyCode={price.currency.code}>\n                                                            {price.default}\n                                                        </Price>\n                                                    </Text>\n                                                </View>\n                                            </View>\n                                        ) : (\n                                            <Text style={{ fontSize: 14, fontWeight: 600 }}>\n                                                <Price currencyCode={price.currency.code}>{price.default}</Price>\n                                            </Text>\n                                        )}\n                                    </View>\n                                </View>\n                            </View>\n                        );\n                    })}\n                </View>\n            </Page>\n        </Document>\n    );\n};\n", "import { LoaderFunction, redirect } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { authCookie } from '~/core/cookies.server';\nimport handleVippsLogin from '~/use-cases/user/handleVippsLogin';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const config = require('platformsh-config').config();\n    const frontendURL = config.isValidPlatform()\n        ? config.getRoute('frontapp').url.replace(/\\/$/, '').replace('*', storefront.config.identifier)\n        : requestContext.baseUrl;\n\n    const { redirectUrl, cookie } = await handleVippsLogin(storefront.config, frontendURL, requestContext);\n    return redirect(redirectUrl as string, {\n        headers: {\n            'Set-Cookie': await authCookie.serialize(cookie),\n        },\n    });\n};\n", "import {\n    VippsAppCredentials,\n    handleVippsLoginOAuthRequestPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport { buildLanguageMarketAwareLink } from '../LanguageAndMarket';\nimport { RequestContext } from '../http/utils';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\n\nexport default async (storeFrontConfig: TStoreFrontConfig, frontendUrl: string, context: RequestContext) => {\n    const credentials: VippsAppCredentials = {\n        origin: process.env.VIPPS_ORIGIN ?? storeFrontConfig?.configuration?.VIPPS_ORIGIN ?? '',\n        clientId: process.env.VIPPS_CLIENT_ID ?? storeFrontConfig?.configuration?.VIPPS_CLIENT_ID ?? '',\n        clientSecret: process.env.VIPPS_CLIENT_SECRET ?? storeFrontConfig?.configuration?.VIPPS_CLIENT_SECRET ?? '',\n        merchantSerialNumber: process.env.VIPPS_MSN ?? storeFrontConfig?.configuration?.VIPPS_MSN ?? '',\n        subscriptionKey:\n            process.env.VIPPS_SUBSCRIPTION_KEY ?? storeFrontConfig?.configuration?.VIPPS_SUBSCRIPTION_KEY ?? '',\n    };\n    const code = context.url.searchParams.get('code') ?? '';\n    const backLinkPath =\n        context.callbackPath !== ''\n            ? context.callbackPath\n            : buildLanguageMarketAwareLink('/checkout', context.language, context.market);\n    let cookie = {};\n    const redirectUrl = await handleVippsLoginOAuthRequestPayload(\n        {\n            code,\n            state: context.url.searchParams.get('state') ?? '',\n        },\n        {\n            ...credentials,\n            host: context.host,\n            expectedState: 'crystalGenericState12345',\n            redirectUri: `${frontendUrl}/${context.language}/api/vipps/connect`,\n            jwtSecret: `${process.env.JWT_SECRET}`,\n            backLinkPath: `${frontendUrl}${backLinkPath}?token=:token`,\n            setCookie: (name: string, value: string) => {\n                cookie = {\n                    ...cookie,\n                    [name]: value,\n                };\n            },\n            onUserInfos: async (userInfos) => {\n                console.log('Vipps User infos fetched', userInfos);\n            },\n        },\n    );\n    return {\n        redirectUrl,\n        cookie,\n    };\n};\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport receivePaymentEvent from '~/use-cases/payments/montonio/receivePaymentEvent';\nimport { cartWrapperRepository } from '~/use-cases/services.server';\n\nexport const action: ActionFunction = async ({ request }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const url = new URL(request.url);\n    const token = url.searchParams.get('payment_token') || '';\n    const data = await receivePaymentEvent(cartWrapperRepository, storefront.apiClient, token, storefront.config);\n    return json(data);\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    CartWrapperRepository,\n    handleMontonioPaymentUpdateWebhookRequestPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport pushOrder from '../../crystallize/write/pushOrder';\nimport createShipment from './createShipment';\nimport fetchShipmentLabelUrl from './fetchShipmentLabelUrl';\n\nexport default async (\n    cartWrapperRepository: CartWrapperRepository,\n    apiClient: ClientInterface,\n    token: string,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    return await handleMontonioPaymentUpdateWebhookRequestPayload(\n        {},\n        {\n            secret_key: process.env.MONTONIO_SECRET_KEY ?? storeFrontConfig.configuration?.MONTONIO_SECRET_KEY ?? '',\n            token,\n            handleEvent: async (event: any) => {\n                const cartId = event.merchant_reference;\n                switch (event.status) {\n                    case 'finalized':\n                        const cartWrapper = await cartWrapperRepository.find(cartId);\n                        if (!cartWrapper) {\n                            throw {\n                                message: `Cart '${cartId}' does not exist.`,\n                                status: 404,\n                            };\n                        }\n\n                        // if we have a pickup point we will create a shipment and printing label and add it to the order\n                        const shipment = await createShipment(cartWrapper, storeFrontConfig).catch(console.log);\n                        const shipmentLabelUrl = await fetchShipmentLabelUrl(cartWrapper, storeFrontConfig).catch(\n                            console.log,\n                        );\n\n                        let properties = [\n                            {\n                                property: 'payment_method',\n                                value: 'Montonio',\n                            },\n                            {\n                                property: 'MontonioPaymentUuid',\n                                value: `${event.payment_uuid}`,\n                            },\n                            {\n                                property: 'MontonioPaymentMethod',\n                                value: `${event.payment_method_name}`,\n                            },\n                            {\n                                property: 'MontonioIBAN',\n                                value: `${event.customer_iban}`,\n                            },\n                        ];\n                        const orderCreatedConfirmation = await pushOrder(\n                            cartWrapperRepository,\n                            apiClient,\n                            cartWrapper,\n                            {\n                                //@ts-ignore\n                                provider: 'custom',\n                                custom: {\n                                    properties,\n                                },\n                            },\n                            {\n                                'Shipment UUID': shipment.uuid,\n                                'Shipment Label': shipmentLabelUrl,\n                            },\n                        );\n                        return orderCreatedConfirmation;\n                }\n            },\n        },\n    );\n};\n", "import { CartWrapper } from '@crystallize/node-service-api-request-handlers';\nimport jwt from 'jsonwebtoken';\nimport { PickupPoint } from './types';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\n\nexport default async (cartWrapper: CartWrapper, storeFrontConfig: TStoreFrontConfig) => {\n    const pickupPoint: PickupPoint | undefined = cartWrapper?.extra?.pickupPoint;\n    const payload = {\n        access_key:\n            process.env.MONTONIO_SHIPPING_ACCESS_KEY ??\n            storeFrontConfig?.configuration?.MONTONIO_SHIPPING_ACCESS_KEY ??\n            '',\n    };\n    const token = jwt.sign(\n        payload,\n        process.env.MONTONIO_SHIPPING_SECRET_KEY ?? storeFrontConfig?.configuration?.MONTONIO_SHIPPING_SECRET_KEY ?? '',\n        {\n            algorithm: 'HS256',\n            expiresIn: '1h',\n        },\n    );\n\n    let shipment: any = {\n        merchant_reference: cartWrapper.cartId,\n        sender_name: 'Crystallize Boilerplate Store Front - Montonio Showcase',\n        sender_phone_country: '372',\n        sender_phone_number: '55512345',\n        sender_street_address_1: 'Kai 1, Tallinn',\n        sender_locality: 'Harjumaa',\n        sender_postal_code: '10111',\n        sender_country: 'EE',\n        shipping_first_name: cartWrapper.customer?.firstname || 'Unknown',\n        shipping_last_name: cartWrapper.customer?.lastname || 'Unknown',\n        shipping_phone_country: '372',\n        shipping_phone_number: '55512345',\n        shipping_country: 'EE',\n        currency: cartWrapper.cart.total.currency,\n        total: cartWrapper.cart.total.gross,\n        parcels: [\n            {\n                weight: 1.0,\n            },\n        ],\n    };\n\n    if (pickupPoint) {\n        shipment = {\n            ...shipment,\n            pickup_point_uuid: pickupPoint.uuid,\n            shipping_method: `${pickupPoint?.provider_name}_${pickupPoint?.type}s`,\n        };\n    }\n    const response = await fetch(\n        `https://${\n            process.env.MONTONIO_SHIPPING_ORIGIN ?? storeFrontConfig?.configuration?.MONTONIO_SHIPPING_ORIGIN ?? ''\n        }/shipments`,\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify(shipment),\n        },\n    );\n    return await response.json();\n};\n", "import { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport { CartWrapper } from '@crystallize/node-service-api-request-handlers';\nimport jwt from 'jsonwebtoken';\n\nexport default async (cartWrapper: CartWrapper, storeFrontConfig: TStoreFrontConfig) => {\n    const payload = {\n        access_key: `${\n            process.env.MONTONIO_SHIPPING_ACCESS_KEY ?? storeFrontConfig?.configuration?.MONTONIO_SHIPPING_ACCESS_KEY\n        }`,\n    };\n    const token = jwt.sign(\n        payload,\n        `${process.env.MONTONIO_SHIPPING_SECRET_KEY ?? storeFrontConfig?.configuration?.MONTONIO_SHIPPING_SECRET_KEY}`,\n        {\n            algorithm: 'HS256',\n            expiresIn: '1h',\n        },\n    );\n\n    const response = await fetch(\n        `https://${\n            process.env.MONTONIO_SHIPPING_ORIGIN ?? storeFrontConfig?.configuration?.MONTONIO_SHIPPING_ORIGIN\n        }/shipments/label-from-store`,\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n                merchant_references: [cartWrapper.cartId],\n            }),\n        },\n    );\n    const data = await response.json();\n    return data.url;\n};\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport receivePaymentEvent from '~/use-cases/payments/quickpay/receivePaymentEvent';\nimport { cartWrapperRepository } from '~/use-cases/services.server';\n\nexport const action: ActionFunction = async ({ request }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const body = await request.json();\n    const data = await receivePaymentEvent(\n        cartWrapperRepository,\n        storefront.apiClient,\n        request.headers.get('Quickpay-Checksum-Sha256') as string,\n        body,\n        storefront.config,\n    );\n    return json(data);\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    CartWrapperRepository,\n    handleQuickPayPaymentUpdateWebhookRequestPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport pushOrder from '../../crystallize/write/pushOrder';\n\nexport default async (\n    cartWrapperRepository: CartWrapperRepository,\n    apiClient: ClientInterface,\n    signature: string,\n    payload: any,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    return await handleQuickPayPaymentUpdateWebhookRequestPayload(payload, {\n        private_key: process.env.QUICKPAY_PRIVATE_KEY ?? storeFrontConfig.configuration?.QUICKPAY_PRIVATE_KEY ?? '',\n        signature,\n        rawBody: payload,\n        handleEvent: async (event: any) => {\n            const cartId = event.variables.cartId;\n            switch (event.type?.toLowerCase()) {\n                case 'payment':\n                    const cartWrapper = await cartWrapperRepository.find(cartId);\n                    if (!cartWrapper) {\n                        throw {\n                            message: `Cart '${cartId}' does not exist.`,\n                            status: 404,\n                        };\n                    }\n                    let properties = [\n                        {\n                            property: 'payment_method',\n                            value: 'QuickPay',\n                        },\n                        {\n                            property: 'QuickPayPaymentId',\n                            value: `${event.id}`,\n                        },\n                        {\n                            property: 'QuickPayOrderId',\n                            value: `${event.order_id}`,\n                        },\n                        {\n                            property: 'QuickPayAccepted',\n                            value: event.accepted ? 'ACCEPTED' : 'REFUSED',\n                        },\n                    ];\n\n                    const orderCreatedConfirmation = await pushOrder(cartWrapperRepository, apiClient, cartWrapper, {\n                        //@ts-ignore\n                        provider: 'custom',\n                        custom: {\n                            properties,\n                        },\n                    });\n                    return orderCreatedConfirmation;\n            }\n        },\n    });\n};\n", "import { createOrderFetcher } from '@crystallize/js-api-client';\nimport { handleOrdersRequestPayload } from '@crystallize/node-service-api-request-handlers';\nimport { LoaderFunction } from '@remix-run/node';\nimport { authenticate } from '~/core/authentication.server';\nimport { getContext } from '~/use-cases/http/utils';\nimport { privateJson } from '~/core/bridge/privateJson.server';\nimport { getStoreFront } from '~/use-cases/storefront.server';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    try {\n        const auth: any = await authenticate(request);\n        return privateJson(\n            await handleOrdersRequestPayload(null, {\n                fetcherByCustomerIdentifier: createOrderFetcher(storefront.apiClient).byCustomerIdentifier,\n                user: auth.user.aud,\n            }),\n        );\n    } catch (exception: any) {\n        return privateJson({ message: exception.message }, 401);\n    }\n};\n", "import { json } from '@remix-run/node';\n\nexport function privateJson(data: any, init?: number | ResponseInit) {\n    let responseInit =\n        typeof init === 'number'\n            ? {\n                  status: init,\n              }\n            : init;\n    let headers = new Headers(responseInit?.headers);\n    return json(data, {\n        headers: {\n            'Cache-Control': 'private',\n        },\n        ...headers,\n    });\n}\n", "import { action as StripAction } from './stripe';\n\n/**\n * @deprecated use /stripe instead\n */\nexport const action = StripAction;\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport receivePaymentEvent from '~/use-cases/payments/stripe/receivePaymentEvent';\nimport { cartWrapperRepository } from '~/use-cases/services.server';\n\nexport const action: ActionFunction = async ({ request }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const body = await request.json();\n    const data = await receivePaymentEvent(\n        cartWrapperRepository,\n        storefront.apiClient,\n        request.headers.get('stripe-signature') as string,\n        body,\n        storefront.config,\n    );\n    return json(data);\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    CartWrapperRepository,\n    handleStripePaymentIntentWebhookRequestPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport pushOrder from '../../crystallize/write/pushOrder';\n\nexport default async (\n    cartWrapperRepository: CartWrapperRepository,\n    apiClient: ClientInterface,\n    signature: string,\n    payload: any,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    return await handleStripePaymentIntentWebhookRequestPayload(payload, {\n        secret_key: process.env.STRIPE_SECRET_KEY ?? storeFrontConfig.configuration?.STRIPE_SECRET_KEY ?? '',\n        endpointSecret:\n            process.env.STRIPE_SECRET_PAYMENT_INTENT_WEBHOOK_ENDPOINT_SECRET ??\n            storeFrontConfig.configuration?.SECRET_PAYMENT_INTENT_WEBHOOK_ENDPOINT_SECRET ??\n            '',\n        signature,\n        rawBody: payload,\n        handleEvent: async (eventName: string, event: any) => {\n            const cartId = event.data.object.metadata.cartId;\n            const cartWrapper = await cartWrapperRepository.find(cartId);\n            if (!cartWrapper) {\n                throw {\n                    message: `Cart '${cartId}' does not exist.`,\n                    status: 404,\n                };\n            }\n            switch (eventName) {\n                case 'payment_intent.succeeded':\n                    const orderCreatedConfirmation = await pushOrder(cartWrapperRepository, apiClient, cartWrapper, {\n                        //@ts-ignore\n                        provider: 'stripe',\n                        stripe: {\n                            paymentIntentId: event.data.object.id,\n                            paymentMethod: event.data.object.charges.data[0].payment_method_details.type,\n                            stripe: `eventId:${event.id}`,\n                            metadata: event.data.object.charges.data[0].receipt_url,\n                        },\n                    });\n                    return orderCreatedConfirmation;\n            }\n        },\n    });\n};\n", "import { ActionFunction } from '@remix-run/node';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { privateJson } from '~/core/bridge/privateJson.server';\nimport { getContext } from '~/use-cases/http/utils';\nimport handleCart from '~/use-cases/checkout/handleSaveCart';\nimport { authenticatedUser } from '~/core/authentication.server';\n\nexport const action: ActionFunction = async ({ request }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const body = await request.json();\n    const user = await authenticatedUser(request);\n\n    return privateJson(await handleCart(storefront.config, storefront.apiClient, requestContext, { ...body, user }));\n};\n", "import { ActionFunction } from '@remix-run/node';\nimport { authenticate, isAuthenticated as isServerSideAuthenticated } from '~/core/authentication.server';\nimport { getContext } from '~/use-cases/http/utils';\nimport { privateJson } from '~/core/bridge/privateJson.server';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport handlePlaceCart from '~/use-cases/checkout/handlePlaceCart';\n\nexport const action: ActionFunction = async ({ request }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const isAuthenticated = await isServerSideAuthenticated(request);\n    const user = isAuthenticated ? (await authenticate(request))?.user : null;\n    const body = await request.json();\n\n    const customerIdentifier = user?.aud || body.customer?.email || 'unknown@unknown.com';\n    const customer = {\n        ...body.customer,\n        // we enforce those 3 values from the Authentication, it might not be overridden in the Form\n        email: body.customer?.email || user?.aud || 'unknown@unknown.com',\n        firstname: body.customer?.firstname || user.firstname,\n        lastname: body.customer?.lastname || user.lastname,\n        // then we decide of and customerIdentifier\n        customerIdentifier,\n        isGuest: !isAuthenticated,\n    };\n\n    return privateJson(\n        await handlePlaceCart(storefront.config, storefront.apiClient, requestContext, { ...body, user }, customer),\n    );\n};\n", "import { createOrderFetcher } from '@crystallize/js-api-client';\nimport { CartWrapper, handleOrderRequestPayload } from '@crystallize/node-service-api-request-handlers';\nimport { LoaderFunction } from '@remix-run/node';\nimport { authenticatedUser } from '~/core/authentication.server';\nimport { getContext } from '~/use-cases/http/utils';\nimport { privateJson } from '~/core/bridge/privateJson.server';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { cartWrapperRepository } from '~/use-cases/services.server';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const auth: any = await authenticatedUser(request);\n    let cartId = requestContext.url.searchParams.get('cartId');\n\n    let cartWrapper: CartWrapper | null | undefined = cartId ? await cartWrapperRepository.find(cartId) : null;\n\n    try {\n        const order = await handleOrderRequestPayload(null, {\n            fetcherById: createOrderFetcher(storefront.apiClient).byId,\n            user: auth.email,\n            orderId: params.id!,\n            checkIfOrderBelongsToUser: () => {\n                return !(cartWrapper && cartWrapper?.extra?.orderId === params.id);\n            },\n        });\n        return privateJson(order);\n    } catch (exception: any) {\n        if (exception?.status === 403) {\n            throw new Response(exception.message, {\n                status: 403,\n                statusText: exception.message,\n            });\n        }\n        console.log('exception', exception);\n    }\n\n    throw new Response('Order Not Found', {\n        status: 404,\n        statusText: 'Order Not Found',\n    });\n};\n", "import CancelPayment from '~/ui/pages/CancelPayment';\n\nexport default () => {\n    return (\n        <div className=\"lg:w-content mx-auto w-full\">\n            <CancelPayment />\n        </div>\n    );\n};\n", "'use client';\n\nimport { useLocalCart } from '../hooks/useLocalCart';\nimport { useEffect, useState } from 'react';\nimport { useAppContext } from '../app-context/provider';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport { RemoteCart } from '~/use-cases/contracts/RemoteCart';\n\nexport function useRemoteCart(): RemoteCart {\n    const { cart, setWrappingData } = useLocalCart();\n    const { state: appContextState } = useAppContext();\n    const [state, setState] = useState({\n        loading: true,\n        hydratedCart: null,\n    });\n\n    useEffect(() => {\n        (async () => {\n            setState({\n                ...state,\n                loading: true,\n            });\n            const api = ServiceAPI({\n                language: appContextState.language,\n                serviceApiUrl: appContextState.serviceApiUrl,\n            });\n            const cartWrapper = await api.fetchRemoteCart(cart);\n            if (cart.cartId !== cartWrapper.cartId || cart.state !== cartWrapper.state) {\n                setWrappingData(cartWrapper.cartId, cartWrapper.state);\n            }\n            setState({\n                ...state,\n                loading: false,\n                hydratedCart: cartWrapper,\n            });\n        })();\n    }, [cart]);\n\n    return {\n        loading: state.loading,\n        remoteCart: state.hydratedCart,\n    };\n}\n", "import React from 'react';\nimport { useAppContext } from '../app-context/provider';\nimport { useLocalCart } from '../hooks/useLocalCart';\n\nexport const CloneCartBtn: React.FC = () => {\n    const { clone: cartClone } = useLocalCart();\n    const { _t } = useAppContext();\n    return (\n        <>\n            <p className=\"text-red-500\">{_t('cart.immutable')}</p>\n            <button\n                className=\"my-3 bg-[#000] border px-5 py-3 relative overflow-hidden h-[50px] rounded-md text-[#fff] w-full font-bold hover:bg-black-100 disabled:opacity-50 disabled:cursor-not-allowed\"\n                onClick={(event) => {\n                    event.preventDefault();\n                    cartClone();\n                }}\n            >\n                {_t('cart.clone')}\n            </button>\n        </>\n    );\n};\n", "import React from 'react';\nimport { useAppContext } from '../app-context/provider';\nimport { useLocalCart } from '../hooks/useLocalCart';\nimport Link from '~/bridge/ui/Link';\nimport { useRemoteCart } from '../hooks/useRemoteCart';\nimport { CloneCartBtn } from '../components/clone-cart-button';\n\nexport default () => {\n    const { isImmutable, clone: cartClone } = useLocalCart();\n    const { path, _t } = useAppContext();\n    const { loading } = useRemoteCart();\n\n    return (\n        <div className=\"lg:w-content mx-auto w-full min-h-[90vh] mt-14\">\n            <h1 className=\"text-3xl font-bold text-center mb-4\">{_t('payment.cancelled')}</h1>\n            <div className=\"flex mb-4 justify-between mx-auto w-fit\">\n                {loading && (\n                    <div className=\"flex items-center\">\n                        <span className=\"pr-2\">{_t('loading')}...</span>\n                        <div className=\"loader\" />\n                    </div>\n                )}\n            </div>\n            {isImmutable() && (\n                <div className=\"mx-auto w-fit\">\n                    <CloneCartBtn />\n                </div>\n            )}\n            {!isImmutable() && (\n                <div className=\"flex gap-10 w-fit mx-auto\">\n                    <button\n                        data-testid=\"go-to-cart-button\"\n                        className=\"bg-grey text-sm text-[#000] font-bold py-2 px-4 rounded-md\"\n                    >\n                        <Link to={path('/cart')}>{_t('cart.goto')}</Link>\n                    </button>\n                    <button\n                        data-testid=\"checkout-button\"\n                        className=\"bg-[#000] py-2 px-4 rounded-md text-[#fff] font-bold hover:bg-black-100 text-sm\"\n                    >\n                        <Link to={path('/checkout')}>{_t('checkout')}</Link>\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n", "import { json, LoaderFunction, HeadersFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { getContext } from '~/use-cases/http/utils';\nimport OrderPlacedCart from '~/ui/pages/OrderPlacedCart';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const { shared } = await getStoreFront(requestContext.host);\n    return json(\n        { cartId: params.id },\n        StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', ['cart' + params.id], shared.config.tenantIdentifier),\n    );\n};\n\nexport default () => {\n    const { cartId } = useLoaderData();\n    return <OrderPlacedCart cartId={cartId} />;\n};\n", "'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useLocalCart } from '../hooks/useLocalCart';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport { useAppContext } from '../app-context/provider';\nimport useNavigate from '~/bridge/ui/useNavigate';\n\nexport default ({ cartId }: { cartId: string }) => {\n    const { cart: localCart, empty } = useLocalCart();\n    const [tryCount, setTryCount] = useState(0);\n    const { state: appContextState, path, _t } = useAppContext();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        let timeout: ReturnType<typeof setTimeout>;\n        (async () => {\n            try {\n                if (localCart.cartId === cartId) {\n                    empty();\n                }\n                const cart = await ServiceAPI({\n                    language: appContextState.language,\n                    serviceApiUrl: appContextState.serviceApiUrl,\n                }).fetchCart(cartId);\n\n                if (cart?.extra?.orderId) {\n                    if (cart?.customer?.isGuest === true) {\n                        navigate(path('/order/' + cart.extra.orderId + '?cartId=' + cart.cartId));\n                    } else {\n                        navigate(path('/order/' + cart.extra.orderId));\n                    }\n                } else {\n                    timeout = setTimeout(() => {\n                        setTryCount(tryCount + 1);\n                    }, 500 * tryCount);\n                }\n            } catch (exception) {\n                timeout = setTimeout(() => {\n                    setTryCount(tryCount + 1);\n                }, 500 * tryCount);\n            }\n        })();\n        return () => clearTimeout(timeout);\n    }, [cartId, tryCount]);\n\n    return (\n        <div className=\"items-center justify-center flex max-w-[500px] mx-auto flex-row\">\n            <div className=\"loader mr-3\" />\n            {_t('order.redirectMessage')}\n        </div>\n    );\n};\n", "import { useNavigate } from '@remix-run/react';\n\nexport default () => {\n    return useNavigate();\n};\n", "import { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { HeadersFunction, json, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { buildMetas } from '~/use-cases/MicrodataBuilder';\nimport { getContext } from '~/use-cases/http/utils';\nimport AbstractStory from '~/ui/pages/AbstractStory';\nimport dataFetcherForShapePage from '~/use-cases/dataFetcherForShapePage.server';\nimport { authenticatedUser } from '~/core/authentication.server';\nimport { marketIdentifiersForUser } from '~/use-cases/marketIdentifiersForUser';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n    return buildMetas(data);\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const path = `/stories/${params.story}`;\n    const { shared } = await getStoreFront(requestContext.host);\n    const user = await authenticatedUser(request);\n    const data = await dataFetcherForShapePage(\n        'abstract-story',\n        path,\n        requestContext,\n        params,\n        marketIdentifiersForUser(user),\n    );\n    return json({ data }, StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier));\n};\n\nexport default () => {\n    const { data } = useLoaderData();\n    return <AbstractStory data={data} />;\n};\n", "'use client';\n\nimport { ContentTransformer, Image } from '@crystallize/reactjs-components';\nimport { CuratedProductItem } from '../components/curated-product-item';\nimport { useMemo, useState } from 'react';\nimport { AddToCartBtn, VariantPack, VariantPackItem } from '../components/add-to-cart-button';\nimport { useAppContext } from '../app-context/provider';\nimport { CuratedStory } from '../../use-cases/contracts/Story';\nimport { ParagraphCollection } from '../components/crystallize-components/paragraph-collection';\nimport { Price } from '../lib/pricing/pricing-component';\n\nexport default ({ data: story }: { data: CuratedStory }) => {\n    const [activePoint, setActivePoint] = useState('');\n    const { state: appContextState } = useAppContext();\n    // construct the defaut pack from merch.products with quanity 1\n    const defaultPack = useMemo(\n        () =>\n            story.merchandising.reduce((memo: VariantPack, merch, merchIndex) => {\n                merch.products.forEach((product, productIndex) => {\n                    memo.push({\n                        variant: product.variant,\n                        quantity: 1,\n                        key: `${merchIndex}-${productIndex}`,\n                    });\n                });\n                return memo;\n            }, []),\n        [story.merchandising],\n    );\n\n    const [pack, setPack] = useState<VariantPack>(defaultPack);\n    const totalAmountToPay = pack.reduce((memo: number, packitem: VariantPackItem) => {\n        const marketPrice = packitem.variant.priceVariants?.default?.priceFor?.price;\n        const price = packitem.variant.priceVariants?.sales?.value || packitem.variant.priceVariants?.default?.value;\n\n        const priceToUse = marketPrice < price ? marketPrice : price;\n        return memo + (priceToUse || 0) * packitem.quantity;\n    }, 0);\n\n    const updatePack = (previous: VariantPackItem, next: VariantPackItem) => {\n        setPack(\n            pack.map((packitem: VariantPackItem) => {\n                if (previous.key === packitem.key) {\n                    // we got to preserve the key\n                    return {\n                        ...packitem,\n                        quantity: next.quantity,\n                        variant: next.variant,\n                    };\n                }\n                return packitem;\n            }),\n        );\n    };\n    return (\n        <div className=\"flex flex-col-reverse lg:flex-row gap-8 min-h-full container px-6 mx-auto mt-20 mb-40\">\n            <div className=\"lg:w-7/12\">\n                <div className=\"img-container overflow-hidden self-start rounded-lg relative\">\n                    <div className=\"absolute h-full w-full frntr-hotspot frntr-hotspot-microformat\">\n                        {story.merchandising.map((merch, i) => (\n                            <span\n                                onMouseOver={() => setActivePoint(`hotspot-point-${i}`)}\n                                onMouseLeave={() => setActivePoint('')}\n                                key={`hotspot-${merch.x}-${merch.y}`}\n                                style={{ left: merch.x + `%`, top: merch.y + '%' }}\n                            >\n                                <div className=\"rounded-sm overflow-hidden shadow-sm px-2 pt-2 \">\n                                    {merch.products.map((product, index) => (\n                                        <div className=\"flex items-center gap-2 pb-2\" key={index}>\n                                            <div className=\"img-container img-cover w-[30px] h-[40px]\">\n                                                <Image\n                                                    {...product.variant.images?.[0]}\n                                                    sizes=\"100px\"\n                                                    loading=\"lazy\"\n                                                    fallbackAlt={product.name}\n                                                />\n                                            </div>\n                                            <div>\n                                                <div className=\"text-xs\">{product.name}</div>\n                                                <div className=\"text-xs font-bold\">\n                                                    {appContextState.currency.code}{' '}\n                                                    {product.variant.priceVariants.default.value}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </span>\n                        ))}\n                    </div>\n                    <Image {...story?.medias?.images?.[0]} sizes=\"50vw\" fallbackAlt={story.title} />\n                </div>\n                <div className=\"max-w-[1000px] \">{story.story && <ParagraphCollection paragraphs={story.story} />}</div>\n            </div>\n\n            <div className=\"px-6 lg:w-5/12\">\n                <h1 className=\"text-3xl font-semibold mb-2\">{story.title}</h1>\n                <div className=\"border-b pb-4 mb-4 border-[#dfdfdf] text-1xl leading-[1.4em] mb-5\">\n                    <ContentTransformer json={story.description?.json} />\n                </div>\n                <div className=\"sticky top-20\">\n                    {story.merchandising.map((merch, merchIndex) => {\n                        return (\n                            <div\n                                key={`merch-container-${merch.x}-${merch.y}`}\n                                className=\"px-2 overflow-hidden rounded-md my-2\"\n                                style={{\n                                    border:\n                                        activePoint === `hotspot-point-${merchIndex}`\n                                            ? '1px solid #000'\n                                            : '1px solid transparent',\n                                }}\n                            >\n                                <CuratedProductItem\n                                    merch={merch}\n                                    updatePack={updatePack}\n                                    pack={pack}\n                                    merchIndex={merchIndex}\n                                />\n                            </div>\n                        );\n                    })}\n                    <div className=\"flex pt-5 mt-5 items-center justify-between\">\n                        <div className=\"text-2xl font-bold text-green2\">\n                            <Price currencyCode={appContextState.currency.code}>{totalAmountToPay}</Price>\n                        </div>\n                        <AddToCartBtn pack={pack} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n", "import { ProductVariant } from '@crystallize/js-api-client';\nimport { Image } from '@crystallize/reactjs-components';\nimport { Price } from '../components/price';\nimport { VariantSelector } from './variant-selector';\nimport { ProductSlim } from '~/use-cases/contracts/Product';\nimport { ProductListHostpot } from '~/use-cases/contracts/ProductListHostpot';\nimport { VariantPack, VariantPackItem } from './add-to-cart-button';\n\nexport const CuratedProductItem: React.FC<{\n    merch: ProductListHostpot;\n    merchIndex: number;\n    pack: VariantPack;\n    updatePack: Function;\n}> = ({ merch, pack, merchIndex, updatePack }) => {\n    return (\n        <>\n            {merch.products.map((product, productIndex) => (\n                <Product\n                    product={product}\n                    pack={pack}\n                    key={productIndex}\n                    updatePack={updatePack}\n                    packKey={`${merchIndex}-${productIndex}`}\n                />\n            ))}\n        </>\n    );\n};\n\nconst Product = ({\n    product,\n    pack,\n    updatePack,\n    packKey,\n}: {\n    product: ProductSlim;\n    pack: VariantPack;\n    updatePack: Function;\n    packKey: string;\n}) => {\n    if (!product?.variants) {\n        return null;\n    }\n\n    const selecedPackItem: VariantPackItem = pack.find((packItem: VariantPackItem) => packItem.key === packKey) || {\n        variant: product.variants[0],\n        quantity: 1,\n    };\n    if (!selecedPackItem) {\n        return null;\n    }\n\n    return (\n        <>\n            <div className=\"border-b border-[#dfdfdf] w-full py-3 \">\n                <div className=\"grid w-full grid-cols-[0.35fr_1fr]\">\n                    <div className=\"w-full img-container overflow-hidden rounded-md\">\n                        <Image\n                            sizes=\"200px\"\n                            {...selecedPackItem.variant?.images?.[0]}\n                            fallbackAlt={selecedPackItem.variant.name}\n                        />\n                    </div>\n                    <div>\n                        <div className=\"gap-2 pl-4 flex \">\n                            <div className=\" w-full\">\n                                <div className=\"pb-1\">{selecedPackItem.variant.name}</div>\n                                <Price variant={selecedPackItem.variant} size=\"small\" />\n                            </div>\n                            <div className=\"flex flex-col-reverse max-w-[40px] w-full items-center justify-end \">\n                                <button\n                                    className=\"py-1 w-full block text-sm rounded-md border-transparent hover:bg-[#efefef]\"\n                                    onClick={() =>\n                                        updatePack(selecedPackItem, {\n                                            ...selecedPackItem,\n                                            quantity: selecedPackItem.quantity - 1,\n                                        })\n                                    }\n                                >\n                                    -\n                                </button>\n                                <input\n                                    value={selecedPackItem.quantity}\n                                    type=\"text\"\n                                    className=\"py-2  w-full w-full text-sm text-center hover:bg-[#efefef] active:bg-[#efefef]\"\n                                    onChange={(e) =>\n                                        updatePack(selecedPackItem, {\n                                            ...selecedPackItem,\n                                            quantity: parseInt(e.target.value),\n                                        })\n                                    }\n                                />\n                                <button\n                                    className=\"py-1 w-full block text-sm rounded-md border-transparent hover:bg-[#efefef]\"\n                                    onClick={() =>\n                                        updatePack(selecedPackItem, {\n                                            ...selecedPackItem,\n                                            quantity: selecedPackItem.quantity + 1,\n                                        })\n                                    }\n                                >\n                                    +\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"pl-4 mt-2 max-w-[100%]\">\n                            <div className=\"grid grid-cols-1 grid-col-2 lg:grid-cols-1 xl:grid-cols-2 gap-2\">\n                                <VariantSelector\n                                    variants={product.variants}\n                                    selectedVariant={selecedPackItem.variant}\n                                    onVariantChange={(variant: ProductVariant) => {\n                                        updatePack(selecedPackItem, {\n                                            variant,\n                                            quantity: selecedPackItem.quantity,\n                                        });\n                                    }}\n                                    renderingType=\"dropdown\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n", "import { ContentTransformer, Image } from '@crystallize/reactjs-components';\nimport { ParagraphCollection } from '../components/crystallize-components/paragraph-collection';\nimport { RelatedDocument } from '../components/related-document';\nimport { Product } from '../components/item/product';\nimport { Story } from '../../use-cases/contracts/Story';\nimport { buildSchemaMarkupForBlogPost } from '~/use-cases/SchemaMarkupBuilder';\n\nexport default ({ data: story }: { data: Story }) => {\n    return (\n        <>\n            <script\n                type=\"application/ld+json\"\n                dangerouslySetInnerHTML={{\n                    __html: JSON.stringify(buildSchemaMarkupForBlogPost(story)),\n                }}\n            />\n            <div className=\"2xl md:container md:px-6 px-4 mx-auto mt-20 mb-20\">\n                <div className=\"max-w-[1000px]\">\n                    <p className=\"mb-4 text-md\">\n                        {new Date(story.createdAt).toLocaleString('en-US', {\n                            year: 'numeric',\n                            month: 'long',\n                            day: 'numeric',\n                        })}\n                    </p>\n                    <h1 className=\"text-6xl font-semibold mb-2\">{story.title}</h1>\n                    <div className=\"md:w-3/4 w-full my-2 text-2xl leading-[1.8em]\">\n                        <ContentTransformer json={story.description.json} />\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"container 2xl mt-5 w-screen mx-auto\">\n                <div className=\"max-w-[1200px] img-container overflow-hidden rounded-lg\">\n                    <Image {...story.medias?.images?.[0]} sizes=\"100vw\" fallbackAlt={story.title} />\n                </div>\n            </div>\n\n            <div className=\"2xl container mx-auto frntr-story \">\n                <div className=\"max-w-[1000px] \">{story.story && <ParagraphCollection paragraphs={story.story} />}</div>\n            </div>\n            {story.relatedArticles && (\n                <div className=\"2xl container px-6 mx-auto w-full mt-10\">\n                    <h3 className=\"font-bold mt-40 mb-4 text-xl\">Read next</h3>\n                    <div className=\"gap-5 lg:grid grid-cols-5 pb-5 flex flex-wrapl\">\n                        {story.relatedArticles?.map((item: any, index: number) => (\n                            <div key={index}>\n                                <RelatedDocument document={item} />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n            {story.featuredProducts && (\n                <div className=\"2xl container px-6 mx-auto w-full mt-10\">\n                    <h3 className=\"font-bold mt-20 mb-4 text-xl\">Featured products</h3>\n                    <div className=\"gap-5 lg:grid grid-cols-5 pb-5 flex flex-wrap\">\n                        {story.featuredProducts?.map((item: any, index: number) => {\n                            return <Product item={item} key={index} />;\n                        })}\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n", "import Link from '~/bridge/ui/Link';\nimport { Image } from '@crystallize/reactjs-components';\nimport { useAppContext } from '../app-context/provider';\n\nexport const RelatedDocument = ({ document }: { document: any }) => {\n    const { path } = useAppContext();\n    let title = document.components.find((component: any) => component.name === 'Title')?.content?.text;\n    let media = document.components.find((component: any) => component.name === 'Media')?.content?.selectedComponent\n        ?.content;\n    return (\n        <div className=\"pb-5 img-cover-hover\">\n            <Link to={path(document.path)}>\n                <div className=\"img-container img-cover rounded-md overflow-hidden\">\n                    <Image {...media?.images?.[0]} sizes=\"200px\" loading=\"lazy\" fallbackAlt={title} />\n                </div>\n                <h4 className=\"font-semibold mt-5\">{title}</h4>\n            </Link>\n        </div>\n    );\n};\n", "'use client';\nimport { CuratedStory as CuratedStoryType, Story as StoryType } from '~/use-cases/contracts/Story';\nimport CuratedStory from './CuratedStory';\nimport Story from './Story';\n\nexport default ({ data: story }: { data: CuratedStoryType | StoryType }) => {\n    if (story.type === 'curated-product-story') {\n        return <CuratedStory data={story} />;\n    }\n    if (story.type === 'story') {\n        return <Story data={story} />;\n    }\n    return <div> No renderer for type</div>;\n};\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport sendOrderCreatedReceipt from '~/use-cases/user/sendOrderCreatedReceipt';\nimport { createMailer } from '~/use-cases/services.server';\n\nexport const action: ActionFunction = async ({ request }) => {\n    if (request.method !== 'POST') {\n        return json({ message: 'Method not allowed' }, 405);\n    }\n    const mailer = createMailer(`${process.env.MAILER_DSN}`);\n    const requestContext = getContext(request);\n    const { secret } = await getStoreFront(requestContext.host);\n    const payload = await request.json();\n    await sendOrderCreatedReceipt(mailer, secret.apiClient, payload.order.get);\n    return json({ success: true, payload }, 200);\n};\n", "import { CrystallizeAPI } from '../crystallize/read';\nimport { availableLanguages } from '../LanguageAndMarket';\nimport { ClientInterface } from '@crystallize/js-api-client';\nimport mjml2html from 'mjml';\nimport { Mailer } from '../contracts/Mailer';\n\nexport default async (mailer: Mailer, apiClient: ClientInterface, order: any) => {\n    const date = new Date(order.createdAt);\n    let creationDate = date.toLocaleString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\n    const api = CrystallizeAPI({\n        apiClient: apiClient,\n        language: availableLanguages[0],\n    });\n    const tenantConfig = await api.fetchTenantConfig(apiClient.config.tenantIdentifier);\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: order.total.currency,\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n    });\n    let mail = mjml2html(`<mjml>\n        <mj-head>\n          <mj-title>Order confirmation - FRNTR Boilerplate</mj-title>\n          <mj-attributes>\n            <mj-all font-family=\"Roboto, Helvetica, sans-serif\" line-height=\"28px\" font-size=\"15px\" color=\"#0E0E0E\"></mj-all>\n          </mj-attributes>\n          <mj-style>\n            .product-img {\n            max-width: 40px;\n            }\n            .order-summary td, .order-summary th {\n            height: 100px;\n            vertical-align: middle;\n            text-align: center;\n            border-bottom: 1px solid #ddd;\n            }\n            .order-summary td.item-image,\n            .order-summary th.item-image {\n            width: 40px;\n            }\n            .order-summary th {\n            background-color: #E2ECE9;\n            }\n            @media only screen and (max-width: 600px) {\n            .order-summary td.item-image,\n            .order-summary th.item-image {\n            display: none;\n            width: 0;\n            }\n            .order-summary td.item-name {\n            text-align: center;\n            }\n            }\n          </mj-style>\n        </mj-head>\n        <mj-body>\n          <mj-section>\n            <mj-column>\n              <mj-image width=\"150px\" align=\"center\" src=${tenantConfig.logo?.url}></mj-image>\n            </mj-column>\n          </mj-section>\n          <mj-section>\n            <mj-column>\n              <mj-text line-height=\"38px\" font-size=\"28px\" font-weight=\"bold\" align=\"center\">Order Confirmed!</mj-text>\n              <mj-text align=\"center\" font-size=\"20px\" line-height=\"38px\">Hey ${\n                  order.customer.firstName\n              }, thank you for your order.</mj-text>\n              <mj-text font-size=\"17px\" align=\"center\" line-height=\"38px\">We've received your order and will contact you as soon as it is shipped. You can find your order details below.</mj-text>\n            </mj-column>\n          </mj-section>\n\n          <mj-section border-bottom=\"1px solid #0e0e0e\" border-top=\"1px solid #0e0e0e\">\n            <mj-column>\n              <mj-table>\n                <tr align=\"center\">\n                  <th style=\"padding: 0 15px 0 0;\">Date</th>\n                  <th style=\"padding: 0 15px\">Order</th>\n\n                  <th style=\"padding: 0 0 0 15px;\">Payment</th>\n                </tr>\n                <tr align=\"center\">\n                  <td style=\"padding: 0 15px 0 0;\">${creationDate}</td>\n                  <td style=\"padding: 0 15px;\">#${order.id}</td>\n                  <td style=\"padding: 0 0 0 15px; text-transform: capitalize\">${order?.payment?.[0]?.provider}</td>\n                </tr>\n              </mj-table>\n            </mj-column>\n          </mj-section>\n\n          <mj-section>\n            <mj-column>\n              <mj-spacer></mj-spacer>\n              <!-- Shopping order summary -->\n              <mj-table css-class=\"order-summary\" width=\"100%\">\n              ${order.cart.map(\n                  (item: any) => `<tr>\n                  <td class=\"item-image\"><img src=${item.imageUrl} class=\"product-img\" /></td>\n                  <td class=\"item-name\">${item.name}</td>\n                  <td>${item.quantity}</td>\n                  <td>${formatter.format(item.price.gross)}</td>\n                </tr>`,\n              )}\n              </mj-table>\n            </mj-column>\n          </mj-section>\n          <mj-section padding=\"0\">\n            <mj-group>\n              <mj-column>\n                <!-- Blank Column -->\n              </mj-column>\n              <mj-column>\n                <mj-text font-size=\"17px\" align=\"right\">Subtotal: <span style=\"color:black; font-weight:500;\">${formatter.format(\n                    order.total.net,\n                )}</span></mj-text>\n              </mj-column>\n          </mj-section>\n\n\n          <mj-section padding=\"0\">\n            <mj-column>\n              <!-- Blank Column -->\n            </mj-column>\n            <mj-column>\n              <mj-text font-size=\"17px\" align=\"right\">Tax: <span style=\"color:black; font-weight:500;\">${formatter.format(\n                  order.total.gross - order.total.net,\n              )}</span></mj-text>\n            </mj-column>\n          </mj-section>\n          <mj-section padding=\"0\">\n            <mj-column>\n              <!-- Blank Column -->\n            </mj-column>\n            <mj-column>\n              <mj-text align=\"right\" font-size=\"20px\">Total: <span style=\"color:black; font-weight:500;\">${formatter.format(\n                  order.total.gross,\n              )}</span></mj-text>\n            </mj-column>\n          </mj-section>\n          </mj-section>\n          <mj-section>\n            <mj-column border-top=\"1px solid #0e0e0e\" border-bottom=\"1px solid #0e0e0e\">\n              <mj-text align=\"center\" font-size=\"20px\" font-weight=\"bold\" padding=\"30px 0\">Thank you for shopping with us!</mj-text>\n            </mj-column>\n          </mj-section>\n          <mj-section background-color=\"#0e0e0e\">\n          \t<mj-column>\n            \t<mj-text color=\"#ffffff\">In you've any queries or require any assistance regarding your order, please contact us at hello@crystallize.com.</mj-text>\n            </mj-column>\n          </mj-section>\n        </mj-body>\n      </mjml>`).html;\n\n    return await mailer(\n        'Crystallize - Your order has been placed',\n        `${order.customer.identifier}`,\n        'hello@crystallize.com',\n        `${mail}`,\n    );\n};\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { cartWrapperRepository } from '~/use-cases/services.server';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport receivePaymentEvent from '~/use-cases/payments/adyen/receivePaymentEvent';\n\nexport const action: ActionFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    const body = await request.json();\n    const data = await receivePaymentEvent(cartWrapperRepository, storefront.apiClient, body, storefront.config);\n\n    return json(data);\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { TStoreFrontConfig } from '@crystallize/js-storefrontaware-utils';\nimport {\n    CartWrapperRepository,\n    handleAdyenWebhookRequestPayload,\n} from '@crystallize/node-service-api-request-handlers';\nimport { cartWrapperRepository } from '~/use-cases/services.server';\nimport pushOrder from '../../crystallize/write/pushOrder';\n\nexport default async (\n    cartWrapper: CartWrapperRepository,\n    apiClient: ClientInterface,\n    payload: any,\n    storeFrontConfig: TStoreFrontConfig,\n) => {\n    //@todo: @dhairyadwivedi: we probably need to add some more checks here\n    // it feels pretty unsafe to just accept any payload\n    // you will have to fix in the handleAdyenWebhookRequestPayload of the library\n    // and pass the right args here via storeFrontConfig probably\n\n    return await handleAdyenWebhookRequestPayload(payload, {\n        handleEvent: async () => {\n            for (let i = 0; i < payload?.notificationItems?.length; i++) {\n                const event = payload?.notificationItems[i]?.NotificationRequestItem;\n                const cartId = event.merchantReference;\n\n                switch (event.eventCode) {\n                    case 'AUTHORISATION':\n                        const cartWrapper = await cartWrapperRepository.find(cartId);\n                        if (event.success !== 'true') {\n                            throw {\n                                message: `Payment failed for cart '${cartId}'.`,\n                                status: 403,\n                            };\n                        }\n                        if (!cartWrapper) {\n                            throw {\n                                message: `===> Cart '${cartId}' does not exist.`,\n                                status: 404,\n                            };\n                        }\n                        const orderCreatedConfirmation = await pushOrder(\n                            cartWrapperRepository,\n                            apiClient,\n                            cartWrapper,\n                            {\n                                //@ts-ignore\n                                provider: 'custom',\n                                custom: {\n                                    properties: [\n                                        {\n                                            property: 'payment_method',\n                                            value: 'Adyen',\n                                        },\n                                        {\n                                            property: 'cartId',\n                                            value: cartId,\n                                        },\n                                    ],\n                                },\n                            },\n                        );\n                        return orderCreatedConfirmation;\n                }\n            }\n        },\n    });\n};\n", "import { HeadersFunction, json, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { CrystallizeAPI } from '~/use-cases/crystallize/read';\nimport { buildMetas } from '~/use-cases/MicrodataBuilder';\nimport { getContext } from '~/use-cases/http/utils';\nimport { CategoryWithChildren } from '~/use-cases/contracts/Category';\nimport Stories from '~/ui/pages/Stories';\nimport { authenticatedUser } from '~/core/authentication.server';\nimport { marketIdentifiersForUser } from '~/use-cases/marketIdentifiersForUser';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n    return buildMetas(data);\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    const requestContext = getContext(request);\n    const path = `/stories`;\n    const { shared, secret } = await getStoreFront(requestContext.host);\n    const api = CrystallizeAPI({\n        apiClient: secret.apiClient,\n        language: requestContext.language,\n        isPreview: requestContext.isPreview,\n    });\n    const user = await authenticatedUser(request);\n\n    const folder = await api.fetchFolderWithChildren(path, marketIdentifiersForUser(user));\n    return json({ folder }, StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier));\n};\n\nexport default () => {\n    const { folder } = useLoaderData() as { folder: CategoryWithChildren };\n    return <Stories folder={folder} />;\n};\n", "'use client';\nimport { Image } from '@crystallize/reactjs-components';\nimport Link from '~/bridge/ui/Link';\nimport { useAppContext } from '../../app-context/provider';\nimport { StorySlim, CuratedStorySlim } from '~/use-cases/contracts/Story';\nimport {\n    choiceComponentWithId,\n    chunksForChunkComponentWithId,\n    itemsForItemRelationComponentWithId,\n    numericValueForComponentWithId,\n    stringForSingleLineComponentWithId,\n} from '~/use-cases/mapper/api-mappers';\nimport { ItemViewComponentProps } from '../../lib/grid-tile/types';\nimport { CuratedProduct } from './curated-product';\nimport { DataMapper } from '~/use-cases/mapper';\n\nconst DefaultDocument: React.FC<{ item: StorySlim | CuratedStorySlim }> = ({ item }) => {\n    const { path } = useAppContext();\n    return (\n        <Link\n            to={path(item.path)}\n            prefetch=\"intent\"\n            className=\"grid min-h-[100%] bg-[#F5F5F5] rounded-md overflow-hidden border border-[#f5f5f5] hover:border-[#000]\"\n        >\n            <div className=\"flex flex-col justify-between items-stretch h-full overflow-hidden w-full\">\n                <div className=\"px-10 pt-20 h-1/3 \">\n                    <h2 className=\"text-2xl font-bold mb-3\">{item.title}</h2>\n                    <p className=\"embed-text\">{item.description?.plainText}</p>\n                </div>\n                <div className=\"pl-10 pt-10 max-w-full h-full min-h-[400px] img-container overflow-hidden rounded-t-l-md img-cover grow\">\n                    <Image\n                        {...item.medias?.images?.[0]}\n                        sizes=\"300px\"\n                        loading=\"lazy\"\n                        className=\"overflow-hidden rounded-tl-md \"\n                        key={item.name}\n                    />\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nexport const Document: React.FC<{ item: StorySlim | CuratedStorySlim }> = ({ item }) => {\n    if (item.type === 'curated-product-story') {\n        return <CuratedProduct item={item} />;\n    }\n    return <DefaultDocument item={item} />;\n};\n\nexport const DocumentFromCell: React.FC<ItemViewComponentProps> = ({ item }) => {\n    const mapper = DataMapper();\n    const common = {\n        name: item.name,\n        path: item.path,\n        title: stringForSingleLineComponentWithId(item.components, 'title') || item.name!,\n    };\n\n    if (item.shape.identifier === 'curated-product-story') {\n        const intro = item.components.find((c: any) => c.id === 'description')?.content;\n        const media = item.components.find((c: any) => c.id === 'shoppable-image')?.content;\n        return (\n            <Document\n                item={{\n                    ...common,\n                    description: intro,\n                    type: 'curated-product-story',\n                    medias: {\n                        images: mapper.API.Object.APIImageToImage(media.images),\n                        videos: [],\n                    },\n                    merchandising:\n                        chunksForChunkComponentWithId(item.components, 'merchandising')?.map((chunk) => {\n                            return {\n                                products:\n                                    itemsForItemRelationComponentWithId(chunk, 'products')?.map((product: any) => {\n                                        return {\n                                            id: product.id,\n                                            name: product.name,\n                                            path: product.path,\n                                            variant: mapper.API.Object.APIProductVariantToProductVariant(\n                                                product.defaultVariant,\n                                            ),\n                                            topics: [],\n                                        };\n                                    }) || [],\n                                x: numericValueForComponentWithId(chunk, 'hotspot-x') || 0,\n                                y: numericValueForComponentWithId(chunk, 'hotspot-y') || 0,\n                            };\n                        }) || [],\n                }}\n            />\n        );\n    }\n\n    const intro = item.components.find((c: any) => c.id === 'intro')?.content;\n    const media = choiceComponentWithId(item.components, 'media');\n    return (\n        <Document\n            item={{\n                ...common,\n                description: intro,\n                type: 'story',\n                medias: {\n                    images: media ? mapper.API.Object.APIImageToImage(media.content.images) : [],\n                    videos: [],\n                },\n            }}\n        />\n    );\n};\n", "import { Image } from '@crystallize/reactjs-components';\nimport Link from '~/bridge/ui/Link';\nimport { useAppContext } from '../../app-context/provider';\nimport { CuratedStorySlim } from '~/use-cases/contracts/Story';\n\nexport const CuratedProduct: React.FC<{ item: CuratedStorySlim }> = ({ item }) => {\n    const { state: contextState, path } = useAppContext();\n\n    const title = item.title;\n    const description = item.description.plainText;\n    const shoppableImage = item.medias.images?.[0];\n    let merchandising = item.merchandising;\n\n    return (\n        <Link\n            to={path(item.path)}\n            prefetch=\"intent\"\n            className=\"grid min-h-[100%] w-full bg-[#F5F5F5] relative rounded-md border border-[#f5f5f5] hover:border-[#000]\"\n        >\n            <div className=\"flex flex-col justify-between items-stretch h-full w-full\">\n                <div className=\"px-10 pt-20 pb-6 \">\n                    {title && <h2 className=\"text-2xl font-bold mb-3\">{title}</h2>}\n                    {description && <p className=\"embed-text\">{description}</p>}\n                </div>\n                <div className=\"img-container w-full lg:col-span-3 self-start rounded-tl-lg relative\">\n                    <div className=\"absolute h-full w-full frntr-hotspot frntr-hotspot-microformat\">\n                        {merchandising.map((merch, i) => (\n                            <span\n                                key={`hotspot-${merch.x}-${merch.y}`}\n                                style={{ left: merch.x + `%`, top: merch.y + '%' }}\n                            >\n                                <div className=\"rounded-sm shadow-sm px-2 pt-2 \">\n                                    {merch.products.map((product) => (\n                                        <div className=\"flex items-center gap-2 pb-2\" key={product.id}>\n                                            <div className=\"img-container img-cover w-[30px] h-[40px]\">\n                                                <Image\n                                                    {...product.variant.images?.[0]}\n                                                    sizes=\"100px\"\n                                                    loading=\"lazy\"\n                                                    fallbackAlt={product.name}\n                                                    key={product.id}\n                                                />\n                                            </div>\n                                            <div>\n                                                <div className=\"text-xs\">{product.name}</div>\n                                                <div className=\"text-xs font-bold\">\n                                                    {contextState.currency.code}{' '}\n                                                    {product.variant.priceVariants.default.value}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </span>\n                        ))}\n                    </div>\n                    <Image {...shoppableImage} sizes=\"50vw\" fallbackAlt={title} key={item.name} />\n                </div>\n            </div>\n        </Link>\n    );\n};\n", "import { Document } from '../components/item/document';\nimport { CategoryWithChildren } from '~/use-cases/contracts/Category';\nimport { Product } from '../components/item/product';\n\nexport default ({ folder }: { folder: CategoryWithChildren }) => {\n    return (\n        <div className=\"container 2xl md:px-6 mx-auto w-full p-10\">\n            <h1 className=\"text-6xl font-bold mt-10 mb-4\">{folder.title}</h1>\n            <div className=\"flex gap-5\">{folder.description}</div>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3 mt-10 grid-flow-row flex flex-wrap\">\n                {folder.children.map((child) => {\n                    // kind of a hack here as know that ProductSlim does not have a type\n                    if ('type' in child) {\n                        return <Document item={child} key={child.name} />;\n                    }\n                    return <Product item={child} key={child.name} />;\n                })}\n            </div>\n        </div>\n    );\n};\n", "import { LoaderFunction } from '@remix-run/node';\nimport { privateJson } from '~/core/bridge/privateJson.server';\nimport { cartWrapperRepository } from '~/use-cases/services.server';\n\nexport const loader: LoaderFunction = async ({ params }) => {\n    const cartWrapper = await cartWrapperRepository.find(params.id!);\n    if (!cartWrapper) {\n        throw {\n            message: `Cart '${params.id!}' does not exist.`,\n            status: 404,\n        };\n    }\n    return privateJson(cartWrapper);\n};\n", "import { HeadersFunction, json, LinksFunction, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport sliderStyles from 'rc-slider/assets/index.css';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { buildMetas } from '~/use-cases/MicrodataBuilder';\nimport { getContext } from '~/use-cases/http/utils';\nimport splideStyles from '@splidejs/splide/dist/css/themes/splide-default.min.css';\nimport videoStyles from '@crystallize/reactjs-components/assets/video/styles.css';\nimport Category from '~/ui/pages/Category';\nimport dataFetcherForShapePage from '~/use-cases/dataFetcherForShapePage.server';\nimport { authenticatedUser } from '~/core/authentication.server';\nimport { marketIdentifiersForUser } from '~/use-cases/marketIdentifiersForUser';\n\nexport const links: LinksFunction = () => {\n    return [\n        { rel: 'stylesheet', href: sliderStyles },\n        { rel: 'stylesheet', href: splideStyles },\n        { rel: 'stylesheet', href: videoStyles },\n    ];\n};\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n    return buildMetas(data);\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const path = `/shop/${params.folder}`;\n    const { shared } = await getStoreFront(requestContext.host);\n    const user = await authenticatedUser(request);\n    const data = await dataFetcherForShapePage(\n        'category',\n        path,\n        requestContext,\n        params,\n        marketIdentifiersForUser(user),\n    );\n\n    return json({ data }, StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier));\n};\n\nexport default () => {\n    const { data } = useLoaderData();\n    return <Category data={data} />;\n};\n", "import { Form, useLocation, useTransition } from '@remix-run/react';\nimport { useRef } from 'react';\nimport { useAppContext } from '~/ui/app-context/provider';\nimport useSubmit from './useSubmit';\nimport useNavigate from './useNavigate';\nimport { PriceRangeFilter } from '~/ui/components/search/price-range-filter';\nimport { AttributeFilter } from '~/ui/components/search/attribute-filter';\n\nexport default ({ aggregations }: { aggregations: any }) => {\n    const navigate = useNavigate();\n    const submit = useSubmit();\n    const location = useLocation();\n    const transition = useTransition;\n    const formRef = useRef(null);\n    const { _t } = useAppContext();\n    const price = aggregations?.search.aggregations.price;\n    const attributes = aggregations?.search.aggregations.attributes;\n\n    function handleChange(event: any) {\n        submit(event.currentTarget, { replace: true });\n    }\n\n    const grouped = attributes?.reduce(\n        (\n            memo: Record<string, Array<{ attribute: string; value: string }>>,\n            item: { attribute: string; value: string },\n        ) => {\n            if (!memo[item.attribute]) {\n                memo[item.attribute] = [];\n            }\n            memo[item.attribute].push(item);\n            return memo;\n        },\n        {},\n    );\n\n    return (\n        <>\n            <Form\n                method=\"get\"\n                action={location.pathname}\n                onChange={handleChange}\n                ref={formRef}\n                className=\"flex gap-4 flex-wrap\"\n            >\n                <label>\n                    <select\n                        name=\"orderBy\"\n                        className=\"w-60 bg-grey py-2 px-6 rounded-md text-md font-bold \"\n                        defaultValue={'NAME_ASC'}\n                    >\n                        <option disabled value=\"\" className=\"text-textBlack\">\n                            {_t('search.sort')}\n                        </option>\n                        <option value=\"PRICE_ASC\">{_t('search.price.lowToHigh')}</option>\n                        <option value=\"PRICE_DESC\">{_t('search.price.highToLow')}</option>\n                        <option value=\"NAME_ASC\">{_t('search.name.ascending')}</option>\n                        <option value=\"NAME_DESC\">{_t('search.name.descending')}</option>\n                        <option value=\"STOCK_ASC\">{_t('search.stock.ascending')}</option>\n                        <option value=\"STOCK_DESC\">{_t('search.stock.descending')}</option>\n                    </select>\n                </label>\n                <PriceRangeFilter min={price.min} max={price.max} formRef={formRef} />\n                <AttributeFilter attributes={grouped} />\n            </Form>\n            {transition.state === 'submitting' ? (\n                <p>{_t('loading')}...</p>\n            ) : (\n                <button onClick={() => navigate(location.pathname)}>{_t('search.removeAllFilters')}</button>\n            )}\n        </>\n    );\n};\n", "import { useSubmit } from '@remix-run/react';\n\nexport default () => {\n    return useSubmit();\n};\n", "'use client';\nimport { useRef, useState } from 'react';\nimport Slider from 'rc-slider';\nimport { useAppContext } from '../../app-context/provider';\nimport { Price } from '../../lib/pricing/pricing-component';\n\nexport const PriceRangeFilter: React.FC<{ min: number; max: number; formRef: any | null }> = ({\n    min,\n    max,\n    formRef,\n}) => {\n    const { state: contextState, _t } = useAppContext();\n    const [showSlider, setShowSlider] = useState(false);\n    const [priceValue, setPriceValue] = useState({ min, max });\n    function onRangeChange(newValue: any) {\n        setPriceValue({ min: newValue[0], max: newValue[1] });\n    }\n    const minInput = useRef<HTMLInputElement>(null);\n    const maxInput = useRef<HTMLInputElement>(null);\n\n    function onRangeDone(newValue: any) {\n        minInput.current!.value = newValue[0];\n        maxInput.current!.value = newValue[1];\n        formRef.current.submit();\n    }\n\n    return (\n        <div className=\"relative bg-grey filter-container rounded-md text-md w-60 font-bold hover:cursor-pointer\">\n            <input type={'hidden'} name=\"min\" defaultValue={min} ref={minInput} />\n            <input type={'hidden'} name=\"max\" defaultValue={max} ref={maxInput} />\n\n            <p onClick={() => setShowSlider(!showSlider)} className=\"text-textBlack px-4 py-2\">\n                {_t('search.price.range')}\n            </p>\n            {showSlider && (\n                <div className=\"absolute w-full bg-grey  px-4 py-2\">\n                    <Slider\n                        range\n                        min={min}\n                        max={max}\n                        defaultValue={[priceValue.min, priceValue.max]}\n                        allowCross={false}\n                        onChange={onRangeChange}\n                        onAfterChange={onRangeDone}\n                        marks={{}}\n                        handleStyle={{\n                            backgroundColor: '#000',\n                            border: '1px solid #000',\n                        }}\n                        trackStyle={{\n                            backgroundColor: '#000',\n                        }}\n                    />\n                    <div className=\"flex justify-between mt-2\">\n                        <p className=\"text-sm\">\n                            <Price currencyCode={contextState.currency.code}>{priceValue.min}</Price>\n                        </p>\n                        <p className=\"text-sm\">\n                            <Price currencyCode={contextState.currency.code}>{priceValue.max}</Price>\n                        </p>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n", "import { useState } from 'react';\nimport filterIcon from '~/assets/filterIcon.svg';\nimport useSearchParams from '~/bridge/ui/useSearchParams';\nimport { useAppContext } from '../../app-context/provider';\n\nexport const AttributeFilter: React.FC<{ attributes: any; handleChange?: Function }> = ({\n    attributes,\n    handleChange,\n}) => {\n    const [show, setShow] = useState(false);\n    const { _t } = useAppContext();\n    const [searchParams] = useSearchParams();\n    const selectedAttributes = searchParams?.getAll('attr');\n\n    return (\n        <>\n            {Object.keys(attributes).length > 0 && (\n                <div>\n                    <div\n                        className=\"relative flex justify-between items-center w-60 bg-grey py-2 px-6 rounded-md hover:cursor-pointer\"\n                        onClick={() => setShow(!show)}\n                    >\n                        <p className=\"text-md font-bold\">{_t('search.filterByAttributes')}</p>\n                        <img src={filterIcon} alt=\"\" />\n                    </div>\n                    {show && (\n                        <div className=\"absolute w-60 z-50\">\n                            {Object.keys(attributes).map((key) => (\n                                <div key={key} className=\"bg-grey px-5 py-2 border-bottom-2\">\n                                    <p className=\"font-semibold\">{key}</p>\n                                    {attributes[key].map((item: any, index: number) => (\n                                        <div key={index} className=\"flex items-center gap-1\">\n                                            <input\n                                                type=\"checkbox\"\n                                                value={`${key}_${item.value}`}\n                                                name=\"attr\"\n                                                defaultChecked={selectedAttributes?.includes(`${key}_${item.value}`)}\n                                                onChange={(e) => handleChange && handleChange(e)}\n                                            />\n                                            <label htmlFor={item.value}>{item.value}</label>\n                                        </div>\n                                    ))}\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            )}\n        </>\n    );\n};\n", "import { useSearchParams } from '@remix-run/react';\n\nexport default () => {\n    return useSearchParams();\n};\n", "'use client';\n\nimport React from 'react';\n\nimport Form from '~/bridge/ui/Form';\n\nexport const Filter: React.FC<{ aggregations: any }> = ({ aggregations }) => {\n    return (\n        <div className=\"flex gap-5 mb-10 flex-wrap items-center justify-start\">\n            <Form aggregations={aggregations} />\n        </div>\n    );\n};\n", "'use client';\nimport { useState } from 'react';\nimport { useAppContext } from '../../app-context/provider';\nimport { Product } from '../../components/item/product';\nimport { ProductSlim } from '~/use-cases/contracts/Product';\n\nexport const FilteredProducts: React.FC<{ products: ProductSlim[] }> = ({ products }) => {\n    let [checked, setChecked] = useState(true);\n    const { _t } = useAppContext();\n    const displayableProducts = checked ? products : products.filter((product) => product.variant.isDefault === true);\n    return (\n        <div className=\"mt-10\">\n            <div className=\"flex justify-between items-center\">\n                <h2 className=\"font-medium text-md my-5\">{_t('search.foundResults', { count: products?.length })}</h2>\n                {products?.length > 0 && (\n                    <div className=\"flex items-center gap-3\">\n                        <span className=\"font-medium text-md my-5\">{_t('search.showVariants')}</span>\n                        <label className=\"relative inline-block w-[46px] h-[24px]\">\n                            <input\n                                type=\"checkbox\"\n                                className=\"opacity-0 h-0 w-0\"\n                                onChange={(e) => setChecked(e.target.checked)}\n                                defaultChecked={checked}\n                            />\n                            <span className=\"slider\"></span>\n                        </label>\n                    </div>\n                )}\n            </div>\n\n            <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6\">\n                {displayableProducts?.map((product, index) => (\n                    <Product key={index} item={product} />\n                ))}\n            </div>\n        </div>\n    );\n};\n", "import { GridCell, GridRenderer, GridRenderingType, GridRow } from '@crystallize/reactjs-components';\nimport React from 'react';\nimport { GenericItem } from './generic-item';\nimport { GenericTileView } from './generic-tile-view';\nimport { Item, ItemComponentMapping, Tile, TileViewComponentMapping, TileViewWrapperOptions } from './types';\nimport { Video } from '@crystallize/reactjs-components';\nimport { Image } from '@crystallize/reactjs-components';\n\nexport const Grid: React.FC<{\n    grid: {\n        rows: GridRow[];\n    };\n    tileViewComponentMapping: TileViewComponentMapping;\n    itemComponentMapping: ItemComponentMapping;\n    type?: GridRenderingType;\n    style?: React.CSSProperties;\n    styleForCell?: (cell: GridCell, styles: React.CSSProperties) => React.CSSProperties;\n    options?: TileViewWrapperOptions;\n}> = ({\n    grid,\n    tileViewComponentMapping,\n    itemComponentMapping,\n    type = GridRenderingType.RowCol,\n    options,\n    style,\n    styleForCell,\n}) => {\n    return (\n        <GridRenderer\n            grid={grid}\n            type={type}\n            styleForCell={styleForCell}\n            style={style}\n            cellComponent={({ cell, dimensions, children }) => {\n                const cellItem: Tile | Item = cell?.item;\n\n                if (!cellItem) {\n                    return null;\n                }\n                const tile = normalizeTile(cellItem);\n                if (tile?.view) {\n                    const Component = tileViewComponentMapping[tile.view] || GenericTileView;\n                    return (\n                        <Tile tile={tile} options={options}>\n                            <Component tile={tile} options={{ dimensions, layout: cell.layout }}>\n                                {children as any}\n                            </Component>\n                        </Tile>\n                    );\n                }\n                const Component = itemComponentMapping[cellItem.type.toLowerCase()] || GenericItem;\n                return (\n                    <div style={options?.style}>\n                        <Component item={cellItem} options={{ dimensions, layout: cell.layout }}>\n                            {children as any}\n                        </Component>\n                    </div>\n                );\n            }}\n        />\n    );\n};\n\nconst Tile: React.FC<{\n    tile: Tile | Item;\n    children: React.ReactNode;\n    options?: TileViewWrapperOptions;\n}> = ({ tile, children, options }) => {\n    let backgroundElement = null;\n    const { background } = tile;\n    if (background.images && background.images.length > 0) {\n        backgroundElement = (\n            <div className=\"crystallize-background-image\" style={options?.background?.style}>\n                <Image\n                    {...background.images[0]}\n                    {...options?.background?.imageProps}\n                    size=\"100vw\"\n                    fallbackAlt={tile.title}\n                />\n            </div>\n        );\n    }\n    if (background.videos && background.videos.length > 0) {\n        backgroundElement = (\n            <div className=\"crystallize-background-video\" style={options?.background?.style}>\n                <Video\n                    {...background.videos[0]}\n                    {...options?.background?.imageProps}\n                    autoPlay\n                    loop\n                    muted\n                    controls={false}\n                />\n            </div>\n        );\n    }\n    return (\n        <div\n            className={`crystallize-tile crystallize-tile-view-${tile.view} ${\n                tile.cssPreset ? 'crystallize-tile-preset-' + tile.cssPreset : ''\n            }`}\n            style={{\n                ...options?.style,\n                background: tile.styling?.background?.color ?? null,\n                color: tile.styling?.font?.color ?? null,\n                // fontSize: tile.styling?.font?.size ?? null,\n            }}\n        >\n            {backgroundElement}\n            <div style={{ width: '100%', zIndex: 20 }}>{children}</div>\n        </div>\n    );\n};\n\nconst componentContent = (cellItem: any, id: string, fallbackValue: any = undefined): any | undefined => {\n    const component = cellItem.components.find((component: any) => component.id === id);\n    return component?.content || fallbackValue;\n};\n\nconst componentChoiceContent = (\n    cellItem: any,\n    id: string,\n    choiceId: string,\n    fallbackValue: any = undefined,\n): any | undefined => {\n    const component = cellItem.components.find((component: any) => component.id === id);\n    return component?.content?.selectedComponent?.content[choiceId] || fallbackValue;\n};\n\nconst componentChunkContent = (\n    cellItem: any,\n    id: string,\n    chunkId: string,\n    fallbackValue: any = undefined,\n): any | undefined => {\n    const component = cellItem.components.find((component: any) => component.id === id);\n    const chunk = component?.content?.chunks[0]?.find((chunk: any) => chunk.id === chunkId);\n    return chunk?.content || fallbackValue;\n};\n\nconst normalizeTile = (cellItem: any): Tile | null => {\n    const components = cellItem.components;\n    if (!components) {\n        return null;\n    }\n    const styling = componentChunkContent(cellItem, 'styling', 'properties', [])?.sections?.reduce(\n        (result: any, section: any) => {\n            const sectionName = section.title.toLowerCase();\n            section.properties.forEach((property: any) => {\n                if (!result[sectionName]) {\n                    result[sectionName] = {};\n                }\n                result[sectionName][property.key.toLowerCase()] = property.value;\n            });\n            return result;\n        },\n        {},\n    );\n\n    return {\n        view: componentContent(cellItem, 'view')?.options[0]?.value.toLowerCase(),\n        title: componentContent(cellItem, 'title')?.text,\n        description: componentContent(cellItem, 'description')?.json,\n        content: {\n            images: componentChoiceContent(cellItem, 'content', 'images') || undefined,\n            videos: componentChoiceContent(cellItem, 'content', 'videos') || undefined,\n            items: componentChoiceContent(cellItem, 'content', 'items') || undefined,\n        },\n        ctas:\n            componentContent(cellItem, 'ctas')?.chunks.map((cta: any) => {\n                return {\n                    text: cta[0].content?.text,\n                    link: cta[1].content?.text,\n                };\n            }) || [],\n        background: {\n            images: componentChoiceContent(cellItem, 'background', 'images') || undefined,\n            videos: componentChoiceContent(cellItem, 'background', 'videos') || undefined,\n        },\n        styling,\n        isFullWidth: componentChunkContent(cellItem, 'styling', 'use-full-width')?.value || false,\n        cssPreset: componentChunkContent(cellItem, 'styling', 'css-preset')?.options?.[0]?.key?.toLowerCase(),\n    };\n};\n", "import { ItemViewComponentProps } from '../../lib/grid-tile/types';\n\nexport const GenericItem: React.FC<ItemViewComponentProps> = ({ item }) => {\n    return (\n        <div className={`crystallize-generic-item`}>\n            <a href={item.path}>{item.name ?? ''}</a>\n        </div>\n    );\n};\n", "import { Video } from '@crystallize/reactjs-components';\nimport { Image } from '@crystallize/reactjs-components';\nimport { TileViewComponentProps } from '../../lib/grid-tile/types';\n\nexport const GenericTileView: React.FC<TileViewComponentProps> = ({ tile, options }) => {\n    const { title, description, content, ctas, styling } = tile;\n\n    return (\n        <div\n            className={`crystallize-generic-tile-view view-${tile.view}`}\n            style={{ backgroundColor: styling?.background.color }}\n        >\n            <div className=\"crystallize-generic-tile-view-header\">\n                {title && <h2>{title}</h2>}\n                {description && <p>{description}</p>}\n            </div>\n            <div className=\"crystallize-generic-tile-view-body\">\n                {content.images && content.images.length > 0 && <GenericTileViewWithImage image={content.images[0]} />}\n                {content.videos && content.videos.length > 0 && <GenericTileViewWithVideo video={content.videos[0]} />}\n                {content.items && content.items.length > 0 && <GenericTileViewWithItems items={content.items} />}\n            </div>\n\n            {ctas && ctas.length > 0 && (\n                <div className=\"crystallize-generic-tile-view-ctas\">\n                    {ctas.map((cta) => (\n                        <button className=\"crystallize-generic-tile-view-cta\" key={cta.link}>\n                            <a href={cta.link}>{cta.text}</a>\n                        </button>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport const GenericTileViewWithItems: React.FC<{ items: any[] }> = ({ items }) => {\n    return (\n        <div className=\"crystallize-generic-tile-view-body-items\">\n            {items.map((item: any, index: number) => {\n                return <GenericTileViewWithEmbed item={item} key={index} />;\n            })}\n        </div>\n    );\n};\n\nexport const GenericTileViewWithEmbed: React.FC<{ item: any }> = ({ item }) => {\n    return (\n        <div className=\"crystallize-generic-tile-view-item\">\n            <a href={item.path}>{item.name ?? ''}</a>\n        </div>\n    );\n};\n\nexport const GenericTileViewWithImage: React.FC<{ image: any }> = ({ image }) => {\n    return (\n        <div className=\"crystallize-generic-tile-view-image \">\n            <Image {...image} sizes=\"(max-width: 500px) 300px, 700px\" loading=\"lazy\" />\n        </div>\n    );\n};\n\nexport const GenericTileViewWithVideo: React.FC<{ video: any }> = ({ video }) => {\n    return (\n        <div className=\"crystallize-generic-tile-view-video\">\n            <Video {...video} />\n        </div>\n    );\n};\n", "import { Image } from '@crystallize/reactjs-components';\nimport { TileViewComponentProps } from '../../../lib/grid-tile/types';\nimport { LinkRenderer } from '../../../lib/grid-tile/linkRenderer';\nimport { ContentTransformer, Video } from '@crystallize/reactjs-components';\n\nexport const Banner: React.FC<TileViewComponentProps> = ({ tile }) => {\n    const { title, description, ctas, isFullWidth, content, styling } = tile;\n    const { images, videos } = content;\n    const { font, button } = styling || {};\n\n    return (\n        <div\n            className={` flex md:flex-row flex-col  w-full mx-auto ${\n                isFullWidth ? 'px-8 lg:px-10 max-w-[1600px] w-full items-center pt-10  md:py-0 ' : 'pl-10 pt-20'\n            }`}\n        >\n            <div\n                className={`${\n                    !images?.length ? 'py-40' : isFullWidth ? 'md:w-1/2' : 'md:w-2/5'\n                } items-center pr-8 flex-column relative z-10 `}\n            >\n                {title && (\n                    <h1\n                        className={`text-[1em] leading-[1em] font-bold mb-3`}\n                        style={{ fontSize: font ? font.size : '2rem' }}\n                    >\n                        {title}\n                    </h1>\n                )}\n                {description && (\n                    <div className={`mt-2 mb-5 max-w-[400px] leading-[1.6em]`}>\n                        <ContentTransformer json={description} />\n                    </div>\n                )}\n                {ctas &&\n                    ctas.map((cta) => (\n                        <button\n                            className=\"px-8 py-4 rounded font-medium mr-2 mb-8\"\n                            key={cta.text}\n                            style={{\n                                color: button?.color ? button.color : '#fff',\n                                backgroundColor: button?.['background color'] ? button['background color'] : '#000',\n                                fontSize: button?.['font size'] ? button['font size'] : '1rem',\n                            }}\n                        >\n                            {cta.link ? <LinkRenderer link={cta.link} text={cta.text} /> : cta.text}\n                        </button>\n                    ))}\n            </div>\n            {images && images.length > 0 && (\n                <div className=\"self-end md:w-8/12 w-full pt-10 img-container img-contain md:py-0\">\n                    <Image\n                        {...images[0]}\n                        sizes=\"(max-width: 500px) 300px, 700px\"\n                        loading=\"lazy\"\n                        className=\"max-w-none w-full\"\n                    />\n                </div>\n            )}\n            {videos && videos.length > 0 && (\n                <div className=\"md:w-8/12 w-full img-container img-contain md:py-0\">\n                    <Video {...videos[0]} thumbnailProps={{ sizes: '(max-width: 700px) 90vw, 700px' }} />\n                </div>\n            )}\n        </div>\n    );\n};\n", "import Link from '~/bridge/ui/Link';\n\nexport const LinkRenderer: React.FC<{\n    link: string;\n    text: string;\n}> = ({ link, text }) => {\n    return link.startsWith('http') ? (\n        <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {text}\n        </a>\n    ) : (\n        <Link to={link}>{text}</Link>\n    );\n};\n", "import { Image } from '@crystallize/reactjs-components';\nimport { TileViewComponentProps } from '../../../lib/grid-tile/types';\nimport { LinkRenderer } from '../../../lib/grid-tile/linkRenderer';\nimport { useAppContext } from '../../../app-context/provider';\nimport Link from '~/bridge/ui/Link';\nimport { ContentTransformer } from '@crystallize/reactjs-components';\n\nexport const Embed: React.FC<TileViewComponentProps> = ({ tile }) => {\n    const { path } = useAppContext();\n    const { title, description, content, ctas } = tile;\n    if (!content.items || content.items.length === 0) {\n        return <p>Nothing has been embedded.</p>;\n    }\n    const firstItem = content.items[0];\n    const firstItemImage = firstItem.components.find((component: any) => component.id === 'media')?.content\n        ?.selectedComponent?.content;\n\n    return (\n        <Link to={path(firstItem.path)} prefetch=\"intent\" className=\"grid min-h-[100%]\">\n            <div className=\"flex flex-col justify-between items-stretch h-full overflow-hidden w-full\">\n                <div className=\"px-10 pt-20 md:h-1/3 \">\n                    {title && <h2 className=\"text-2xl font-bold mb-3\">{title}</h2>}\n                    {description && (\n                        <div className=\"embed-text\">\n                            <ContentTransformer json={description} />\n                        </div>\n                    )}\n                    {ctas &&\n                        ctas.map((cta) => (\n                            <button className=\"bg-ctaBlue px-8 py-4 rounded font-medium\" key={cta.link}>\n                                {cta.link ? <LinkRenderer link={cta.link} text={cta.text} /> : cta.text}\n                            </button>\n                        ))}\n                </div>\n                <div className=\"pl-10 pt-10 max-w-full h-full img-container overflow-hidden rounded-t-l-md img-cover grow\">\n                    <Image\n                        {...firstItemImage?.firstImage}\n                        sizes=\"300px\"\n                        loading=\"lazy\"\n                        className=\"overflow-hidden rounded-tl-md \"\n                    />\n                </div>\n            </div>\n        </Link>\n    );\n};\n", "'use client';\n\nimport { Splide, SplideSlide } from '@splidejs/react-splide';\nimport { TileViewComponentProps } from '../../../lib/grid-tile/types';\nimport { ProductFromCell } from '../../item/product';\nimport { DocumentFromCell } from '../../item/document';\nimport { LinkRenderer } from '../../../lib/grid-tile/linkRenderer';\nimport { ContentTransformer } from '@crystallize/reactjs-components';\n\nconst itemMapping = {\n    product: ProductFromCell,\n    document: DocumentFromCell,\n};\n\nexport const Slider: React.FC<TileViewComponentProps> = ({ tile, options }) => {\n    const { dimensions, layout } = options;\n    let colspan = layout.colspan;\n    const { title, description, content, ctas, styling } = tile;\n    const spansOverAllColumns = layout.colspan === dimensions.cols;\n    const hasBackgroundColor = styling?.background.color;\n    const isFullWidth = tile.isFullWidth;\n    const setInnerPadding = () => {\n        if (!spansOverAllColumns) {\n            return 'pl-10';\n        }\n        if (spansOverAllColumns && !isFullWidth && hasBackgroundColor) {\n            return 'px-10';\n        }\n    };\n\n    return (\n        <div className={`${isFullWidth ? 'px-8 lg:px-10 max-w-[1650px] w-full mx-auto' : 'w-full'}`}>\n            <div className={`pb-10  pt-20 ${setInnerPadding()}`}>\n                {title && <h2 className={`${colspan > 2 ? 'text-3xl' : 'text-2xl'} mb-3 font-bold`}>{title}</h2>}\n                {description && (\n                    <div className={`embed-text ${colspan > 2 ? 'w-2/4' : 'w-5/5'}`}>\n                        <ContentTransformer json={description} />\n                    </div>\n                )}\n                {ctas &&\n                    ctas.map((cta) => (\n                        <button className=\"bg-ctaBlue px-8 py-4 rounded font-medium\" key={cta.link}>\n                            {cta.link ? <LinkRenderer link={cta.link} text={cta.text} /> : cta.text}\n                        </button>\n                    ))}\n            </div>\n\n            <div className={setInnerPadding()}>\n                <Splide\n                    options={{\n                        rewind: true,\n                        perPage: spansOverAllColumns ? 5 : 2,\n                        breakpoints: {\n                            1200: {\n                                perPage: 4,\n                            },\n                            940: {\n                                perPage: 3,\n                            },\n                            480: {\n                                perPage: 2,\n                            },\n                        },\n                        pagination: false,\n                        gap: 10,\n                    }}\n                    className=\"splide \"\n                >\n                    {content.items &&\n                        content.items.map((item: any) => {\n                            const Component = itemMapping[item.type as keyof typeof itemMapping];\n                            return (\n                                <SplideSlide key={item.name} className=\"slide items-stretch pb-10\">\n                                    <Component item={item} />\n                                </SplideSlide>\n                            );\n                        })}\n                </Splide>\n            </div>\n        </div>\n    );\n};\n", "'use client';\n\nimport { Grid as BaseGrid } from '../../lib/grid-tile/grid';\nimport { ProductFromCell } from '../../components/item/product';\nimport { DocumentFromCell } from '../../components/item/document';\nimport { Banner } from '../../components/grid/tiles/banner';\nimport { Embed } from '../../components/grid/tiles/embed';\nimport { Slider } from '../../components/grid/tiles/slider';\nimport { GridCell, GridRenderingType } from '@crystallize/reactjs-components';\nimport { HeroSlider } from './tiles/hero-slider';\n\nconst tileMapping = {\n    banner: Banner,\n    embed: Embed,\n    slider: Slider,\n    heroslider: HeroSlider,\n};\nconst itemMapping = {\n    product: ProductFromCell,\n    document: DocumentFromCell,\n};\n\nexport const Grid: React.FC<{ grid: any }> = ({ grid }) => {\n    if ((grid?.rows?.length || 0) === 0) {\n        return null;\n    }\n    const totalColumns = grid.rows[0].columns.reduce((acc: number, col: any) => acc + col.layout.colspan, 0);\n    const colWidth = Math.round(1530 / totalColumns);\n\n    const styleForCell = (cell: GridCell, styles: React.CSSProperties) => {\n        if (!cell?.item) {\n            return styles;\n        }\n\n        const component = cell.item.components.find((component: any) => component.id === 'styling');\n        if (!component) {\n            return {\n                ...styles,\n                gridColumn: `${cell.layout.colIndex + 2} / span ${cell.layout.colspan}`,\n                gridRow: `${cell.layout.rowIndex + 1} / span ${cell.layout.rowspan}`,\n            };\n        }\n        const isFullWidth = component?.content?.chunks[0]?.find((chunk: any) => chunk.id === 'use-full-width')?.content\n            ?.value;\n\n        if (!isFullWidth) {\n            return {\n                ...styles,\n                gridColumn: `${cell.layout.colIndex + 2} / span ${cell.layout.colspan}`,\n                gridRow: `${cell.layout.rowIndex + 1} / span ${cell.layout.rowspan}`,\n            };\n        }\n\n        return {\n            ...styles,\n            gridColumn: `1 / span ${totalColumns + 2}`,\n            gridRow: `auto / span ${cell.layout.rowspan}`,\n        };\n    };\n\n    return (\n        <div className=\"frntr-grid\">\n            <BaseGrid\n                grid={grid}\n                itemComponentMapping={itemMapping}\n                tileViewComponentMapping={tileMapping}\n                type={GridRenderingType.Div}\n                styleForCell={styleForCell}\n                style={{\n                    gridTemplateColumns: `minmax(15px, 1fr) repeat(${totalColumns}, minmax(0, ${colWidth}px)) minmax(15px, 1fr)`,\n                    gridAutoRows: 'minmax(300px, auto)',\n                }}\n                options={{\n                    background: {\n                        style: {\n                            objectFit: 'cover',\n                        },\n                        imageProps: {\n                            sizes: '(max-width: 500px) 500px, 100vw',\n                            loading: 'lazy',\n                        },\n                    },\n                    style: {\n                        position: 'relative',\n                        width: '100%',\n                        zIndex: 20,\n                        minHeight: '100%',\n                        display: 'flex',\n                        alignItems: 'stretch',\n                        justifyContent: 'stretch',\n                    },\n                }}\n            />\n        </div>\n    );\n};\n", "'use client';\n\nimport { Splide, SplideSlide } from '@splidejs/react-splide';\nimport { TileViewComponentProps } from '../../../lib/grid-tile/types';\nimport { Image } from '@crystallize/reactjs-components';\n\nexport const HeroSlider: React.FC<TileViewComponentProps> = ({ tile }) => {\n    const { content } = tile;\n\n    return (\n        <div className=\"w-full hero-slider\">\n            <Splide\n                options={{\n                    perPage: 1,\n                    autoplay: true,\n                    interval: 4000,\n                    pagination: true,\n                    arrows: false,\n                    gap: 0,\n                }}\n            >\n                {content.images &&\n                    content.images.map((image: any) => {\n                        return (\n                            <SplideSlide key={image.url} className=\"slide\">\n                                <Image\n                                    {...image}\n                                    loading=\"eager\"\n                                    sizes=\"(max-width: 500px) 300px, 700px\"\n                                    className=\"h-[300px] sm:h-[400px] lg:h-[700px] [&>picture>img]:w-full [&>picture>img]:h-full [&>picture>img]:object-cover\"\n                                />\n                            </SplideSlide>\n                        );\n                    })}\n            </Splide>\n        </div>\n    );\n};\n", "import { Filter } from '../components/search';\nimport { FilteredProducts } from '../components/search/filtered-products';\nimport { Grid } from '../components/grid/grid';\nimport { Category } from '../../use-cases/contracts/Category';\nimport { ProductSlim } from '../../use-cases/contracts/Product';\n\nexport default ({\n    data,\n}: {\n    data: {\n        category: Category;\n        products: ProductSlim[];\n        priceRangeAndAttributes: any;\n    };\n}) => {\n    const { category, products, priceRangeAndAttributes } = data;\n\n    return (\n        <>\n            <div className=\"container 2xl px-5 mx-auto w-full\">\n                <h1 className=\"text-3xl font-bold mt-10 mb-4\">{category?.title}</h1>\n                <p className=\"w-3/5 mb-10\">{category?.description}</p>\n            </div>\n            {category?.hero && (\n                <div className=\"w-full mx-auto\">\n                    <Grid grid={category?.hero} />\n                </div>\n            )}\n            <div className={`container 2xl mt-2 px-5 mx-auto w-full ${category?.hero ? 'mt-20 pt-10' : ''}`}>\n                <Filter aggregations={priceRangeAndAttributes} />\n                <FilteredProducts products={products} />\n            </div>\n        </>\n    );\n};\n", "import { ActionFunction, json } from '@remix-run/node';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport purgeKeys from '~/use-cases/http/fastly/purgeKeys';\n\nexport const action: ActionFunction = async ({ request }) => {\n    const requestContext = getContext(request);\n    const { secret: storefront } = await getStoreFront(requestContext.host);\n    // we keep it simple for now and we purge all cache for the tenant identifier\n    const keys = [storefront.config.tenantIdentifier];\n    const keyPurged = await purgeKeys(keys);\n    return json({\n        message: `${Object.keys(keyPurged).length} key(s) soft purged.`,\n        keys: keyPurged,\n    });\n};\n", "export default async (keys: string[]) => {\n    const response = await fetch(`https://api.fastly.com/service/${process.env.FASTLY_SERVICE_ID}/purge`, {\n        method: 'POST',\n        headers: {\n            'fastly-soft-purge': `1`,\n            'Fastly-Key': `${process.env.FASTLY_API_TOKEN}`,\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            'surrogate-key': keys.join(' '),\n        },\n    });\n    return await response.json();\n};\n", "import { HeadersFunction, json, LinksFunction, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\n\nimport splideStyles from '@splidejs/splide/dist/css/themes/splide-default.min.css';\nimport { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { CrystallizeAPI } from '~/use-cases/crystallize/read';\nimport { buildMetas } from '~/use-cases/MicrodataBuilder';\nimport { getContext } from '~/use-cases/http/utils';\nimport { Shop } from '~/use-cases/contracts/Shop';\nimport ShopPage from '~/ui/pages/Shop';\nimport { authenticatedUser } from '~/core/authentication.server';\nimport { marketIdentifiersForUser } from '~/use-cases/marketIdentifiersForUser';\n\nexport const links: LinksFunction = () => {\n    return [{ rel: 'stylesheet', href: splideStyles }];\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n    return buildMetas(data);\n};\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const path = '/shop';\n    const { shared, secret } = await getStoreFront(requestContext.host);\n    const api = CrystallizeAPI({\n        apiClient: secret.apiClient,\n        language: requestContext.language,\n        isPreview: requestContext.isPreview,\n    });\n    const user = await authenticatedUser(request);\n    const shop = await api.fetchShop(path, marketIdentifiersForUser(user));\n\n    return json({ shop }, StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier));\n};\n\nexport default () => {\n    const { shop } = useLoaderData() as { shop: Shop };\n    return <ShopPage shop={shop} />;\n};\n", "'use client';\n\nimport { Product } from '../components/item/product';\nimport { ProductSlim } from '~/use-cases/contracts/Product';\nimport { Splide, SplideSlide } from '@splidejs/react-splide';\n\nexport const CategoryList: React.FC<{ products: ProductSlim[] }> = ({ products }) => {\n    return (\n        <div className=\"my-10 w-full\">\n            <div className=\"w-full\">\n                <Splide\n                    options={{\n                        rewind: true,\n                        perPage: 5,\n                        breakpoints: {\n                            1200: {\n                                perPage: 4,\n                            },\n                            940: {\n                                perPage: 3,\n                            },\n                            480: {\n                                perPage: 2,\n                            },\n                        },\n                        pagination: false,\n                        gap: 10,\n                    }}\n                    className=\"splide \"\n                >\n                    {products?.slice(0, 12)?.map((product) => {\n                        return (\n                            <SplideSlide key={`${product.name}-${product.path}`} className=\"slide items-stretch pb-10\">\n                                <Product item={product} />\n                            </SplideSlide>\n                        );\n                    })}\n                </Splide>\n            </div>\n        </div>\n    );\n};\n", "'use client';\n\nimport { Shop } from '~/use-cases/contracts/Shop';\nimport { useAppContext } from '../app-context/provider';\nimport { CategoryList } from '../components/category-list';\nimport { Grid } from '../components/grid/grid';\nimport { ContentTransformer } from '@crystallize/reactjs-components';\nimport Link from '~/bridge/ui/Link';\n\nexport default ({ shop }: { shop: Shop }) => {\n    const { path, _t } = useAppContext();\n\n    return (\n        <>\n            {shop.hero && (\n                <div className=\"w-full mt-4\">\n                    <Grid grid={shop.hero} />\n                </div>\n            )}\n            <div className=\"2xl container mx-auto px-4 md:px-10\">\n                <div className=\"flex flex-wrap gap-4 pt-20 mb-10  items-center\">\n                    <h2 className=\"font-medium text-md text-md w-full block\">{_t('browse')}</h2>\n                    {shop.categories.map((category) => (\n                        <Link\n                            to={path(category.path)}\n                            prefetch=\"intent\"\n                            className=\"w-auto bg-grey py-2 sm:px-6 px-4 rounded-md sm:text-lg text-md font-bold category-link\"\n                            key={category.name}\n                        >\n                            {category.name}\n                        </Link>\n                    ))}\n                </div>\n                <div>\n                    {shop.categories.map((category) => (\n                        <div className=\"border-t border-[#dfdfdf] py-20\" key={category.path}>\n                            <div className=\"flex  flex-col sm:flex-row sm:items-center justify-between \">\n                                <div className=\"w-3/4 sm:w-2/4 leading-[1.5em]\">\n                                    <h2 className=\"font-bold text-2xl mb-3\">{category.name}</h2>\n                                    <ContentTransformer json={category.description?.json} />\n                                </div>\n                                <Link\n                                    to={path(category.path)}\n                                    prefetch=\"intent\"\n                                    className=\"w-auto bg-grey py-2 px-6 text-center rounded-md text-md font-bold hover:bg-black hover:text-white mt-6 sm:mt-0\"\n                                    key={category.name}\n                                >\n                                    {_t('view')} {category.name.toLowerCase()}\n                                </Link>\n                            </div>\n                            <CategoryList products={category.products} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </>\n    );\n};\n", "import { json, LoaderFunction, HeadersFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport Order from '~/ui/pages/Order';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const { shared } = await getStoreFront(requestContext.host);\n\n    let cartId = requestContext.url.searchParams.get('cartId');\n\n    return json(\n        {\n            orderId: params.id,\n            cartId,\n        },\n\n        StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', ['order' + params.id], shared.config.tenantIdentifier),\n    );\n};\n\nexport default () => {\n    const { orderId, cartId } = useLoaderData();\n    return <Order id={orderId} cartId={cartId} />;\n};\n", "'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useAppContext } from '../app-context/provider';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport { ClientOnly } from '@crystallize/reactjs-hooks';\nimport { OrderDisplay } from '../components/display-order';\nimport { MagickLoginForm } from '../components/checkout-forms/magicklogin';\n\nexport default ({ id, cartId }: { id: string; cartId?: string }) => {\n    const [tryCount, setTryCount] = useState(0);\n    const [order, setOrder] = useState<any | null>(null);\n    const { state: contextState, _t } = useAppContext();\n\n    useEffect(() => {\n        let timeout: ReturnType<typeof setTimeout>;\n        (async () => {\n            try {\n                setOrder(\n                    await ServiceAPI({\n                        language: contextState.language,\n                        serviceApiUrl: contextState.serviceApiUrl,\n                    }).fetchOrder(id, cartId),\n                );\n            } catch (exception) {\n                timeout = setTimeout(() => {\n                    setTryCount(tryCount + 1);\n                }, 500 * tryCount);\n            }\n        })();\n        return () => clearTimeout(timeout);\n    }, [id, tryCount]);\n\n    return (\n        <div className=\"min-h-[70vh] items-center flex lg:w-content mx-auto w-full\">\n            <ClientOnly>\n                <>\n                    {order && <OrderDisplay order={order} />}\n                    {tryCount > 5 && (\n                        <div className=\"mx-auto items-center justify-center flex w-full \">\n                            <MagickLoginForm title=\"Login\" onlyLogin actionTitle=\"Login\" />\n                        </div>\n                    )}\n                    {!order && tryCount <= 5 && (\n                        <div className=\"min-h-[70vh] items-center justify-center flex flow-row max-w-[500px] mx-auto\">\n                            <div className=\"loader mr-3\" />\n                            {_t('order.loadingMessage')}\n                        </div>\n                    )}\n                </>\n            </ClientOnly>\n        </div>\n    );\n};\n", "import { useAppContext } from '../app-context/provider';\nimport { Price } from '../lib/pricing/pricing-component';\n\nexport const OrderDisplay: React.FC<{ order: any }> = ({ order }) => {\n    const { state: contextState, _t } = useAppContext();\n    return (\n        <div className=\"w-3/4 mx-auto\">\n            <div className=\"mt-10\">\n                <h1 className=\"font-bold text-3xl\">{_t('order.confirmation')}</h1>\n                <p className=\"mt-4\">{_t('order.recievedMessage')}</p>\n                <p>\n                    {_t('order.orderId')}: #{order.id}.\n                </p>\n                <div className=\"mt-2\">\n                    {order.cart.map((item: any, index: number) => {\n                        return (\n                            <div key={index} className=\"bg-grey2 px-3 py-2 mb-2 gap-2 flex items-center\">\n                                <div className=\"img-container overflow-hidden rounded-md img-contain w-[50px] h-[70px]\">\n                                    <img src={item.imageUrl} />\n                                </div>\n                                <div className=\"flex w-full justify-between\">\n                                    <div>\n                                        <p className=\"font-semibold\">\n                                            {item.name} x {item.quantity}\n                                        </p>\n                                    </div>\n                                    <p>\n                                        <Price currencyCode={contextState.currency.code}>{item.price.gross}</Price>\n                                    </p>\n                                </div>\n                            </div>\n                        );\n                    })}\n                    <div className=\"flex flex-col gap-4 border-t-2 border-grey4 py-4 items-end px-4 mt-5\">\n                        <div className=\"flex text-grey3 justify-between w-60\">\n                            <p>Net</p>\n                            <p>\n                                <Price currencyCode={contextState.currency.code}>{order.total.net}</Price>\n                            </p>\n                        </div>\n                        <div className=\"flex text-grey3 justify-between w-60\">\n                            <p>{_t('cart.taxAmount')}</p>\n                            <p>\n                                <Price currencyCode={contextState.currency.code}>\n                                    {order.total.gross - order.total.net}\n                                </Price>\n                            </p>\n                        </div>\n                        <div className=\"flex font-bold text-xl justify-between w-60\">\n                            <p>Paid</p>\n                            <p>\n                                <Price currencyCode={contextState.currency.code}>{order.total.gross}</Price>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n", "import { ChangeEvent, FormEvent, useState } from 'react';\nimport { useAppContext } from '../../app-context/provider';\nimport { useAuth } from '../../hooks/useAuth';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport { Input } from '../input';\n\nexport const MagickLoginForm: React.FC<{\n    enabledGuest?: Function;\n    title: string;\n    actionTitle: string;\n    onlyLogin?: boolean;\n}> = ({ enabledGuest, title, actionTitle, onlyLogin = false }) => {\n    const { state: appContextState, path, _t } = useAppContext();\n    const { isAuthenticated, userInfos, logout } = useAuth();\n    const [formData, updateFormData] = useState({\n        firstname: userInfos?.firstname || '',\n        lastname: userInfos?.lastname || '',\n        email: userInfos?.email || '',\n    });\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        updateFormData({\n            ...formData,\n            [event.target.name]: event.target.value.trim(),\n        });\n    };\n    const displayOnlyLogin = onlyLogin || isAuthenticated;\n    const vippsRedirectURI = `${appContextState.serviceApiUrl}/vipps/connect`;\n    const clientId = appContextState.paymentImplementationVariables?.vipps?.CLIENT_ID || '';\n    const scopes = 'email address name phoneNumber';\n    const vippsLoginUrl = `https://${\n        appContextState.paymentImplementationVariables?.vipps?.ORIGIN || 'api.vipps.no'\n    }/access-management-1.0/access/oauth2/auth?client_id=${clientId}&response_type=code&state=crystalGenericState12345&scope=${scopes}&redirect_uri=${vippsRedirectURI}`;\n    return (\n        <div className=\"flex flex-col mt-5 gap-2 w-full sm:min-w-[400px]\">\n            {userInfos?.email && (\n                <div>\n                    <div className=\"bg-grey2 px-4 py-2 rounded\">\n                        <button\n                            className=\"float-right bg-[#000] text-[#fff] px-4 py-2 rounded mt-2\"\n                            onClick={() => logout()}\n                        >\n                            {_t('logout')}\n                        </button>\n                        <p className=\"clear\">\n                            <em>\n                                {_t('hello')} {userInfos?.firstname} {userInfos?.lastname} ({userInfos?.email})\n                            </em>\n                            <br />\n                            {_t('stillYourSession')}\n                        </p>\n                    </div>\n                </div>\n            )}\n            <h1 className=\"font-bold text-2xl\">\n                {title.replace('Register', isAuthenticated ? _t('login') : _t('register'))}\n            </h1>\n            <p className=\"mb-5  text-lg\">{_t('willSendYouMagickLink')}</p>\n            <form\n                onSubmit={async (event: FormEvent<HTMLFormElement>) => {\n                    event.preventDefault();\n                    const api = ServiceAPI({\n                        language: appContextState.language,\n                        serviceApiUrl: appContextState.serviceApiUrl,\n                    });\n                    if (onlyLogin) {\n                        await api.sendMagickLink(formData.email, path('/orders'));\n                    } else {\n                        await api.registerAndSendMagickLink(formData);\n                    }\n                    alert('We sent you a magick link, check your email.');\n                }}\n            >\n                {!displayOnlyLogin && (\n                    <div className=\"grid md:grid-cols-2 grid-cols-1 w-full gap-2\">\n                        <Input\n                            defaultValue={formData.firstname || userInfos?.firstname}\n                            label={_t('address.firstname')}\n                            placeholder=\"Luke\"\n                            name=\"firstname\"\n                            required\n                            onChange={handleChange}\n                        />\n\n                        <Input\n                            defaultValue={formData.lastname || userInfos?.lastname}\n                            placeholder=\"Skywalker\"\n                            label={_t('address.lastname')}\n                            name=\"lastname\"\n                            required\n                            onChange={handleChange}\n                        />\n                    </div>\n                )}\n                <div className=\"mt-2\">\n                    <Input\n                        defaultValue={formData.email || userInfos?.email}\n                        placeholder=\"luke.skywalker@rebellion.inc\"\n                        label={_t('address.email')}\n                        name=\"email\"\n                        required\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"flex flex-row justify-start gap-1 \">\n                    {enabledGuest && (\n                        <button\n                            type=\"button\"\n                            data-testid=\"guest-checkout-button\"\n                            className=\"underline px-5 py-2 ml-2 rounded mt-5 w-full\"\n                            onClick={() => {\n                                if (enabledGuest) {\n                                    enabledGuest();\n                                }\n                            }}\n                        >\n                            {_t('guestCheckout')}\n                        </button>\n                    )}\n                    <button type=\"submit\" className=\"bg-[#000] text-[#fff] px-8 py-4 rounded mt-5 flex-auto\">\n                        {actionTitle.replace('Register', isAuthenticated ? _t('login') : _t('register'))}\n                    </button>\n                    <a\n                        href={vippsLoginUrl}\n                        className=\"flex flex-row flex-auto gap-1 items-center bg-textBlack px-8 py-4 rounded mt-5 relative overflow-hidden text-[#fff] font-bold disabled:opacity-50 disabled:cursor-not-allowed justify-center hover:brightness-95\"\n                    >\n                        <span>{_t('login')}</span>\n                        <svg width=\"64\" height=\"15\" viewBox=\"0 0 64 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                fillRule=\"evenodd\"\n                                clipRule=\"evenodd\"\n                                d=\"M64 4.3784C63.2798 1.63069 61.5314 0.540009 59.1448 0.540009C57.2111 0.540009 54.7843 1.63069 54.7843 4.25716C54.7843 5.95402 55.9566 7.28761 57.8694 7.63118L59.6797 7.95418C60.9142 8.1763 61.2639 8.64111 61.2639 9.26742C61.2639 9.97448 60.5028 10.3785 59.3714 10.3785C57.8904 10.3785 56.9646 9.85324 56.8205 8.37829L54.2082 8.78248C54.6193 11.6309 57.17 12.8029 59.4739 12.8029C61.6547 12.8029 63.9793 11.5501 63.9793 9.02495C63.9793 7.30752 62.9299 6.05534 60.9756 5.6912L58.9805 5.32793C57.8694 5.12594 57.4994 4.58038 57.4994 4.05518C57.4994 3.38838 58.2192 2.9645 59.2067 2.9645C60.4617 2.9645 61.3461 3.38838 61.3873 4.78237L64 4.3784ZM5.925 8.70128L8.6399 0.842871H11.8283L7.09686 12.4994H4.73146L0 0.84309H3.18843L5.925 8.70128ZM22.6083 4.17642C22.6083 5.1056 21.8678 5.75204 21.0036 5.75204C20.1397 5.75204 19.3993 5.1056 19.3993 4.17642C19.3993 3.24702 20.1397 2.60079 21.0036 2.60079C21.8678 2.60079 22.6086 3.24702 22.6086 4.17642H22.6083ZM23.1021 8.29777C22.0321 9.67114 20.9008 10.6206 18.9053 10.6207C16.8693 10.6207 15.285 9.40858 14.0507 7.63097C13.5569 6.90356 12.7958 6.74206 12.2402 7.1259C11.726 7.48961 11.6029 8.25728 12.0757 8.92408C13.783 11.4897 16.1487 12.9844 18.9051 12.9844C21.4357 12.9844 23.4107 11.7725 24.9533 9.75216C25.5291 9.00483 25.5086 8.23715 24.9533 7.81283C24.4388 7.40842 23.6777 7.55044 23.1021 8.29777ZM30.2 6.64094C30.2 9.02494 31.5989 10.2776 33.1625 10.2776C34.6434 10.2776 36.1659 9.10569 36.1659 6.64094C36.1659 4.21645 34.6434 3.04502 33.1828 3.04502C31.5989 3.04502 30.2 4.15605 30.2 6.64094ZM30.2 2.45941V0.862998H27.2996V16.54H30.2V10.964C31.1669 12.2571 32.4217 12.8029 33.8409 12.8029C36.4951 12.8029 39.0868 10.7421 39.0868 6.49978C39.0868 2.43884 36.392 0.540215 34.0879 0.540215C32.257 0.540215 31.0025 1.36829 30.2 2.45941ZM44.1276 6.64094C44.1276 9.02494 45.5262 10.2776 47.0898 10.2776C48.5708 10.2776 50.093 9.10569 50.093 6.64094C50.093 4.21645 48.5708 3.04502 47.1102 3.04502C45.5262 3.04502 44.1273 4.15605 44.1273 6.64094H44.1276ZM44.1276 2.45941V0.862998H44.1273H41.227V16.54H44.1273V10.964C45.0943 12.2571 46.349 12.8029 47.7683 12.8029C50.4222 12.8029 53.0142 10.7421 53.0142 6.49978C53.0142 2.43884 50.3194 0.540215 48.0152 0.540215C46.1843 0.540215 44.9298 1.36829 44.1276 2.45941Z\"\n                                fill=\"white\"\n                            />\n                        </svg>\n                    </a>\n                </div>\n            </form>\n        </div>\n    );\n};\n", "import { useLocalStorage, writeStorage } from '@rehooks/local-storage';\nimport jwtDecode, { JwtPayload } from 'jwt-decode';\nimport { useEffect } from 'react';\nimport useLocation from '~/bridge/ui/useLocation';\nimport useSearchParams from '~/bridge/ui/useSearchParams';\n\nexport function useAuth() {\n    const [token] = useLocalStorage<string>('jwt', '');\n    const [searchParams] = useSearchParams();\n    const location = useLocation();\n\n    useEffect(() => {\n        // Note that we are on the frontend here, and this token is just here to hold some non sensitive data.\n        // Service API has a Cookie (http only and Safe only) that is used to hold a really token.\n        if (searchParams?.has('token')) {\n            const urlToken = searchParams.get('token') as string;\n            //will be resolved when auth is implemented, NextJS is not able to handle this yet\n            //@ts-expect-error\n            searchParams.delete('token');\n            try {\n                const decoded = jwtDecode<JwtPayload>(urlToken);\n                if (decoded) {\n                    if (decoded.sub === 'isSupposedToBeLoggedInOnServiceApi') {\n                        writeStorage('jwt', urlToken);\n                    }\n                }\n            } catch (exception) {\n                console.log(exception);\n            }\n            // force reload here as we're playing with cookies.\n            window.location.href = location.pathname;\n        }\n    });\n\n    let userInfos: any = {};\n    let isAuthenticated = false;\n    try {\n        const decoded = jwtDecode<any>(token);\n        if (decoded && decoded.exp > Date.now() / 1000) {\n            isAuthenticated = true;\n            userInfos = {\n                email: decoded.email,\n                firstname: decoded.firstname,\n                lastname: decoded.lastname,\n            };\n        }\n    } catch (exception) {}\n    return {\n        login: (jwt: string) => {\n            writeStorage('jwt', jwt);\n        },\n        logout: () => {\n            writeStorage('jwt', '');\n        },\n        isAuthenticated,\n        userInfos,\n    };\n}\n", "import { ChangeEventHandler } from 'react';\n\nexport const Input: React.FC<{\n    placeholder: string;\n    defaultValue?: string;\n    value?: string;\n    name: string;\n    onChange: ChangeEventHandler<HTMLInputElement>;\n    label: string;\n    required?: any;\n    disabled?: boolean;\n    type?: string;\n}> = ({ placeholder, defaultValue, value, name, onChange, label, required, disabled = false, type = 'text' }) => {\n    return (\n        <label htmlFor={name} className=\"flex flex-col frntr-input\">\n            <span>\n                {label}\n                {required && '*'}\n            </span>\n            <input\n                defaultValue={defaultValue}\n                type={type}\n                id={name}\n                placeholder={placeholder}\n                name={name}\n                onChange={onChange}\n                required={required}\n                className=\"bg-grey\"\n                disabled={disabled}\n                value={value}\n            />\n        </label>\n    );\n};\n", "import { HttpCacheHeaderTaggerFromLoader } from '~/use-cases/http/cache';\nimport { HeadersFunction, LinksFunction, LoaderFunction } from '@remix-run/node';\nimport { isAuthenticated as isServerSideAuthenticated } from '~/core/authentication.server';\nimport { useLoaderData } from '@remix-run/react';\nimport { privateJson } from '~/core/bridge/privateJson.server';\nimport Checkout from '~/ui/pages/Checkout';\nimport AdyenDefaultTheme from '@adyen/adyen-web/dist/adyen.css';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    return privateJson({\n        isServerSideAuthenticated: await isServerSideAuthenticated(request),\n    });\n};\n\nexport const links: LinksFunction = () => {\n    return [\n        {\n            rel: 'stylesheet',\n            href: AdyenDefaultTheme,\n        },\n    ];\n};\n\nexport default () => {\n    const { isServerSideAuthenticated } = useLoaderData();\n    return <Checkout isServerSideAuthenticated={isServerSideAuthenticated} />;\n};\n", "'use client';\n\nimport { ClientOnly } from '@crystallize/reactjs-hooks';\nimport { useState } from 'react';\nimport { AddressForm } from '../components/checkout-forms/address';\nimport { CheckoutCart } from '../components/checkout-forms/cart';\nimport { MagickLoginForm } from '../components/checkout-forms/magicklogin';\nimport { Payments } from '../components/payments';\nimport { useAuth } from '../hooks/useAuth';\n\nexport default ({ isServerSideAuthenticated }: { isServerSideAuthenticated: boolean }) => {\n    const { isAuthenticated } = useAuth();\n    const [isGuestCheckout, setIsGuestCheckout] = useState(false);\n    const [showPayments, setShowPayments] = useState(false);\n    return (\n        <div className=\"2xl lg:container lg:px-6 px-2 mx-auto min-h-[100vh]\">\n            <div className=\"flex gap-20 lg:flex-row flex-col\">\n                <CheckoutCart />\n                <div className=\"rounded pt-5 lg:px-10 lg:w-3/5 w-full px-3\">\n                    <ClientOnly>\n                        {(() => {\n                            if (!isServerSideAuthenticated || !isAuthenticated) {\n                                return isGuestCheckout ? (\n                                    <>\n                                        <AddressForm\n                                            title=\"Guest Checkout\"\n                                            onValidSubmit={() => setShowPayments(true)}\n                                        />\n                                        {showPayments && <Payments />}\n                                    </>\n                                ) : (\n                                    <MagickLoginForm\n                                        enabledGuest={() => setIsGuestCheckout(true)}\n                                        actionTitle=\"Register\"\n                                        title=\"Register or continue as guest?\"\n                                    />\n                                );\n                            }\n                            return (\n                                <>\n                                    <AddressForm title=\"Address\" onValidSubmit={() => setShowPayments(true)} />\n                                    {showPayments && <Payments />}\n                                </>\n                            );\n                        })()}\n                    </ClientOnly>\n                </div>\n            </div>\n        </div>\n    );\n};\n", "import { ChangeEvent, useState } from 'react';\nimport { useLocalStorage, writeStorage } from '@rehooks/local-storage';\nimport { Input } from '../../components/input';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useAppContext } from '../../app-context/provider';\nimport { Customer } from '~/use-cases/contracts/Customer';\n\nexport const AddressForm: React.FC<{ title: string; onValidSubmit: Function }> = ({ title, onValidSubmit }) => {\n    const [isReadonly, setToReadonly] = useState(false);\n    const { _t } = useAppContext();\n    const { isAuthenticated, userInfos } = useAuth();\n    const [customer] = useLocalStorage<Partial<Customer>>('customer', {\n        email: userInfos?.email,\n        firstname: userInfos?.firstname,\n        lastname: userInfos?.lastname,\n    });\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        writeStorage('customer', {\n            ...customer,\n            [event.target.name]: event.target.value.trim(),\n        });\n    };\n\n    return (\n        <div className=\"flex flex-col gap-3\">\n            <h1 className=\"font-bold text-2xl mt-5 mb-3\">{title}</h1>\n            {isAuthenticated && (\n                <p>\n                    {_t('hello')} {userInfos?.firstname} {userInfos?.lastname} (<strong>{userInfos?.email}</strong>),\n                </p>\n            )}\n            <form\n                onSubmit={(event) => {\n                    event.preventDefault();\n                    setToReadonly(true);\n                    onValidSubmit();\n                    return false;\n                }}\n            >\n                <div className=\"grid grid-cols-2 gap-3\">\n                    <Input\n                        defaultValue={customer.firstname || userInfos?.firstname}\n                        placeholder={'Frodo'}\n                        label={_t('address.firstname')}\n                        name=\"firstname\"\n                        required\n                        onChange={handleChange}\n                        disabled={isReadonly}\n                    />\n\n                    <Input\n                        defaultValue={customer.lastname || userInfos?.lastname}\n                        placeholder={'Baggins'}\n                        label={_t('address.lastname')}\n                        name=\"lastname\"\n                        required\n                        onChange={handleChange}\n                        disabled={isReadonly}\n                    />\n                </div>\n                <div className=\"mt-3\">\n                    <Input\n                        defaultValue={customer.email || userInfos?.email}\n                        label={_t('address.email')}\n                        placeholder={'Frodo.ringmaster@shireclub.com'}\n                        name=\"email\"\n                        required\n                        type=\"email\"\n                        onChange={handleChange}\n                        disabled={isReadonly}\n                    />\n                </div>\n                <div className=\"mt-3\">\n                    <Input\n                        defaultValue={customer.streetAddress}\n                        label={_t('address.streetAddress')}\n                        placeholder={'6th hole from the Brandybuck Family'}\n                        name=\"streetAddress\"\n                        required\n                        onChange={handleChange}\n                        disabled={isReadonly}\n                    />\n                </div>\n                <div className=\"grid grid-cols-3 gap-3 mt-3\">\n                    <Input\n                        defaultValue={customer.country}\n                        label={_t('address.country')}\n                        placeholder={'Middle Earth'}\n                        name=\"country\"\n                        required\n                        onChange={handleChange}\n                        disabled={isReadonly}\n                    />\n                    <Input\n                        defaultValue={customer.city}\n                        label={_t('address.city')}\n                        placeholder={'Shire'}\n                        name=\"city\"\n                        required\n                        onChange={handleChange}\n                        disabled={isReadonly}\n                    />\n                    <Input\n                        defaultValue={customer.zipCode}\n                        label={_t('address.zipCode')}\n                        placeholder={'3130'}\n                        name=\"zipCode\"\n                        required\n                        onChange={handleChange}\n                        disabled={isReadonly}\n                    />\n                </div>\n                <div className=\"mt-3\">\n                    <Input\n                        defaultValue={customer.additionalInfo}\n                        label={_t('address.additionalInfo')}\n                        placeholder={'Anything we should keep in mind before dispatching your order?'}\n                        name=\"additionalInfo\"\n                        onChange={handleChange}\n                        disabled={isReadonly}\n                    />\n                </div>\n                {!isReadonly && (\n                    <button\n                        data-testid=\"checkout-next-step-button\"\n                        className=\"bg-black text-white rounded-md px-6 py-3 mt-5 float-right\"\n                        disabled={isReadonly}\n                        type=\"submit\"\n                    >\n                        {_t('address.next')}\n                    </button>\n                )}\n            </form>\n        </div>\n    );\n};\n", "import { useRemoteCart } from '../../hooks/useRemoteCart';\nimport { Image } from '@crystallize/reactjs-components';\nimport { useAppContext } from '../../app-context/provider';\nimport { Price } from '../../lib/pricing/pricing-component';\nimport { CartItemPrice } from '../price';\nimport { useLocalCart } from '../../hooks/useLocalCart';\nimport { Price as CrystallizePrice } from '../../lib/pricing/pricing-component';\nimport { ClientOnly } from '@crystallize/reactjs-hooks';\nimport { Voucher } from '~/use-cases/contracts/Voucher';\n\nexport const CheckoutCart: React.FC = () => {\n    const { remoteCart } = useRemoteCart();\n    const { cart, total } = remoteCart?.cart || { cart: null, total: null };\n    const { savings } = remoteCart?.extra?.discounts || {\n        lots: null,\n        savings: null,\n    };\n    const { state: contextState, _t } = useAppContext();\n    const voucher = remoteCart?.extra?.voucher as Voucher | undefined;\n    return (\n        <div className=\"lg:w-2/5 w-full\">\n            <h1 className=\"font-bold text-2xl mt-10 mb-5\">{_t('cart.yourCart')}</h1>\n            {!cart && <OptimisticHydratedCart />}\n            {cart &&\n                cart.items.map((item: any, index: number) => {\n                    const saving = savings[item.variant.sku]?.quantity > 0 ? savings[item.variant.sku] : null;\n                    return (\n                        <div\n                            key={index}\n                            className=\"mt-2 min-h-[60px] rounded-md flex justify-between bg-grey2 p-2 items-center\"\n                        >\n                            <div className=\"flex cart-item gap-3 items-center\">\n                                <div className=\"img-container img-contain w-[60px] h-[60px]\">\n                                    <Image\n                                        {...item?.variant.firstImage}\n                                        sizes=\"100px\"\n                                        fallbackAlt={item.variant.name}\n                                    />\n                                </div>\n                                <div className=\"flex flex-col\">\n                                    <p className=\"text-md font-regular w-full\">\n                                        {item.variant.name} x {item.quantity}\n                                    </p>\n                                    <CartItemPrice item={item} saving={saving} />\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n            {total && (\n                <div className=\"flex flex-col gap-1  py-4 items-end\">\n                    <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                        <p>{_t('cart.discount')}</p>\n                        <p>\n                            <Price currencyCode={contextState.currency.code}>\n                                {total.discounts.reduce((memo: number, discount: any) => {\n                                    return memo + discount?.amount || 0;\n                                }, 0)}\n                            </Price>\n                        </p>\n                    </div>\n                    {voucher && voucher.code !== '' && (\n                        <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                            <p>{_t('cart.voucherCode')}</p>\n                            <span>{voucher.code}</span>\n                        </div>\n                    )}\n                    <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                        <p>{_t('cart.taxAmount')}</p>\n                        <p>\n                            <Price currencyCode={contextState.currency.code}>{total.taxAmount}</Price>\n                        </p>\n                    </div>\n                    <div className=\"flex font-bold mt-2 text-lg justify-between w-60\">\n                        <p>{_t('cart.toPay')}</p>\n                        <p>\n                            <Price currencyCode={contextState.currency.code}>{total.gross}</Price>\n                        </p>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport const OptimisticHydratedCart: React.FC = () => {\n    const { cart: cart } = useLocalCart();\n    const { state: contextState, _t } = useAppContext();\n    let total = 0;\n    return (\n        <ClientOnly>\n            <>\n                {Object.keys(cart.items).map((sku: string, index: number) => {\n                    const item = cart.items[sku as keyof typeof cart];\n                    total += item.quantity * item.price;\n                    return (\n                        <div\n                            key={index}\n                            className=\"mt-2 min-h-[60px] rounded-md flex justify-between bg-grey2 p-2 items-center\"\n                        >\n                            <div className=\"flex cart-item gap-3 items-center\">\n                                <div className=\"img-container img-contain w-[60px] h-[60px]\">\n                                    <Image />\n                                </div>\n                                <div className=\"flex flex-col\">\n                                    <p className=\"text-md font-regular w-full\">{item.name}</p>\n                                    <CrystallizePrice currencyCode={contextState.currency.code}>\n                                        {item.price}\n                                    </CrystallizePrice>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n                <div className=\"flex flex-col gap-1  py-4 items-end\">\n                    <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                        <p>{_t('cart.discount')}</p>\n                        <div className=\"loader\" />\n                    </div>\n                    <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                        <p>{_t('cart.taxAmount')}</p>\n                        <div className=\"loader\" />\n                    </div>\n                    <div className=\"flex font-bold mt-2 text-lg justify-between w-60\">\n                        <p>{_t('cart.toPay')}</p>\n                        <p>\n                            <CrystallizePrice currencyCode={contextState.currency.code}>{total}</CrystallizePrice>\n                        </p>\n                    </div>\n                </div>\n            </>\n        </ClientOnly>\n    );\n};\n", "import React, { useState } from 'react';\nimport { useAppContext } from '../../app-context/provider';\nimport { useLocalCart } from '../../hooks/useLocalCart';\nimport { CrystalCard, CrystalCardButton } from './crystal/card';\nimport { CrystalCoin, CrystalCoinButton } from './crystal/coin';\nimport { Klarna, KlarnaButton } from './klarna';\nimport { Montonio, MontonioButton } from './montonio';\nimport { QuickPayLink, QuickPayLinkButton } from './quickpaylink';\nimport { RazorPay, RazorPayButton } from './razorpay';\nimport { Stripe, StripeButton } from './stripe';\nimport { AdyenCheckoutForm, AdyenButton } from './adyen';\nimport { Vipps, VippsButton } from './vipps';\nimport { CloneCartBtn } from '../clone-cart-button';\n\nexport const Payments: React.FC = () => {\n    const { state, _t } = useAppContext();\n    const { cart, isImmutable, clone: cartClone } = useLocalCart();\n\n    const paymentMethods = state.crystalPayments;\n    const paymentMethodImplementations = {\n        crystalCoin: {\n            name: 'Crystal Coin',\n            component: CrystalCoin,\n            button: CrystalCoinButton,\n            renderOnLoad: true,\n            enabled: state.paymentImplementations.includes('crystal') && paymentMethods.includes('coin'),\n        },\n        crystalCard: {\n            name: 'Crystal Card',\n            component: CrystalCard,\n            button: CrystalCardButton,\n            renderOnLoad: false,\n            enabled: state.paymentImplementations.includes('crystal') && paymentMethods.includes('card'),\n        },\n        vipps: {\n            name: 'Vipps',\n            component: Vipps,\n            button: VippsButton,\n            renderOnLoad: false,\n            enabled: state.paymentImplementations.includes('vipps'),\n        },\n        montonio: {\n            name: 'Montonio',\n            component: Montonio,\n            button: MontonioButton,\n            renderOnLoad: false,\n            enabled: state.paymentImplementations.includes('montonio'),\n        },\n        quickPayLink: {\n            name: 'QuickPay',\n            component: QuickPayLink,\n            button: QuickPayLinkButton,\n            renderOnLoad: true,\n            enabled: state.paymentImplementations.includes('quickpay'),\n        },\n        stripe: {\n            name: 'Stripe',\n            component: Stripe,\n            button: StripeButton,\n            renderOnLoad: false,\n            enabled: state.paymentImplementations.includes('stripe'),\n        },\n        klarna: {\n            name: 'Klarna',\n            component: Klarna,\n            button: KlarnaButton,\n            renderOnLoad: false,\n            enabled: state.paymentImplementations.includes('klarna'),\n        },\n        razorPay: {\n            name: 'RazorPay',\n            component: RazorPay,\n            button: RazorPayButton,\n            renderOnLoad: false,\n            enabled: state.paymentImplementations.includes('razorpay'),\n        },\n        adyen: {\n            name: 'Adyen',\n            component: AdyenCheckoutForm,\n            button: AdyenButton,\n            renderOnLoad: false,\n            enabled: state.paymentImplementations.includes('adyen'),\n        },\n    };\n    const [selectedPaymentMethodImplementation, setSelectedPaymentMethodImplementation] = useState<string | null>(null);\n\n    if (selectedPaymentMethodImplementation) {\n        const implementation =\n            paymentMethodImplementations[\n                selectedPaymentMethodImplementation as keyof typeof paymentMethodImplementations\n            ];\n        return (\n            <div className=\"payment-method mb-4 bg-grey mt-5 rounded p-6 \">\n                <implementation.component />\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <h2 className=\"font-bold text-2xl mt-5 mb-1\">{_t('payment.title')}</h2>\n            {isImmutable() && <CloneCartBtn />}\n            <br />\n\n            {!cart.cartId && <div className=\"loader\" />}\n            {!isImmutable() && (\n                <div className=\"grid grid-cols-1 gap-1\">\n                    {Object.keys(paymentMethodImplementations).map((implementationKey) => {\n                        const implementation =\n                            paymentMethodImplementations[\n                                implementationKey as keyof typeof paymentMethodImplementations\n                            ];\n                        if (!implementation.enabled) {\n                            return null;\n                        }\n                        if (implementation.renderOnLoad) {\n                            return <implementation.component key={implementationKey} />;\n                        }\n                        return (\n                            <implementation.button\n                                key={implementationKey}\n                                onClick={() => setSelectedPaymentMethodImplementation(implementationKey)}\n                            />\n                        );\n                    })}\n                </div>\n            )}\n        </>\n    );\n};\n", "import { useLocalCart } from '../../../hooks/useLocalCart';\nimport { useState } from 'react';\nimport { useLocalStorage } from '@rehooks/local-storage';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport { useAppContext } from '../../../app-context/provider';\nimport logo from '~/assets/crystalcard-logo.svg';\nimport useNavigate from '~/bridge/ui/useNavigate';\nimport { Customer } from '~/use-cases/contracts/Customer';\n\nexport const CrystalCardButton: React.FC<{ paying?: boolean; onClick?: () => Promise<void> | void }> = ({\n    paying = false,\n    onClick,\n}) => {\n    const { _t } = useAppContext();\n    return (\n        <button\n            className=\"w-full h-[70px] text-white mt-2 rounded-md px-8 bg-grey flex flex-row justify-between items-center border border-transparent hover:border-black\"\n            type={onClick ? 'button' : 'submit'}\n            disabled={paying}\n            onClick={onClick ? onClick : undefined}\n        >\n            <img className=\" h-[35px]\" src={`${logo}`} height=\"35\" alt=\"Crystal Card\" />\n            <span className=\"text-textBlack\">{paying ? _t('payment.processing') : ''}</span>\n            <span className=\"text-black text-2xl\"> \u203A</span>\n        </button>\n    );\n};\n\nexport const CrystalCard: React.FC = () => {\n    const { cart, isEmpty, empty } = useLocalCart();\n    const { state, path, _t } = useAppContext();\n    const [paying, setPaying] = useState(false);\n    const [customer] = useLocalStorage<Partial<Customer>>('customer', {});\n    const navigate = useNavigate();\n    if (isEmpty()) {\n        return null;\n    }\n\n    return (\n        <form\n            onSubmit={async (event) => {\n                setPaying(true);\n                event.preventDefault();\n                const cardInfo = new FormData(event.target as HTMLFormElement);\n                await ServiceAPI({\n                    language: state.language,\n                    serviceApiUrl: state.serviceApiUrl,\n                }).sendPaidOrderWithCrystalCard(cart, customer, Object.fromEntries(cardInfo.entries()));\n                empty();\n                navigate(path(`/order/cart/${cart.cartId}`), { replace: true });\n            }}\n        >\n            <div className=\"grid grid-cols-3 gap-3\">\n                <label htmlFor=\"number\" className=\"flex flex-col frntr-input\">\n                    <span>{_t('payment.cardNumber')}*</span>\n                    <input\n                        type=\"text\"\n                        id=\"number\"\n                        placeholder=\"1234 1234 1234 1234\"\n                        name=\"number\"\n                        required\n                        className=\"bg-grey\"\n                    />\n                </label>\n                <label htmlFor=\"expiration\" className=\"flex flex-col frntr-input\">\n                    <span>{_t('payment.expiration')}</span>\n                    <input\n                        type=\"text\"\n                        id=\"expiration\"\n                        placeholder=\"MM / YY\"\n                        name=\"expiration\"\n                        required\n                        className=\"bg-grey\"\n                    />\n                </label>\n                <label htmlFor=\"cvc\" className=\"flex flex-col frntr-input\">\n                    <span>CVC*</span>\n                    <input type=\"text\" id=\"cvc\" placeholder=\"CVC\" name=\"cvc\" required className=\"bg-grey\" />\n                </label>\n            </div>\n            <div className=\"grid grid-cols-2 gap-3 mt-3\">\n                <label htmlFor=\"country\" className=\"flex flex-col frntr-input\">\n                    <span>{_t('payment.country')}*</span>\n                    <input\n                        type=\"text\"\n                        id=\"country\"\n                        placeholder=\"United States\"\n                        name=\"country\"\n                        required\n                        className=\"bg-grey\"\n                    />\n                </label>\n                <label htmlFor=\"zip\" className=\"flex flex-col frntr-input\">\n                    <span>{_t('payment.zipCode')}*</span>\n                    <input type=\"text\" id=\"zip\" placeholder=\"94122\" name=\"zip\" required className=\"bg-grey\" />\n                </label>\n            </div>\n            <br />\n            <CrystalCardButton paying={paying} />\n        </form>\n    );\n};\n", "import { useLocalCart } from '../../../hooks/useLocalCart';\nimport { useState } from 'react';\nimport { useLocalStorage } from '@rehooks/local-storage';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport { useAppContext } from '../../../app-context/provider';\nimport logo from '~/assets/crystalcoin-logo.svg';\nimport useNavigate from '~/bridge/ui/useNavigate';\nimport { Customer } from '~/use-cases/contracts/Customer';\n\nexport const CrystalCoinButton: React.FC<{ paying?: boolean; onClick: () => Promise<void> | void }> = ({\n    paying = false,\n    onClick,\n}) => {\n    const { _t } = useAppContext();\n    return (\n        <button\n            data-testid=\"crystal-coin-payment-button\"\n            className=\"crystal-coin w-full text-white h-[70px] mt-2 rounded-md px-8 bg-grey py-4 flex flex-row justify-between items-center border border-transparent hover:border-black\"\n            disabled={paying}\n            onClick={onClick}\n        >\n            <img className=\"h-[35px]\" src={`${logo}`} height=\"35\" alt=\"Crystal Coin\" />\n            <span className=\"text-textBlack\">{paying ? _t('payment.processing') : ''}</span>\n            <span className=\"text-black text-2xl\"> \u203A</span>\n        </button>\n    );\n};\n\nexport const CrystalCoin: React.FC = () => {\n    const { cart, isEmpty, empty } = useLocalCart();\n    const [paying, setPaying] = useState(false);\n    const { state, path } = useAppContext();\n    const [customer] = useLocalStorage<Partial<Customer>>('customer', {});\n    const navigate = useNavigate();\n\n    if (isEmpty()) {\n        return null;\n    }\n    return (\n        <CrystalCoinButton\n            paying={paying}\n            onClick={async () => {\n                setPaying(true);\n                await ServiceAPI({\n                    language: state.language,\n                    serviceApiUrl: state.serviceApiUrl,\n                }).sendPaidOrderWithCrystalCoin(cart, customer);\n                empty();\n                navigate(path(`/order/cart/${cart.cartId}`), { replace: true });\n            }}\n        />\n    );\n};\n", "import useLocalStorage from '@rehooks/local-storage';\nimport { useEffect, useState } from 'react';\nimport logo from '~/assets/klarnaLogo.svg';\nimport { useAppContext } from '../../app-context/provider';\nimport { useLocalCart } from '../../hooks/useLocalCart';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport useNavigate from '~/bridge/ui/useNavigate';\nimport { Customer } from '~/use-cases/contracts/Customer';\n\nexport const KlarnaButton: React.FC<{ paying?: boolean; onClick?: () => Promise<void> | void }> = ({\n    paying = false,\n    onClick,\n}) => {\n    const { _t } = useAppContext();\n    return (\n        <button\n            type={onClick ? 'button' : 'submit'}\n            disabled={paying}\n            onClick={onClick ? onClick : undefined}\n            className=\"w-full text-white h-[70px] mt-2 rounded-md px-8 bg-grey py-4 flex flex-row justify-between items-center border border-transparent hover:border-black\"\n        >\n            <img className=\"h-[50px] px-1\" src={`${logo}`} height=\"50\" alt=\"Klarna\" />\n            <span id=\"button-text\" className=\"text-textBlack\">\n                {paying ? _t('payment.processing') : ''}\n            </span>\n            <span className=\"text-black text-2xl\"> \u203A</span>\n        </button>\n    );\n};\n\ntype KlarnaMethod = {\n    asset_urls: {\n        standard: string;\n    };\n    identifier: string;\n    name: string;\n};\n\nexport const Klarna: React.FC = () => {\n    const { state, path } = useAppContext();\n    const { cart, isEmpty, empty } = useLocalCart();\n    const navigate = useNavigate();\n    const [customer] = useLocalStorage<Partial<Customer>>('customer', {});\n    if (isEmpty()) {\n        return null;\n    }\n    const [methodsChoices, setMethodsChoices] = useState<KlarnaMethod[]>([]);\n\n    const triggerKlarna = async (method: KlarnaMethod) => {\n        //@ts-ignore\n        window.Klarna.Payments.load(\n            {\n                container: '#klarna-payments-container',\n                payment_method_category: method.identifier,\n            },\n            async () => {\n                await ServiceAPI({ language: state.language, serviceApiUrl: state.serviceApiUrl }).placeCart(\n                    cart,\n                    customer,\n                );\n                //@ts-ignore\n                window.Klarna.Payments.authorize(\n                    {\n                        payment_method_category: method.identifier,\n                    },\n                    {},\n                    function (res: any) {\n                        const approved = res.approved;\n                        if (approved) {\n                            empty();\n                            navigate(path(`/order/cart/${cart.cartId}`), { replace: true });\n                        }\n                    },\n                );\n            },\n        );\n    };\n\n    useEffect(() => {\n        (async () => {\n            if (!isEmpty()) {\n                const klarnaJS = document.createElement('script');\n                klarnaJS.src = 'https://x.klarnacdn.net/kp/lib/v1/api.js';\n                klarnaJS.onload = async () => {\n                    const api = ServiceAPI({\n                        language: state.language,\n                        serviceApiUrl: state.serviceApiUrl,\n                    });\n                    const data = await api.klarna.initiatePayment(cart);\n                    const methods = data.payment_method_categories;\n                    //@ts-ignore\n                    window.Klarna.Payments.init({\n                        client_token: data.client_token,\n                    });\n                    if (methods.length === 1) {\n                        triggerKlarna(methods[0]);\n                    } else {\n                        setMethodsChoices(methods);\n                    }\n                };\n                document.head.appendChild(klarnaJS);\n            }\n        })();\n    }, [cart.items]);\n\n    return (\n        <>\n            <div id=\"klarna-payments-container\" />\n            {methodsChoices.length > 0 && (\n                <>\n                    <p>Klarna Payment Methods: </p>\n                    <div className=\"flex flex-row flex-wrap\">\n                        {methodsChoices.map((method) => (\n                            <div key={method.identifier} className=\"w-1/2\">\n                                <button\n                                    onClick={() => triggerKlarna(method)}\n                                    className=\"bg-[#000] text-[#fff] rounded-md px-8 py-4 flex flex-row items-center\"\n                                >\n                                    <img\n                                        className=\"h-[30px] px-3\"\n                                        src={method.asset_urls.standard}\n                                        height=\"30\"\n                                        alt={`Klarna - ${method.name}`}\n                                    />{' '}\n                                    {method.name}\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                </>\n            )}\n        </>\n    );\n};\n", "import { useAppContext } from '~/ui/app-context/provider';\nimport logo from '~/assets/montonioLogo.svg';\nimport { useLocalCart } from '~/ui/hooks/useLocalCart';\nimport { useEffect, useState } from 'react';\nimport useLocalStorage from '@rehooks/local-storage';\nimport { Customer } from '@crystallize/js-api-client';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport { PickupPoint } from '~/use-cases/payments/montonio/types';\n\nexport const MontonioButton: React.FC<{\n    paying?: boolean;\n    disabled?: boolean;\n    onClick: () => Promise<void> | void;\n}> = ({ paying = false, disabled = false, onClick }) => {\n    const { _t } = useAppContext();\n    return (\n        <button\n            className=\"w-full h-[70px] text-white mt-2 rounded-md px-8 bg-grey py-4 flex flex-row justify-between items-center border border-transparent hover:border-black disabled:opacity-50 disabled:cursor-not-allowed\"\n            disabled={paying || disabled}\n            onClick={onClick}\n        >\n            <img className=\"px-1 h-[25px]\" src={`${logo}`} height=\"35\" alt=\"Montonio\" />\n            <span className=\"text-textBlack\">{paying ? _t('payment.processing') : ''}</span>\n            <span className=\"text-black text-2xl\"> \u203A</span>\n        </button>\n    );\n};\n\nexport const Montonio: React.FC = () => {\n    const { cart, isEmpty } = useLocalCart();\n    const [paying, setPaying] = useState(false);\n    const { state, _t } = useAppContext();\n    const [customer] = useLocalStorage<Partial<Customer>>('customer', {});\n\n    const [pickupPoints, setPickupPoints] = useState<Record<string, PickupPoint[]>>();\n    const [pickupPoint, setPickupPoint] = useState<PickupPoint | undefined>();\n    const [pickupSuggestions, setPickupSuggestions] = useState<Record<string, PickupPoint[]>>();\n    const [pickupInput, setPickupInput] = useState('');\n\n    const [banks, setBanks] = useState<any | undefined>();\n    const [bank, setBank] = useState<string | undefined>();\n\n    const [openLocationSelector, setOpenLocationSelector] = useState(false);\n\n    const API = ServiceAPI({\n        language: state.language,\n        serviceApiUrl: state.serviceApiUrl,\n    });\n\n    if (isEmpty()) {\n        return null;\n    }\n    useEffect(() => {\n        API.montonio.fetchPickupPoints().then((pickupPoints) => {\n            const points = Object.keys(pickupPoints).reduce((memo: any, country) => {\n                // we only propose EE for the boilerplate\n                if (country !== 'EE') {\n                    return memo;\n                }\n                const types: Record<string, any> = pickupPoints[country].providers.omniva;\n                return {\n                    ...memo,\n                    [country]: Object.keys(types).reduce((memo: any, type) => {\n                        // only parcel_machine for the boilerplates\n                        if (type !== 'parcel_machine') {\n                            return memo;\n                        }\n                        return [...memo, ...types[type]];\n                    }, []),\n                };\n            }, {});\n            setPickupPoints(points);\n            setPickupSuggestions(points);\n        });\n        API.montonio.fetchBanks().then((banks) => {\n            const availableBanks = Object.keys(banks).reduce((memo: any, country) => {\n                // we only propose EE for the boilerplate\n                if (country !== 'EE') {\n                    return memo;\n                }\n                return {\n                    ...memo,\n                    [country]: banks[country],\n                };\n            }, {});\n            setBanks(availableBanks);\n        });\n    }, []);\n\n    const onInputChange = (event: any) => {\n        let suggestions: any = { EE: [] };\n        const value = event.target.value;\n        setPickupInput(value);\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, `i`);\n            suggestions['EE'] = pickupSuggestions?.['EE']?.filter((v: any) => v.name.match(regex));\n            setPickupSuggestions(suggestions);\n        } else {\n            setPickupSuggestions(pickupPoints);\n        }\n    };\n\n    //group pickup points by locality\n    const groupByKey = (locations: any[] | undefined, key: string) =>\n        locations?.reduce(\n            (acc: any, obj: { [x: string]: string }) => ({\n                ...acc,\n                [obj[key]]: (acc[obj[key]] || []).concat(obj),\n            }),\n            {},\n        );\n\n    let suggestionsGroupedByLocality = groupByKey(pickupSuggestions?.['EE'], 'locality');\n\n    return (\n        <>\n            {pickupPoints && (\n                <div className=\"flex flex-col gap-2 mb-4\">\n                    <p className=\"text-sm font-semibold mb-3\">{_t('payment.montonio.shippingConstraint')}</p>\n                    <div>\n                        <div\n                            className=\"bg-white w-full flex justify-between items-center py-2 px-4 cursor-pointer\"\n                            onClick={() => setOpenLocationSelector(!openLocationSelector)}\n                        >\n                            <p>{_t('payment.montonio.selectPickupPoint')}</p>\n                            <span>\u2193</span>\n                        </div>\n                        {openLocationSelector && (\n                            <div className=\"flex flex-col gap-2 bg-white px-3\">\n                                <input\n                                    onChange={onInputChange}\n                                    placeholder=\"Search...\"\n                                    value={pickupInput}\n                                    type=\"text\"\n                                    className=\"border border-black px-4 py-2 mt-2\"\n                                />\n                                <div>\n                                    {pickupSuggestions!?.['EE']?.length > 0 &&\n                                        Object?.entries(suggestionsGroupedByLocality).map(\n                                            (suggestion: any, index: number) => (\n                                                <div key={index}>\n                                                    <p className=\"font-bold mt-4\">{suggestion?.[0]}</p>\n                                                    <div>\n                                                        {suggestion?.[1]?.map((s: any) => (\n                                                            <div\n                                                                key={s.uuid}\n                                                                onClick={() => {\n                                                                    setPickupInput(s.name);\n                                                                    setPickupSuggestions({});\n                                                                    setPickupPoint(s);\n                                                                }}\n                                                                className=\"cursor-pointer py-2 hover:bg-grey\"\n                                                            >\n                                                                {s.name}\n                                                            </div>\n                                                        ))}\n                                                    </div>\n                                                </div>\n                                            ),\n                                        )}\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            )}\n\n            {banks && (\n                <div className=\"flex flex-col gap-2 mb-4\">\n                    <p className=\"text-sm font-semibold mb-3\">{_t('payment.montonio.paywithbanklinks')}</p>\n                    <ul className=\"grid grid-cols-3 gap-2\">\n                        {banks['EE'].payment_methods.map((method: any) => {\n                            return (\n                                <li\n                                    className={`${\n                                        bank === method.code ? 'selected border-2' : ''\n                                    } cursor-pointer flex items-center justify-center`}\n                                    key={method.code}\n                                    onClick={() => {\n                                        setBank(method.code);\n                                    }}\n                                >\n                                    <img\n                                        src={method.logo_url}\n                                        width={100}\n                                        alt={method.name}\n                                        className=\"object-contain w-[100px] h-[75px]\"\n                                    />\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            )}\n\n            {pickupPoint && (\n                <div className=\"bg-[#fff] p-3 px-4 flex-col gap-2\">\n                    <p>\n                        {pickupPoint.address} {pickupPoint.country}\n                    </p>\n                    <p>\n                        {pickupPoint.locality}, {pickupPoint.region}\n                    </p>\n                </div>\n            )}\n\n            <MontonioButton\n                paying={paying}\n                disabled={!pickupPoint || !bank}\n                onClick={async () => {\n                    setPaying(true);\n                    try {\n                        await API.placeCart(cart, customer, {\n                            pickupPoint,\n                        });\n                        const link = await ServiceAPI({\n                            language: state.language,\n                            serviceApiUrl: state.serviceApiUrl,\n                        }).montonio.fetchPaymentLink(cart, bank!);\n                        window.location.href = link.url;\n                    } catch (exception) {\n                        console.log(exception);\n                    }\n                }}\n            />\n            <p className=\"text-xs mt-4 text-grey6\">Note: {_t('payment.montonio.shippingFeature')}</p>\n        </>\n    );\n};\n", "import { useLocalCart } from '../../hooks/useLocalCart';\nimport { useState } from 'react';\nimport { useLocalStorage } from '@rehooks/local-storage';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport { useAppContext } from '../../app-context/provider';\nimport logo from '~/assets/quickpayLogo.svg';\nimport { Customer } from '~/use-cases/contracts/Customer';\n\nexport const QuickPayLinkButton: React.FC<{ paying?: boolean; onClick: () => Promise<void> | void }> = ({\n    paying = false,\n    onClick,\n}) => {\n    const { _t } = useAppContext();\n    return (\n        <button\n            className=\"w-full h-[70px] text-white mt-2 rounded-md px-8 bg-grey py-4 flex flex-row justify-between items-center border border-transparent hover:border-black\"\n            disabled={paying}\n            onClick={onClick}\n        >\n            <img className=\"px-1 h-[35px]\" src={`${logo}`} height=\"35\" alt=\"Quickpay\" />\n            <span className=\"text-textBlack\">{paying ? _t('payment.processing') : ''}</span>\n            <span className=\"text-black text-2xl\"> \u203A</span>\n        </button>\n    );\n};\n\nexport const QuickPayLink: React.FC = () => {\n    const { cart, isEmpty } = useLocalCart();\n    const [paying, setPaying] = useState(false);\n    const { state } = useAppContext();\n    const [customer] = useLocalStorage<Partial<Customer>>('customer', {});\n    if (isEmpty()) {\n        return null;\n    }\n\n    return (\n        <QuickPayLinkButton\n            paying={paying}\n            onClick={async () => {\n                setPaying(true);\n                try {\n                    await ServiceAPI({ language: state.language, serviceApiUrl: state.serviceApiUrl }).placeCart(\n                        cart,\n                        customer,\n                    );\n                    const link = await ServiceAPI({\n                        language: state.language,\n                        serviceApiUrl: state.serviceApiUrl,\n                    }).quickpay.fetchPaymentLink(cart);\n                    window.location.href = link.url;\n                } catch (exception) {\n                    console.log(exception);\n                }\n            }}\n        />\n    );\n};\n", "import useLocalStorage from '@rehooks/local-storage';\nimport { useEffect } from 'react';\nimport { useAppContext } from '../../app-context/provider';\nimport { useLocalCart } from '../../hooks/useLocalCart';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport useNavigate from '~/bridge/ui/useNavigate';\nimport { Customer } from '~/use-cases/contracts/Customer';\nimport logo from '~/assets/razorpayLogo.svg';\n\nexport const RazorPayButton: React.FC<{ paying?: boolean; onClick?: () => Promise<void> | void }> = ({\n    paying = false,\n    onClick,\n}) => {\n    const { _t } = useAppContext();\n    return (\n        <button\n            type={onClick ? 'button' : 'submit'}\n            disabled={paying}\n            onClick={onClick ? onClick : undefined}\n            className=\"w-full text-white mt-2 h-[70px] rounded-md px-8 bg-grey flex flex-row justify-between items-center border border-transparent hover:border-black\"\n        >\n            <img className=\"h-[40px]\" src={`${logo}`} height=\"50\" alt=\"Razorpay\" />\n            <span id=\"button-text\" className=\"text-textBlack\">\n                {paying ? _t('payment.processing') : ''}\n            </span>\n            <span className=\"text-black text-2xl\"> \u203A</span>\n        </button>\n    );\n};\n\nexport const RazorPay: React.FC = () => {\n    const { state, path } = useAppContext();\n    const { cart, isEmpty, empty } = useLocalCart();\n    const [customer] = useLocalStorage<Partial<Customer>>('customer', {});\n    let navigate = useNavigate();\n\n    const variables = state.paymentImplementationVariables ? state.paymentImplementationVariables['razorpay'] : {};\n    if (!variables || !variables.RAZORPAY_ID) {\n        return null;\n    }\n\n    const triggerRazorpay = async () => {\n        const data = await ServiceAPI({\n            language: state.language,\n            serviceApiUrl: state.serviceApiUrl,\n        }).razorpay.initiatePayment(cart);\n\n        const { amount, id: order_id, currency } = data.data;\n\n        const options = {\n            key: variables.RAZORPAY_ID, // Enter the Key ID generated from the Dashboard\n            amount: amount.toString(),\n            currency: currency,\n            name: 'FRNTR', // Enter the name of the company to be displayed\n            description: '',\n            image: { logo },\n            order_id: order_id,\n            handler: async function (response: any) {\n                const data = {\n                    orderCreationId: order_id,\n                    razorpayPaymentId: response.razorpay_payment_id,\n                    razorpayOrderId: response.razorpay_order_id,\n                    razorpaySignature: response.razorpay_signature,\n                    cartId: cart.cartId,\n                };\n                const result = await ServiceAPI({\n                    language: state.language,\n                    serviceApiUrl: state.serviceApiUrl,\n                }).razorpay.receivePayment(window.location.origin, data);\n\n                if (result.id) {\n                    empty();\n                    navigate(path(`/order/cart/${cart.cartId}`), { replace: true });\n                }\n            },\n            prefill: {\n                name: customer.firstname,\n                email: customer.email,\n            },\n            theme: {\n                color: '#61dafb',\n            },\n        };\n        //@ts-ignore\n        const paymentObject = new window.Razorpay(options);\n        paymentObject.open();\n    };\n\n    useEffect(() => {\n        (async () => {\n            if (!isEmpty()) {\n                // before anything else we place the cart\n                try {\n                    await ServiceAPI({ language: state.language, serviceApiUrl: state.serviceApiUrl }).placeCart(\n                        cart,\n                        customer,\n                    );\n                } catch (exception) {\n                    console.log(exception);\n                }\n                const razorpayJS = document.createElement('script');\n                razorpayJS.src = 'https://checkout.razorpay.com/v1/checkout.js';\n                document.head.appendChild(razorpayJS);\n                triggerRazorpay();\n            }\n        })();\n    }, [cart.items]);\n\n    return <RazorPayButton />;\n};\n", "'use client';\n\nimport useLocalStorage from '@rehooks/local-storage';\nimport { Elements, PaymentElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useEffect, useState } from 'react';\nimport { useAppContext } from '../../app-context/provider';\nimport { useLocalCart } from '../../hooks/useLocalCart';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport logo from '~/assets/stripeLogo.svg';\nimport useNavigate from '~/bridge/ui/useNavigate';\nimport { Customer } from '~/use-cases/contracts/Customer';\n\nexport const StripeButton: React.FC<{ paying?: boolean; onClick?: () => Promise<void> | void }> = ({\n    paying = false,\n    onClick,\n}) => {\n    const { _t } = useAppContext();\n    return (\n        <button\n            type={onClick ? 'button' : 'submit'}\n            disabled={paying}\n            onClick={onClick ? onClick : undefined}\n            className=\"w-full text-white mt-2 h-[70px] rounded-md px-8 bg-grey flex flex-row justify-between items-center border border-transparent hover:border-black\"\n        >\n            <img className=\"h-[50px]\" src={`${logo}`} height=\"50\" alt=\"Stripe\" />\n            <span id=\"button-text\" className=\"text-textBlack\">\n                {paying ? _t('payment.processing') : ''}\n            </span>\n            <span className=\"text-black text-2xl\"> \u203A</span>\n        </button>\n    );\n};\n\nexport const Stripe: React.FC = () => {\n    const { state } = useAppContext();\n    const [clientSecret, setClientSecret] = useState<string>('');\n    const { cart, isEmpty } = useLocalCart();\n    const [customer] = useLocalStorage<Partial<Customer>>('customer', {});\n\n    const variables = state.paymentImplementationVariables ? state.paymentImplementationVariables['stripe'] : {};\n    if (!variables || !variables.PUBLIC_KEY) {\n        return null;\n    }\n    const stripePromise = loadStripe(variables.PUBLIC_KEY);\n\n    useEffect(() => {\n        (async () => {\n            if (!isEmpty()) {\n                // before anything else we place the cart\n                try {\n                    await ServiceAPI({ language: state.language, serviceApiUrl: state.serviceApiUrl }).placeCart(\n                        cart,\n                        customer,\n                    );\n                } catch (exception) {\n                    console.log(exception);\n                }\n\n                const data = await ServiceAPI({\n                    language: state.language,\n                    serviceApiUrl: state.serviceApiUrl,\n                }).stripe.fetchPaymentIntent(cart);\n                setClientSecret(data.key);\n            }\n        })();\n    }, [cart.items]);\n\n    if (!clientSecret) {\n        return null;\n    }\n    return (\n        <Elements options={{ clientSecret }} stripe={stripePromise}>\n            <StripCheckoutForm />\n        </Elements>\n    );\n};\n\nconst StripCheckoutForm: React.FC = () => {\n    const { cart, empty } = useLocalCart();\n    const { path } = useAppContext();\n    const stripe = useStripe();\n    const elements = useElements();\n    const navigate = useNavigate();\n    const [state, setState] = useState<{\n        error: string | null;\n        succeeded: boolean;\n        processing: boolean;\n    }>({ succeeded: false, error: null, processing: false });\n\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (!stripe || !elements) {\n            return;\n        }\n        setState({\n            ...state,\n            processing: true,\n        });\n\n        const payload = await stripe.confirmPayment({\n            elements,\n            confirmParams: {\n                return_url: 'https://' + window.location.host + '/order/cart/' + cart.cartId,\n            },\n            redirect: 'if_required',\n        });\n\n        if (payload.error) {\n            setState({\n                ...state,\n                error: `Payment failed ${payload.error.message}`,\n                processing: false,\n            });\n        } else {\n            setState({\n                ...state,\n                error: null,\n                processing: false,\n                succeeded: true,\n            });\n            empty();\n            navigate(path(`/order/cart/${cart.cartId}`), { replace: true });\n        }\n    };\n\n    return (\n        <form id=\"stripe-payment-form\" onSubmit={handleSubmit}>\n            <PaymentElement id=\"payment-element\" />\n            <br />\n            <StripeButton paying={state.processing || !stripe || !elements} />\n        </form>\n    );\n};\n", "import AdyenCheckout from '@adyen/adyen-web';\nimport { useEffect, useRef } from 'react';\nimport { useAppContext } from '../../app-context/provider';\nimport { useLocalCart } from '../../hooks/useLocalCart';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport useNavigate from '~/bridge/ui/useNavigate';\nimport { buildLanguageMarketAwareLink } from '../../../use-cases/LanguageAndMarket';\nimport useLocalStorage from '@rehooks/local-storage';\nimport { Customer } from '@crystallize/js-api-client';\nimport logo from '~/assets/adyenLogo.svg';\n\nexport const AdyenButton: React.FC<{\n    paying?: boolean;\n    onClick?: () => Promise<void> | void;\n}> = ({ paying = false, onClick }) => {\n    const { _t } = useAppContext();\n    return (\n        <button\n            type={onClick ? 'button' : 'submit'}\n            disabled={paying}\n            onClick={onClick ? onClick : undefined}\n            className=\"w-full text-white h-[70px] mt-2 rounded-md px-8 bg-grey py-4 flex flex-row justify-between items-center border border-transparent hover:border-black\"\n        >\n            <img className=\"h-[50px] px-1\" src={`${logo}`} height=\"50\" alt=\"Adyen\" />\n            <span id=\"button-text\" className=\"text-textBlack\">\n                {paying ? _t('payment.processing') : ''}\n            </span>\n            <span className=\"text-black text-2xl\"> \u203A</span>\n        </button>\n    );\n};\n\nexport const AdyenCheckoutForm: React.FC<{\n    paying?: boolean;\n    onClick?: () => Promise<void> | void;\n}> = ({ paying = false, onClick }) => {\n    const navigate = useNavigate();\n    const paymentContainer = useRef(null);\n    const { cart, isEmpty } = useLocalCart();\n    const { state } = useAppContext();\n    const variables = state.paymentImplementationVariables ? state.paymentImplementationVariables['adyen'] : {};\n    if (!variables || !variables.CLIENT_KEY) {\n        return null;\n    }\n    const [customer] = useLocalStorage<Partial<Customer>>('customer', {});\n\n    const orderCartLink = buildLanguageMarketAwareLink(`/order/cart/${cart.cartId}`, state.language, state.market);\n\n    const loadCheckoutForm = async (data: any) => {\n        const configuration = {\n            locale: state.language,\n            environment: variables.ENVIRONMENT,\n            clientKey: variables.CLIENT_KEY,\n            analytics: {\n                enabled: true,\n            },\n            session: {\n                id: data.sessionId,\n                sessionData: data.data.sessionData,\n            },\n            onPaymentCompleted: (result: any, component: any) => {\n                navigate(orderCartLink, { replace: true });\n            },\n            onError: (error: any, component: any) => {\n                console.error(error.name, error.message, error.stack, component);\n            },\n        };\n        const checkout = await AdyenCheckout(configuration);\n        if (paymentContainer.current) {\n            checkout.update(configuration);\n            checkout.create('dropin').mount(paymentContainer.current);\n        }\n    };\n\n    useEffect(() => {\n        (async () => {\n            if (!isEmpty()) {\n                try {\n                    await ServiceAPI({\n                        language: state.language,\n                        serviceApiUrl: state.serviceApiUrl,\n                    }).placeCart(cart, customer);\n                } catch (exception) {\n                    console.log(exception);\n                }\n                const data = await ServiceAPI({\n                    language: state.language,\n                    serviceApiUrl: state.serviceApiUrl,\n                }).adyen.initiatePayment(cart);\n                await loadCheckoutForm(data);\n            }\n        })();\n    }, [cart.items]);\n\n    return (\n        <div id=\"adyen-checkout__dropin adyen-checkout__dropin--ready\">\n            <div className=\"payment-container\">\n                <div ref={paymentContainer} className=\"payment\"></div>\n            </div>\n        </div>\n    );\n};\n", "import { useLocalCart } from '../../hooks/useLocalCart';\nimport { useEffect, useState } from 'react';\nimport { useLocalStorage } from '@rehooks/local-storage';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport { useAppContext } from '../../app-context/provider';\nimport logo from '~/assets/vippsLogo.svg';\nimport { Customer } from '~/use-cases/contracts/Customer';\n\nexport const VippsButton: React.FC<{\n    paying?: boolean;\n    onClick: () => Promise<void> | void;\n    children?: string;\n}> = ({ paying = false, onClick, children }) => {\n    const { _t } = useAppContext();\n    const text = children ? children : '';\n    return (\n        <button\n            className=\"w-full h-[70px] text-white mt-2 rounded-md px-8 bg-grey py-4 flex flex-row justify-between items-center border border-transparent hover:border-black\"\n            disabled={paying}\n            onClick={onClick}\n        >\n            <img className=\"px-1 h-[50px]\" src={`${logo}`} height=\"50\" alt=\"Vipps\" />\n            {paying ? (\n                <span className=\"text-textBlack\">{_t('payment.processing')}...</span>\n            ) : (\n                <span className=\"text-black\">{`${text}`} \u203A</span>\n            )}\n        </button>\n    );\n};\n\nexport const Vipps: React.FC = () => {\n    const { cart, isEmpty } = useLocalCart();\n    const [paying, setPaying] = useState(false);\n    const { state } = useAppContext();\n    const [customer] = useLocalStorage<Partial<Customer>>('customer', {});\n    const [qrURL, setQRURL] = useState<string | null>(null);\n    const [methodFlow, setMethodFlow] = useState<string | null>(null);\n\n    useEffect(() => {\n        if (methodFlow !== 'CHECKOUT') {\n            const vippsJS = document.createElement('script');\n            vippsJS.src = 'https://checkout.vipps.no/vippsCheckoutSDK.js';\n            vippsJS.onload = async () => {};\n            document.head.appendChild(vippsJS);\n        }\n    }, [methodFlow]);\n\n    if (isEmpty()) {\n        return null;\n    }\n\n    const excecute = async (method: string, flow: string, callback: (result: any) => void) => {\n        if (!isEmpty()) {\n            try {\n                await ServiceAPI({\n                    language: state.language,\n                    serviceApiUrl: state.serviceApiUrl,\n                }).placeCart(cart, customer);\n                const response = await ServiceAPI({\n                    language: state.language,\n                    serviceApiUrl: state.serviceApiUrl,\n                }).vipps.fetchPaymentIntent(cart, method, flow);\n                callback(response);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    };\n    if (qrURL) {\n        return <img src={qrURL} />;\n    }\n\n    return (\n        <ul>\n            {(!methodFlow || methodFlow === 'CARD_WEB_REDIRECT') && (\n                <li>\n                    <VippsButton\n                        paying={paying}\n                        onClick={async () => {\n                            setMethodFlow('CARD_WEB_REDIRECT');\n                            setPaying(true);\n                            await excecute('CARD', 'WEB_REDIRECT', (result) => {\n                                window.location.href = result.redirectUrl;\n                            });\n                        }}\n                    >\n                        Card on the Web\n                    </VippsButton>\n                </li>\n            )}\n            {(!methodFlow || methodFlow === 'WALLET_WEB_REDIRECT') && (\n                <li>\n                    <VippsButton\n                        paying={paying}\n                        onClick={async () => {\n                            setMethodFlow('WALLET_WEB_REDIRECT');\n                            setPaying(true);\n                            await excecute('WALLET', 'WEB_REDIRECT', (result) => {\n                                window.location.href = result.redirectUrl;\n                            });\n                        }}\n                    >\n                        Wallet on the Web\n                    </VippsButton>\n                </li>\n            )}\n            {(!methodFlow || methodFlow === 'WALLET_NATIVE_REDIRECT') && (\n                <li>\n                    <VippsButton\n                        paying={paying}\n                        onClick={async () => {\n                            setMethodFlow('WALLET_NATIVE_REDIRECT');\n                            setPaying(true);\n                            await excecute('WALLET', 'NATIVE_REDIRECT', (result) => {\n                                window.location.href = result.redirectUrl;\n                            });\n                        }}\n                    >\n                        Wallet on Mobile\n                    </VippsButton>\n                </li>\n            )}\n            {(!methodFlow || methodFlow === 'WALLET_QR') && (\n                <li>\n                    <VippsButton\n                        paying={paying}\n                        onClick={async () => {\n                            setMethodFlow('WALLET_QR');\n                            setPaying(true);\n                            await excecute('WALLET', 'QR', (result) => {\n                                setQRURL(result.redirectUrl);\n                            });\n                        }}\n                    >\n                        Wallet with QR code\n                    </VippsButton>\n                </li>\n            )}\n            {(!methodFlow || methodFlow === 'CHECKOUT_IFRAME') && (\n                <li>\n                    <VippsButton\n                        paying={paying}\n                        onClick={async () => {\n                            setMethodFlow('CHECKOUT_IFRAME');\n                            setPaying(true);\n                            await excecute('CHECKOUT', 'IFRAME', async (result) => {\n                                //@ts-ignore\n                                window.VippsCheckout({\n                                    checkoutFrontendUrl: result.checkoutFrontendUrl,\n                                    iFrameContainerId: 'vipps-checkout-frame-container',\n                                    language: 'no',\n                                    token: result.token,\n                                });\n                            });\n                        }}\n                    >\n                        IFrame Checkout\n                    </VippsButton>\n                </li>\n            )}\n            {(!methodFlow || methodFlow === 'CHECKOUT_HANDOFF') && (\n                <li>\n                    <VippsButton\n                        paying={paying}\n                        onClick={async () => {\n                            setMethodFlow('CHECKOUT_HANDOFF');\n                            setPaying(true);\n                            await excecute('CHECKOUT', 'HANDOFF', async (result) => {\n                                //@ts-ignore\n                                window.VippsCheckoutDirect({\n                                    checkoutFrontendUrl: result.checkoutFrontendUrl,\n                                    language: 'no',\n                                    token: result.token,\n                                });\n                            });\n                        }}\n                    >\n                        Handoff Checkout\n                    </VippsButton>\n                </li>\n            )}\n            <div id=\"vipps-checkout-frame-container\" />\n        </ul>\n    );\n};\n", "import { HeadersFunction, LoaderFunction } from '@remix-run/node';\nimport { HttpCacheHeaderTaggerFromLoader } from '~/use-cases/http/cache';\nimport { useLoaderData } from '@remix-run/react';\nimport { isAuthenticated as isServerSideAuthenticated } from '~/core/authentication.server';\nimport { privateJson } from '~/core/bridge/privateJson.server';\nimport Orders from '~/ui/pages/Orders';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    return privateJson({ isServerSideAuthenticated: await isServerSideAuthenticated(request) });\n};\n\nexport default () => {\n    const { isServerSideAuthenticated } = useLoaderData();\n    return <Orders isServerSideAuthenticated={isServerSideAuthenticated} />;\n};\n", "import { useEffect, useState } from 'react';\nimport { MagickLoginForm } from '../components/checkout-forms/magicklogin';\nimport { useAuth } from '../hooks/useAuth';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport { Price } from '../lib/pricing/pricing-component';\nimport DefaultImage from '~/assets/defaultImage.svg';\nimport { useAppContext } from '../app-context/provider';\nimport { ClientOnly } from '@crystallize/reactjs-hooks';\nimport DownloadIcon from '~/assets/downloadIcon.svg';\n\nexport default ({ isServerSideAuthenticated }: { isServerSideAuthenticated: boolean }) => {\n    const { isAuthenticated } = useAuth();\n    const [orders, setOrders] = useState<any | null>(null);\n    const { state } = useAppContext();\n\n    let orderDate = (date: any) => {\n        let newDate = new Date(date);\n        return newDate.toLocaleString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\n    };\n\n    useEffect(() => {\n        (async () => {\n            try {\n                setOrders(\n                    await ServiceAPI({ language: state.language, serviceApiUrl: state.serviceApiUrl }).fetchOrders(),\n                );\n            } catch (exception) {\n                console.log(exception);\n            }\n        })();\n    }, []);\n\n    return (\n        <div className=\"container 2xl px-6 mx-auto w-full\">\n            <h1 className=\"text-2xl font-semibold my-10\">Your Orders</h1>\n            <ClientOnly>\n                {isAuthenticated && isServerSideAuthenticated ? (\n                    <>\n                        <div>\n                            {orders &&\n                                orders.map((order: any, index: number) => (\n                                    <div key={order.id} className=\"border-2 border-grey my-5\">\n                                        <div className=\"w-full h-30 bg-[#F0F2F2] px-5 py-2 flex flex-wrap justify-between items-center\">\n                                            <div className=\"order-item\">\n                                                <span>Order placed</span>\n                                                <p className=\"text-grey6\">{orderDate(order.createdAt)}</p>\n                                            </div>\n                                            <div className=\"order-item\">\n                                                <span>Order ID</span>\n                                                <p className=\"text-grey6\">{order.id}</p>\n                                            </div>\n                                            <div className=\"order-item\">\n                                                <span>Total</span>\n                                                <p className=\"text-grey6\">\n                                                    <Price currencyCode={order.total.currency}>\n                                                        {order.total.gross}\n                                                    </Price>\n                                                </p>\n                                            </div>\n                                        </div>\n                                        <div className=\"p-5 flex flex-col gap-5\">\n                                            {order.cart.map((item: any, index: number) => (\n                                                <div\n                                                    key={index}\n                                                    className=\"flex justify-between items-center order-item\"\n                                                >\n                                                    <div className=\"flex gap-3 items-center\">\n                                                        <img\n                                                            src={item.imageUrl ? item.imageUrl : DefaultImage}\n                                                            width=\"40px\"\n                                                            height=\"40px\"\n                                                            alt=\"product\"\n                                                        />\n                                                        <p className=\"w-40\">{item.name}</p>\n                                                    </div>\n                                                    <p className=\"w-20\">{item.quantity}</p>\n                                                    <p className=\"w-20 text-right\">\n                                                        {/* adding because orders aren't returning currency, will be fixed */}\n                                                        <Price\n                                                            currencyCode={\n                                                                item.price.currency || state.currency.code || 'USD'\n                                                            }\n                                                        >\n                                                            {item.price.gross}\n                                                        </Price>\n                                                    </p>\n                                                </div>\n                                            ))}\n                                        </div>\n                                        <div className=\"w-full flex justify-end\">\n                                            <div className=\"bg-textBlack py-3 px-4 text-[#fff] rounded-sm flex align-center gap-3\">\n                                                <a href={`/order/invoice/${order.id}.pdf`}>Download invoice</a>\n                                                <img\n                                                    src={`${DownloadIcon}`}\n                                                    alt=\"Download icon\"\n                                                    width=\"18\"\n                                                    height=\"18\"\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </>\n                ) : (\n                    <div className=\"min-h-[70vh] items-center justify-center flex max-w-[500px] mx-auto\">\n                        <div className=\"mx-auto items-center justify-center flex w-full \">\n                            <MagickLoginForm title=\"Login\" onlyLogin actionTitle=\"Login\" />\n                        </div>\n                    </div>\n                )}\n            </ClientOnly>\n        </div>\n    );\n};\n", "import { HeadersFunction, json, LoaderFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { CrystallizeAPI } from '~/use-cases/crystallize/read';\nimport { getContext } from '~/use-cases/http/utils';\nimport Search from '~/ui/pages/Search';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    const requestContext = getContext(request);\n    const { shared, secret } = await getStoreFront(requestContext.host);\n    const params = requestContext.url.searchParams.get('q');\n    const api = CrystallizeAPI({\n        apiClient: secret.apiClient,\n        language: requestContext.language,\n    });\n    let data = await api.search(params ? params : '');\n    return json(\n        { data },\n        StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', ['search'], shared.config.tenantIdentifier),\n    );\n};\n\nexport default () => {\n    const { data } = useLoaderData();\n    return <Search products={data} />;\n};\n", "'use client';\n\nimport { FilteredProducts } from '../components/search/filtered-products';\nimport { useAppContext } from '../app-context/provider';\nimport { ProductSlim } from '~/use-cases/contracts/Product';\n\nexport default ({ products }: { products: ProductSlim[] }) => {\n    const { _t } = useAppContext();\n\n    return (\n        <div className=\"container px-6 mx-auto w-full\">\n            <h1 className=\"font-bold text-4xl mt-10\">{_t('search.label')}</h1>\n            {products.length > 0 ? (\n                <div>\n                    <FilteredProducts products={products} />\n                </div>\n            ) : (\n                <div className=\"mt-10\">{_t('search.noResults')}</div>\n            )}\n        </div>\n    );\n};\n", "import { HeadersFunction, json, LinksFunction, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport splideStyles from '@splidejs/splide/dist/css/themes/splide-default.min.css';\nimport { useLoaderData } from '@remix-run/react';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { buildMetas } from '~/use-cases/MicrodataBuilder';\nimport { getContext } from '~/use-cases/http/utils';\nimport videoStyles from '@crystallize/reactjs-components/assets/video/styles.css';\nimport LandingPage from '~/ui/pages/LandingPage';\nimport dataFetcherForShapePage from '~/use-cases/dataFetcherForShapePage.server';\nimport { authenticatedUser } from '~/core/authentication.server';\nimport { marketIdentifiersForUser } from '~/use-cases/marketIdentifiersForUser';\n\nexport let meta: MetaFunction = ({ data }) => {\n    return buildMetas(data.data);\n};\n\nexport const headers: HeadersFunction = ({ parentHeaders, loaderHeaders }) => {\n    return {\n        ...HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers,\n        Link: parentHeaders.get('Link') as string,\n    };\n};\n\nexport const links: LinksFunction = () => {\n    return [\n        { rel: 'stylesheet', href: splideStyles },\n        { rel: 'stylesheet', href: videoStyles },\n    ];\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const path = `/frontpage`;\n    const { shared } = await getStoreFront(requestContext.host);\n    const user = await authenticatedUser(request);\n    const data = await dataFetcherForShapePage(\n        'landing-page',\n        path,\n        requestContext,\n        params,\n        marketIdentifiersForUser(user),\n    );\n\n    return json({ data }, StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier));\n};\n\nexport default () => {\n    const { data } = useLoaderData();\n    return <LandingPage data={data} />;\n};\n", "import { Grid } from '../components/grid/grid';\nimport { LandingPage } from '~/use-cases/contracts/LandingPage';\n\nexport default ({ data: landing }: { data: LandingPage }) => {\n    return (\n        <div className=\"min-h-[100vh]\">\n            {landing.grids.map((grid, index) => (\n                <div key={`${grid.id}-${index}`} className=\"mx-auto w-full test\">\n                    <Grid grid={grid} />\n                </div>\n            ))}\n        </div>\n    );\n};\n", "import { HeadersFunction, json, LoaderFunction } from '@remix-run/node';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport Cart from '~/ui/pages/Cart';\nimport { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { getContext } from '~/use-cases/http/utils';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    const requestContext = getContext(request);\n    const { shared } = await getStoreFront(requestContext.host);\n    return json({}, StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', ['cart'], shared.config.tenantIdentifier));\n};\n\nexport default () => {\n    return <Cart />;\n};\n", "'use client';\nimport React from 'react';\nimport Link from '~/bridge/ui/Link';\nimport { useRemoteCart } from '../hooks/useRemoteCart';\nimport { ClientOnly } from '@crystallize/reactjs-hooks';\nimport { useLocalCart } from '../hooks/useLocalCart';\nimport { Image } from '@crystallize/reactjs-components';\nimport trashIcon from '~/assets/trashIcon.svg';\nimport { Price as CrystallizePrice } from '../lib/pricing/pricing-component';\nimport { useAppContext } from '../app-context/provider';\nimport { CartItemPrice } from './price';\nimport { CartItem } from '@crystallize/node-service-api-request-handlers';\nimport { VoucherForm } from './voucher';\nimport { Voucher } from '~/use-cases/contracts/Voucher';\nimport { CloneCartBtn } from './clone-cart-button';\n\nexport const Cart: React.FC = () => {\n    const { isEmpty } = useLocalCart();\n    const { path, _t } = useAppContext();\n    return (\n        <div className=\"fixed rounded-md right-10 w-70 bottom-10 shadow-lg py-8 px-10 border border-[#dfdfdf] z-[999]\">\n            <ClientOnly fallback={<p>{_t('cart.empty')}</p>}>\n                <>\n                    {!isEmpty() && (\n                        <>\n                            <h5>{_t('cart.itemAdded')}</h5>\n\n                            <div className=\"flex gap-3 mt-3 items-center\">\n                                <button className=\"bg-textBlack text-[#fff] py-2 px-4 rounded-md\">\n                                    <Link to={path('/cart')}>{_t('cart.goto')}</Link>\n                                </button>\n                                <button className=\"underline\">\n                                    {' '}\n                                    <Link to={path('/checkout')}>{_t('cart.continue')}</Link>\n                                </button>\n                            </div>\n                        </>\n                    )}\n                </>\n            </ClientOnly>\n        </div>\n    );\n};\n\nexport type DiscountLot = {\n    items: Record<\n        string,\n        {\n            price: number;\n            sku: string;\n            quantity: number;\n        }\n    >;\n    discount: { identifier: string };\n};\nexport type Savings = Record<string, { quantity: number; amount: number }>;\n\nexport const HydratedCart: React.FC = () => {\n    const { remoteCart, loading } = useRemoteCart();\n\n    const { isImmutable, isEmpty, add: addToCart, remove: removeFromCart, clone: cartClone } = useLocalCart();\n\n    const { cart, total } = remoteCart?.cart || { cart: null, total: null };\n    const { savings } = remoteCart?.extra?.discounts || {\n        lots: null,\n        savings: null,\n    };\n    const { state: contextState, path, _t } = useAppContext();\n    const voucher = remoteCart?.extra?.voucher as Voucher | undefined;\n\n    if (isEmpty()) {\n        return (\n            <ClientOnly>\n                <div className=\"min-h-[60vh] flex w-full flex-col gap-6 justify-center items-start \">\n                    <div className=\"w-full flex items-center\">\n                        <div className=\"overflow-hidden w-[200px] \">\n                            <div className=\"-ml-[50px]\">\n                                <iframe width=\"300px\" src=\"https://embed.lottiefiles.com/animation/823\" />\n                            </div>\n                        </div>\n                        <div className=\"mt-10\">\n                            <div className=\"flex  pb-2 text-3xl font-semibold \">{_t('cart.whoaempty')}</div>\n                            <div className=\"flex w-full\">{_t('cart.trylater')}</div>\n                            <button className=\"bg-grey mt-3 py-2 px-5 rounded-md text-center text-xl font-semibold\">\n                                <Link to={path('/')}>{_t('back')}</Link>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </ClientOnly>\n        );\n    }\n    return (\n        <ClientOnly>\n            <div className=\"mt-10 rounded p-10  mx-auto\">\n                <div className=\"flex mb-4 justify-between\">\n                    <h1 className=\"font-bold text-2xl\">Cart</h1>\n                    {loading && (\n                        <div className=\"flex items-center\">\n                            <span className=\"pr-2\">{_t('loading')}...</span>\n                            <div className=\"loader\" />\n                        </div>\n                    )}\n                </div>\n                <div className=\"flex flex-col gap-3 min-h-[200px] \">\n                    {isImmutable() && <CloneCartBtn />}\n                    {!cart && <OptimisticHydratedCart />}\n                    {cart &&\n                        cart.items.map((item: CartItem, index: number) => {\n                            const saving = savings[item.variant.sku]?.quantity > 0 ? savings[item.variant.sku] : null;\n                            return (\n                                <div\n                                    key={index}\n                                    className=\"flex justify-between bg-grey2 py-5 pr-10 pl-5 items-center rounded-lg \"\n                                >\n                                    <div className=\"flex cart-item gap-3 items-center\">\n                                        <Image\n                                            {...item.variant.firstImage}\n                                            sizes=\"100px\"\n                                            loading=\"lazy\"\n                                            alt={item.variant.name}\n                                        />\n                                        <div className=\"flex flex-col\">\n                                            <p className=\"text-xl font-semibold w-full\">{item.variant.name}</p>\n                                            <CartItemPrice item={item} saving={saving} />\n                                        </div>\n                                    </div>\n                                    <div className=\"flex flex-col w-[40px] items-center justify-center gap-3\">\n                                        {!isImmutable() && (\n                                            <button\n                                                className=\"font-semibold w-[25px] h-[25px] rounded-sm\"\n                                                onClick={() => {\n                                                    addToCart({\n                                                        sku: item.variant.sku,\n                                                        name: item.variant.name!,\n                                                        price: item.variant.price!,\n                                                    });\n                                                }}\n                                            >\n                                                {' '}\n                                                +{' '}\n                                            </button>\n                                        )}\n\n                                        <p className=\"text-center font-bold \">{item.quantity}</p>\n                                        {!isImmutable() && (\n                                            <button\n                                                className=\"font-semibold w-[25px] h-[25px] rounded-sm\"\n                                                onClick={() => {\n                                                    removeFromCart(item.variant);\n                                                }}\n                                            >\n                                                {' '}\n                                                {item.quantity === 1 ? (\n                                                    <img src={trashIcon} width=\"25\" height=\"25\" alt=\"Trash icon\" />\n                                                ) : (\n                                                    '-'\n                                                )}{' '}\n                                            </button>\n                                        )}\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    <div className=\"flex justify-between gap-5\">\n                        <VoucherForm />\n                        <div>\n                            {total && (\n                                <div className=\"flex flex-col gap-2 border-b-2 border-grey4 py-4 items-end\">\n                                    <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                                        <p>{_t('cart.discount')}</p>\n                                        <CrystallizePrice currencyCode={contextState.currency.code}>\n                                            {total.discounts\n                                                ? total.discounts.reduce((memo: number, discount: any) => {\n                                                      return memo + (discount?.amount || 0)!;\n                                                  }, 0)\n                                                : 0}\n                                        </CrystallizePrice>\n                                    </div>\n                                    <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                                        <p>{_t('cart.taxAmount')}</p>\n                                        <CrystallizePrice currencyCode={contextState.currency.code}>\n                                            {total.taxAmount}\n                                        </CrystallizePrice>\n                                    </div>\n                                    {voucher && voucher.code !== '' && (\n                                        <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                                            <p>{_t('cart.voucherCode')}</p>\n                                            <span>{voucher.code}</span>\n                                        </div>\n                                    )}\n                                    <div className=\"flex font-bold mt-2 text-lg justify-between w-60 items-end\">\n                                        <p>{_t('cart.toPay')}</p>\n                                        <CrystallizePrice currencyCode={contextState.currency.code}>\n                                            {total.gross}\n                                        </CrystallizePrice>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex justify-between mt-10\">\n                    <button className=\"bg-grey py-2 px-5 rounded-md text-center font-semibold\">\n                        <Link to={path('/')}>{_t('back')}</Link>\n                    </button>\n                    <button\n                        data-testid=\"checkout-button\"\n                        className=\"bg-[#000] px-10 py-3 rounded text-[#fff] font-bold hover:bg-black-100\"\n                    >\n                        <Link to={path('/checkout')}>{_t('checkout')}</Link>\n                    </button>\n                </div>\n            </div>\n        </ClientOnly>\n    );\n};\n\nexport const OptimisticHydratedCart: React.FC = () => {\n    const { cart: cart, isImmutable } = useLocalCart();\n    const { state: contextState, _t } = useAppContext();\n    let total = 0;\n    return (\n        <>\n            {Object.keys(cart.items).map((sku: string, index: number) => {\n                const item = cart.items[sku as keyof typeof cart];\n                total += item.quantity * item.price;\n                return (\n                    <div key={index} className=\"flex justify-between bg-grey2 py-5 pr-10 pl-5 items-center rounded-lg \">\n                        <div className=\"flex cart-item gap-3 items-center\">\n                            <Image />\n                            <div className=\"flex flex-col\">\n                                <p className=\"text-xl font-semibold w-full\">{item.name}</p>\n                                <CrystallizePrice currencyCode={contextState.currency.code}>\n                                    {item.price}\n                                </CrystallizePrice>\n                            </div>\n                        </div>\n                        <div className=\"flex flex-col w-[40px] items-center justify-center gap-3\">\n                            {!isImmutable() && (\n                                <button className=\"font-semibold w-[25px] h-[25px] rounded-sm\" disabled>\n                                    {' '}\n                                    +{' '}\n                                </button>\n                            )}\n\n                            <p className=\"text-center font-bold \">{item.quantity}</p>\n                            {!isImmutable() && (\n                                <button className=\"font-semibold w-[25px] h-[25px] rounded-sm\" disabled>\n                                    {' '}\n                                    {item.quantity === 1 ? (\n                                        <img src={trashIcon} width=\"25\" height=\"25\" alt=\"Trash icon\" />\n                                    ) : (\n                                        '-'\n                                    )}{' '}\n                                </button>\n                            )}\n                        </div>\n                    </div>\n                );\n            })}\n            <div className=\"flex flex-col gap-2 border-b-2 border-grey4 py-4 items-end\">\n                <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                    <p>{_t('cart.discount')}</p>\n                    <div className=\"loader\" />\n                </div>\n                <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                    <p>{_t('cart.taxAmount')}</p>\n                    <div className=\"loader\" />\n                </div>\n                <div className=\"flex font-bold mt-2 text-lg justify-between w-60 items-end\">\n                    <p>{_t('cart.toPay')}</p>\n                    <p>\n                        <CrystallizePrice currencyCode={contextState.currency.code}>{total}</CrystallizePrice>\n                    </p>\n                </div>\n            </div>\n        </>\n    );\n};\n", "'use client';\n\nimport { ClientOnly } from '@crystallize/reactjs-hooks';\nimport { useState } from 'react';\nimport { useAppContext } from '../app-context/provider';\nimport { useLocalCart } from '../hooks/useLocalCart';\nimport { useRemoteCart } from '../hooks/useRemoteCart';\nimport { Input } from './input';\n\nexport const VoucherForm: React.FC = () => {\n    const { cart: localCart, setVoucher } = useLocalCart();\n    const { loading } = useRemoteCart();\n    const [voucherValue, setVoucherValue] = useState(localCart?.extra?.voucher ?? '');\n    const { _t } = useAppContext();\n\n    return (\n        <ClientOnly>\n            <div className=\"flex flex-col w-full\">\n                <Input\n                    type=\"text\"\n                    name=\"voucher\"\n                    label=\"Coupon Code\"\n                    placeholder={_t('cart.voucherCode')}\n                    onChange={(event) => {\n                        setVoucherValue(event.target.value);\n                    }}\n                    value={voucherValue}\n                />\n                <div className=\"flex gap-2 items-end\">\n                    <button\n                        type=\"button\"\n                        disabled={loading}\n                        className=\"bg-[#000] text-[#fff] px-2 py-1 rounded mt-5 text-center h-10\"\n                        onClick={() => {\n                            setVoucher(voucherValue);\n                        }}\n                    >\n                        {loading && localCart?.extra?.voucher ? _t('loading') : _t('cart.useVoucher')}\n                    </button>\n                    {!loading && voucherValue !== '' && (\n                        <button\n                            type=\"button\"\n                            className=\"bg-grey py-2 px-5 rounded-md text-center\"\n                            onClick={() => {\n                                setVoucherValue('');\n                                setVoucher('');\n                            }}\n                        >\n                            {_t('delete')}\n                        </button>\n                    )}\n                </div>\n            </div>\n        </ClientOnly>\n    );\n};\n", "import { HydratedCart } from '../components/cart';\n\nexport default () => {\n    return (\n        <div className=\"lg:w-content mx-auto w-full min-h-[90vh]\">\n            <HydratedCart />\n        </div>\n    );\n};\n", "import { HeadersFunction, json, LoaderFunction, MetaFunction, Response } from '@remix-run/node';\nimport { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/use-cases/storefront.server';\nimport { CrystallizeAPI } from '~/use-cases/crystallize/read';\nimport { useLoaderData } from '@remix-run/react';\nimport { buildMetas } from '~/use-cases/MicrodataBuilder';\nimport Product from '~/ui/pages/Product';\nimport Category from '~/ui/pages/Category';\nimport AbstractStory from '~/ui/pages/AbstractStory';\nimport Topic from '~/ui/pages/Topic';\nimport LandingPage from '~/ui/pages/LandingPage';\nimport dataFetcherForShapePage from '~/use-cases/dataFetcherForShapePage.server';\nimport Stories from '~/ui/pages/Stories';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n    return buildMetas(data);\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const { shared, secret } = await getStoreFront(requestContext.host);\n    const path = '/' + params['*'];\n    const crystallizePath = path.replace('.pdf', '');\n    const api = CrystallizeAPI({\n        apiClient: secret.apiClient,\n        language: requestContext.language,\n        isPreview: requestContext.isPreview,\n    });\n    const shapeData = await api.fetchShapeIdentifier(path);\n    const shapeIdentifier = shapeData?.shape?.identifier || '_topic';\n\n    if (!shapeIdentifier) {\n        throw new Response('Not Found', {\n            status: 404,\n        });\n    }\n\n    const data = await dataFetcherForShapePage(shapeIdentifier, path, requestContext, params);\n\n    return json(\n        { shapeIdentifier, data },\n        StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier),\n    );\n};\n\nexport default () => {\n    const { data, shapeIdentifier } = useLoaderData();\n    switch (shapeIdentifier) {\n        case 'product':\n            return <Product data={data} />;\n        case 'category':\n            return <Category data={data} />;\n        case 'folder':\n            return <Stories folder={data} />;\n        case 'abstract-story':\n        case 'story':\n        case 'curated-product-story':\n            return <AbstractStory data={data} />;\n        case '_topic':\n            return <Topic data={data} />;\n        case 'landing-page':\n            return <LandingPage data={data} />;\n        default:\n            return <p>There is no renderer for that page</p>;\n    }\n};\n", "import { FilteredProducts } from '../components/search/filtered-products';\nimport { SearchByTopicsProductList } from '../../use-cases/contracts/Product';\nimport { Topic } from '../../use-cases/contracts/Topic';\n\nexport default ({ data }: { data: SearchByTopicsProductList & { topic?: Topic } }) => {\n    const { products, topics, topic } = data;\n    let topicName = topic?.name || topic?.path;\n    return (\n        <div className=\"container 2xl mx-auto px-6 mt-10\">\n            <h1 className=\"capitalize font-bold text-4xl\">{topicName}</h1>\n            <FilteredProducts products={products} />\n        </div>\n    );\n};\n", "import { LoaderFunction, redirect } from '@remix-run/node';\nimport { availableLanguages } from '~/use-cases/LanguageAndMarket';\nexport const loader: LoaderFunction = async () => {\n    return redirect('/' + availableLanguages[0], 301);\n};\n", "import { LoaderFunction, redirect } from '@remix-run/node';\nimport { availableLanguages } from '~/use-cases/LanguageAndMarket';\nexport const loader: LoaderFunction = async ({ params }) => {\n    return redirect('/' + availableLanguages[0] + '/' + params['*'], 301);\n};\n", "export default {'version':'89386e0c','entry':{'module':'/build/entry.client-JHIJYYML.js','imports':['/build/_shared/chunk-64LRZXR7.js','/build/_shared/chunk-5KL4PAQL.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-ZHCU3JBU.js','imports':['/build/_shared/chunk-CELXM3NX.js','/build/_shared/chunk-ZPRQRGJ3.js','/build/_shared/chunk-PYUR3WRV.js','/build/_shared/chunk-FWGEG64T.js','/build/_shared/chunk-IT65YA5I.js','/build/_shared/chunk-TXWPUBIR.js','/build/_shared/chunk-K5YNWDLS.js','/build/_shared/chunk-MLSCEX23.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/$':{'id':'routes/$','parentId':'root','path':'*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$-PIBUPWSW.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/$':{'id':'routes/$langstore/$','parentId':'root','path':':langstore/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/$-AV26IPKU.js','imports':['/build/_shared/chunk-BWKRT6M4.js','/build/_shared/chunk-WF337T3R.js','/build/_shared/chunk-GQZD47CF.js','/build/_shared/chunk-L3YX62BQ.js','/build/_shared/chunk-MJHY7UV4.js','/build/_shared/chunk-2SD5ZLCG.js','/build/_shared/chunk-FXIJPGLV.js','/build/_shared/chunk-QS35ZOTM.js','/build/_shared/chunk-4JMIBMU2.js','/build/_shared/chunk-ZBLJWAFU.js','/build/_shared/chunk-J4L6SBWJ.js','/build/_shared/chunk-ZA4JU7LQ.js','/build/_shared/chunk-M4DROQDU.js','/build/_shared/chunk-JHVSQUXW.js','/build/_shared/chunk-WIKNINWC.js','/build/_shared/chunk-KXAEAUFG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/api/cart/$id':{'id':'routes/$langstore/api/cart/$id','parentId':'root','path':':langstore/api/cart/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/api/cart/$id-ILK2XNGD.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/api/cart/index':{'id':'routes/$langstore/api/cart/index','parentId':'root','path':':langstore/api/cart','index':true,'caseSensitive':undefined,'module':'/build/routes/$langstore/api/cart/index-O2PIW5QK.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/api/cart/place':{'id':'routes/$langstore/api/cart/place','parentId':'root','path':':langstore/api/cart/place','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/api/cart/place-7O4XC26S.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/api/magicklink/confirm.$token':{'id':'routes/$langstore/api/magicklink/confirm.$token','parentId':'root','path':':langstore/api/magicklink/confirm/:token','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/api/magicklink/confirm.$token-U7P3H4L6.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/api/magicklink/register':{'id':'routes/$langstore/api/magicklink/register','parentId':'root','path':':langstore/api/magicklink/register','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/api/magicklink/register-RVJVFT37.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/api/orders/$id':{'id':'routes/$langstore/api/orders/$id','parentId':'root','path':':langstore/api/orders/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/api/orders/$id-EVEOAEWQ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/api/orders/index':{'id':'routes/$langstore/api/orders/index','parentId':'root','path':':langstore/api/orders','index':true,'caseSensitive':undefined,'module':'/build/routes/$langstore/api/orders/index-SLBIU6JL.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/api/payment/$provider.buynow':{'id':'routes/$langstore/api/payment/$provider.buynow','parentId':'root','path':':langstore/api/payment/:provider/buynow','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/api/payment/$provider.buynow-EIUAG47X.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/api/payment/$provider.create':{'id':'routes/$langstore/api/payment/$provider.create','parentId':'root','path':':langstore/api/payment/:provider/create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/api/payment/$provider.create-NEOUK322.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/api/payment/$provider.payment-methods':{'id':'routes/$langstore/api/payment/$provider.payment-methods','parentId':'root','path':':langstore/api/payment/:provider/payment-methods','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/api/payment/$provider.payment-methods-UQLVLVKM.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/api/payment/crystal.$type.confirmed':{'id':'routes/$langstore/api/payment/crystal.$type.confirmed','parentId':'root','path':':langstore/api/payment/crystal/:type/confirmed','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/api/payment/crystal.$type.confirmed-TJ4C2KMF.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/api/shipping/$provider.pickup-points':{'id':'routes/$langstore/api/shipping/$provider.pickup-points','parentId':'root','path':':langstore/api/shipping/:provider/pickup-points','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/api/shipping/$provider.pickup-points-KAN2MEEM.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/api/vipps/connect':{'id':'routes/$langstore/api/vipps/connect','parentId':'root','path':':langstore/api/vipps/connect','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/api/vipps/connect-FO5LQQ6G.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/cancel-payment':{'id':'routes/$langstore/cancel-payment','parentId':'root','path':':langstore/cancel-payment','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/cancel-payment-MZ62OPKH.js','imports':['/build/_shared/chunk-M5WHQPZJ.js','/build/_shared/chunk-KXAEAUFG.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/cart':{'id':'routes/$langstore/cart','parentId':'root','path':':langstore/cart','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/cart-H3WN6MFH.js','imports':['/build/_shared/chunk-376PINKU.js','/build/_shared/chunk-M5WHQPZJ.js','/build/_shared/chunk-KXAEAUFG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/checkout':{'id':'routes/$langstore/checkout','parentId':'root','path':':langstore/checkout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/checkout-VT6DDIEV.js','imports':['/build/_shared/chunk-FXIJPGLV.js','/build/_shared/chunk-3Q52FFO7.js','/build/_shared/chunk-QZ6OK26E.js','/build/_shared/chunk-376PINKU.js','/build/_shared/chunk-QS35ZOTM.js','/build/_shared/chunk-M5WHQPZJ.js','/build/_shared/chunk-4JMIBMU2.js','/build/_shared/chunk-4EWYNZXX.js','/build/_shared/chunk-KXAEAUFG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/favicon/$size[.png]':{'id':'routes/$langstore/favicon/$size[.png]','parentId':'root','path':':langstore/favicon/:size.png','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/favicon/$size[.png]-JZ26RVBY.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/index':{'id':'routes/$langstore/index','parentId':'root','path':':langstore','index':true,'caseSensitive':undefined,'module':'/build/routes/$langstore/index-KZR7UQ3K.js','imports':['/build/_shared/chunk-BWKRT6M4.js','/build/_shared/chunk-3CHZUQSG.js','/build/_shared/chunk-MJHY7UV4.js','/build/_shared/chunk-2SD5ZLCG.js','/build/_shared/chunk-LUFSLTAB.js','/build/_shared/chunk-M4DROQDU.js','/build/_shared/chunk-JHVSQUXW.js','/build/_shared/chunk-WIKNINWC.js','/build/_shared/chunk-4EWYNZXX.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/order/$id':{'id':'routes/$langstore/order/$id','parentId':'root','path':':langstore/order/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/order/$id-A5B4ICUI.js','imports':['/build/_shared/chunk-QZ6OK26E.js','/build/_shared/chunk-376PINKU.js','/build/_shared/chunk-QS35ZOTM.js','/build/_shared/chunk-KXAEAUFG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/order/cart.$id':{'id':'routes/$langstore/order/cart.$id','parentId':'root','path':':langstore/order/cart/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/order/cart.$id-VXLLYY7I.js','imports':['/build/_shared/chunk-4JMIBMU2.js','/build/_shared/chunk-KXAEAUFG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/order/invoice.$id[.]pdf':{'id':'routes/$langstore/order/invoice.$id[.]pdf','parentId':'root','path':':langstore/order/invoice/:id.pdf','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/order/invoice.$id[.]pdf-ODYUTPQX.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/orders':{'id':'routes/$langstore/orders','parentId':'root','path':':langstore/orders','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/orders-HZKVJGNG.js','imports':['/build/_shared/chunk-3Q52FFO7.js','/build/_shared/chunk-QZ6OK26E.js','/build/_shared/chunk-376PINKU.js','/build/_shared/chunk-QS35ZOTM.js','/build/_shared/chunk-4EWYNZXX.js','/build/_shared/chunk-KXAEAUFG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/search':{'id':'routes/$langstore/search','parentId':'root','path':':langstore/search','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/search-ASTJDN3H.js','imports':['/build/_shared/chunk-L3YX62BQ.js','/build/_shared/chunk-WIKNINWC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/shop/$folder':{'id':'routes/$langstore/shop/$folder','parentId':'root','path':':langstore/shop/:folder','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/shop/$folder-5JJ5YTR6.js','imports':['/build/_shared/chunk-GQZD47CF.js','/build/_shared/chunk-L3YX62BQ.js','/build/_shared/chunk-3CHZUQSG.js','/build/_shared/chunk-MJHY7UV4.js','/build/_shared/chunk-2SD5ZLCG.js','/build/_shared/chunk-FXIJPGLV.js','/build/_shared/chunk-QS35ZOTM.js','/build/_shared/chunk-4JMIBMU2.js','/build/_shared/chunk-LUFSLTAB.js','/build/_shared/chunk-M4DROQDU.js','/build/_shared/chunk-JHVSQUXW.js','/build/_shared/chunk-WIKNINWC.js','/build/_shared/chunk-4EWYNZXX.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/shop/$folder.$product':{'id':'routes/$langstore/shop/$folder.$product','parentId':'root','path':':langstore/shop/:folder/:product','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/shop/$folder.$product-YATKACIE.js','imports':['/build/_shared/chunk-J4L6SBWJ.js','/build/_shared/chunk-LUFSLTAB.js','/build/_shared/chunk-ZA4JU7LQ.js','/build/_shared/chunk-M4DROQDU.js','/build/_shared/chunk-JHVSQUXW.js','/build/_shared/chunk-WIKNINWC.js','/build/_shared/chunk-4EWYNZXX.js','/build/_shared/chunk-KXAEAUFG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/shop/$folder.$product[.]pdf':{'id':'routes/$langstore/shop/$folder.$product[.]pdf','parentId':'root','path':':langstore/shop/:folder/:product.pdf','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/shop/$folder.$product[.]pdf-7V6YLAXZ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/shop/$folder[.]pdf':{'id':'routes/$langstore/shop/$folder[.]pdf','parentId':'root','path':':langstore/shop/:folder.pdf','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/shop/$folder[.]pdf-4PT2BAXZ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/shop/index':{'id':'routes/$langstore/shop/index','parentId':'root','path':':langstore/shop','index':true,'caseSensitive':undefined,'module':'/build/routes/$langstore/shop/index-XX2LTHG7.js','imports':['/build/_shared/chunk-3CHZUQSG.js','/build/_shared/chunk-MJHY7UV4.js','/build/_shared/chunk-2SD5ZLCG.js','/build/_shared/chunk-JHVSQUXW.js','/build/_shared/chunk-WIKNINWC.js','/build/_shared/chunk-4EWYNZXX.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/stories/$story':{'id':'routes/$langstore/stories/$story','parentId':'root','path':':langstore/stories/:story','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$langstore/stories/$story-BY3XI7ID.js','imports':['/build/_shared/chunk-ZBLJWAFU.js','/build/_shared/chunk-ZA4JU7LQ.js','/build/_shared/chunk-M4DROQDU.js','/build/_shared/chunk-JHVSQUXW.js','/build/_shared/chunk-WIKNINWC.js','/build/_shared/chunk-4EWYNZXX.js','/build/_shared/chunk-KXAEAUFG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$langstore/stories/index':{'id':'routes/$langstore/stories/index','parentId':'root','path':':langstore/stories','index':true,'caseSensitive':undefined,'module':'/build/routes/$langstore/stories/index-55Z7PPJL.js','imports':['/build/_shared/chunk-WF337T3R.js','/build/_shared/chunk-2SD5ZLCG.js','/build/_shared/chunk-JHVSQUXW.js','/build/_shared/chunk-WIKNINWC.js','/build/_shared/chunk-4EWYNZXX.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/webhook/cache/purge':{'id':'routes/api/webhook/cache/purge','parentId':'root','path':'api/webhook/cache/purge','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/webhook/cache/purge-HKG7KQU7.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/webhook/order/created':{'id':'routes/api/webhook/order/created','parentId':'root','path':'api/webhook/order/created','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/webhook/order/created-A5BGVWRF.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/webhook/order/stage/changed':{'id':'routes/api/webhook/order/stage/changed','parentId':'root','path':'api/webhook/order/stage/changed','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/webhook/order/stage/changed-PTLP32TB.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/webhook/payment/adyen':{'id':'routes/api/webhook/payment/adyen','parentId':'root','path':'api/webhook/payment/adyen','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/webhook/payment/adyen-XJZFGZQG.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/webhook/payment/intent':{'id':'routes/api/webhook/payment/intent','parentId':'root','path':'api/webhook/payment/intent','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/webhook/payment/intent-BEADEPQO.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/webhook/payment/klarna.$cartId':{'id':'routes/api/webhook/payment/klarna.$cartId','parentId':'root','path':'api/webhook/payment/klarna/:cartId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/webhook/payment/klarna.$cartId-4Z62UUE2.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/webhook/payment/montonio':{'id':'routes/api/webhook/payment/montonio','parentId':'root','path':'api/webhook/payment/montonio','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/webhook/payment/montonio-ZEN3TNBE.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/webhook/payment/quickpay':{'id':'routes/api/webhook/payment/quickpay','parentId':'root','path':'api/webhook/payment/quickpay','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/webhook/payment/quickpay-K2BLP2VX.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/webhook/payment/razorpay.verify':{'id':'routes/api/webhook/payment/razorpay.verify','parentId':'root','path':'api/webhook/payment/razorpay/verify','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/webhook/payment/razorpay.verify-4N7WQ76S.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/webhook/payment/stripe':{'id':'routes/api/webhook/payment/stripe','parentId':'root','path':'api/webhook/payment/stripe','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/webhook/payment/stripe-67DXUH2S.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api/webhook/payment/vipps.v2.payments.$cartId':{'id':'routes/api/webhook/payment/vipps.v2.payments.$cartId','parentId':'root','path':'api/webhook/payment/vipps/v2/payments/:cartId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api/webhook/payment/vipps.v2.payments.$cartId-EB4UGPDK.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-IBPJR7UM.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-89386E0C.js'};", "\nimport * as entryServer from \"/Users/ragog/repositories/vercel-frntr/remix-run/application/src/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/$langstore/api/payment/$provider.payment-methods.tsx\";\nimport * as route2 from \"./routes/$langstore/api/shipping/$provider.pickup-points.ts\";\nimport * as route3 from \"./routes/$langstore/api/payment/crystal.$type.confirmed.tsx\";\nimport * as route4 from \"./routes/api/webhook/payment/vipps.v2.payments.$cartId.tsx\";\nimport * as route5 from \"./routes/$langstore/api/magicklink/confirm.$token.tsx\";\nimport * as route6 from \"./routes/$langstore/api/payment/$provider.buynow.tsx\";\nimport * as route7 from \"./routes/$langstore/api/payment/$provider.create.tsx\";\nimport * as route8 from \"./routes/$langstore/shop/$folder.$product[.]pdf.tsx\";\nimport * as route9 from \"./routes/api/webhook/payment/razorpay.verify.tsx\";\nimport * as route10 from \"./routes/$langstore/api/magicklink/register.tsx\";\nimport * as route11 from \"./routes/$langstore/order/invoice.$id[.]pdf.tsx\";\nimport * as route12 from \"./routes/api/webhook/payment/klarna.$cartId.tsx\";\nimport * as route13 from \"./routes/$langstore/shop/$folder.$product.tsx\";\nimport * as route14 from \"./routes/api/webhook/order/stage/changed.tsx\";\nimport * as route15 from \"./routes/$langstore/favicon/$size[.png].ts\";\nimport * as route16 from \"./routes/$langstore/shop/$folder[.]pdf.tsx\";\nimport * as route17 from \"./routes/$langstore/api/vipps/connect.tsx\";\nimport * as route18 from \"./routes/api/webhook/payment/montonio.tsx\";\nimport * as route19 from \"./routes/api/webhook/payment/quickpay.tsx\";\nimport * as route20 from \"./routes/$langstore/api/orders/index.tsx\";\nimport * as route21 from \"./routes/api/webhook/payment/intent.tsx\";\nimport * as route22 from \"./routes/api/webhook/payment/stripe.tsx\";\nimport * as route23 from \"./routes/$langstore/api/cart/index.tsx\";\nimport * as route24 from \"./routes/$langstore/api/cart/place.tsx\";\nimport * as route25 from \"./routes/$langstore/api/orders/$id.tsx\";\nimport * as route26 from \"./routes/$langstore/cancel-payment.tsx\";\nimport * as route27 from \"./routes/$langstore/order/cart.$id.tsx\";\nimport * as route28 from \"./routes/$langstore/stories/$story.tsx\";\nimport * as route29 from \"./routes/api/webhook/order/created.tsx\";\nimport * as route30 from \"./routes/api/webhook/payment/adyen.tsx\";\nimport * as route31 from \"./routes/$langstore/stories/index.tsx\";\nimport * as route32 from \"./routes/$langstore/api/cart/$id.tsx\";\nimport * as route33 from \"./routes/$langstore/shop/$folder.tsx\";\nimport * as route34 from \"./routes/api/webhook/cache/purge.tsx\";\nimport * as route35 from \"./routes/$langstore/shop/index.tsx\";\nimport * as route36 from \"./routes/$langstore/order/$id.tsx\";\nimport * as route37 from \"./routes/$langstore/checkout.tsx\";\nimport * as route38 from \"./routes/$langstore/orders.tsx\";\nimport * as route39 from \"./routes/$langstore/search.tsx\";\nimport * as route40 from \"./routes/$langstore/index.tsx\";\nimport * as route41 from \"./routes/$langstore/cart.tsx\";\nimport * as route42 from \"./routes/$langstore/$.tsx\";\nimport * as route43 from \"./routes/index.tsx\";\nimport * as route44 from \"./routes/$.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":false,\"v2_meta\":false,\"v2_routeConvention\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/$langstore/api/payment/$provider.payment-methods\": {\n      id: \"routes/$langstore/api/payment/$provider.payment-methods\",\n      parentId: \"root\",\n      path: \":langstore/api/payment/:provider/payment-methods\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/$langstore/api/shipping/$provider.pickup-points\": {\n      id: \"routes/$langstore/api/shipping/$provider.pickup-points\",\n      parentId: \"root\",\n      path: \":langstore/api/shipping/:provider/pickup-points\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/$langstore/api/payment/crystal.$type.confirmed\": {\n      id: \"routes/$langstore/api/payment/crystal.$type.confirmed\",\n      parentId: \"root\",\n      path: \":langstore/api/payment/crystal/:type/confirmed\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/api/webhook/payment/vipps.v2.payments.$cartId\": {\n      id: \"routes/api/webhook/payment/vipps.v2.payments.$cartId\",\n      parentId: \"root\",\n      path: \"api/webhook/payment/vipps/v2/payments/:cartId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/$langstore/api/magicklink/confirm.$token\": {\n      id: \"routes/$langstore/api/magicklink/confirm.$token\",\n      parentId: \"root\",\n      path: \":langstore/api/magicklink/confirm/:token\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/$langstore/api/payment/$provider.buynow\": {\n      id: \"routes/$langstore/api/payment/$provider.buynow\",\n      parentId: \"root\",\n      path: \":langstore/api/payment/:provider/buynow\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/$langstore/api/payment/$provider.create\": {\n      id: \"routes/$langstore/api/payment/$provider.create\",\n      parentId: \"root\",\n      path: \":langstore/api/payment/:provider/create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/$langstore/shop/$folder.$product[.]pdf\": {\n      id: \"routes/$langstore/shop/$folder.$product[.]pdf\",\n      parentId: \"root\",\n      path: \":langstore/shop/:folder/:product.pdf\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/api/webhook/payment/razorpay.verify\": {\n      id: \"routes/api/webhook/payment/razorpay.verify\",\n      parentId: \"root\",\n      path: \"api/webhook/payment/razorpay/verify\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/$langstore/api/magicklink/register\": {\n      id: \"routes/$langstore/api/magicklink/register\",\n      parentId: \"root\",\n      path: \":langstore/api/magicklink/register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/$langstore/order/invoice.$id[.]pdf\": {\n      id: \"routes/$langstore/order/invoice.$id[.]pdf\",\n      parentId: \"root\",\n      path: \":langstore/order/invoice/:id.pdf\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/api/webhook/payment/klarna.$cartId\": {\n      id: \"routes/api/webhook/payment/klarna.$cartId\",\n      parentId: \"root\",\n      path: \"api/webhook/payment/klarna/:cartId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/$langstore/shop/$folder.$product\": {\n      id: \"routes/$langstore/shop/$folder.$product\",\n      parentId: \"root\",\n      path: \":langstore/shop/:folder/:product\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/api/webhook/order/stage/changed\": {\n      id: \"routes/api/webhook/order/stage/changed\",\n      parentId: \"root\",\n      path: \"api/webhook/order/stage/changed\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/$langstore/favicon/$size[.png]\": {\n      id: \"routes/$langstore/favicon/$size[.png]\",\n      parentId: \"root\",\n      path: \":langstore/favicon/:size.png\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/$langstore/shop/$folder[.]pdf\": {\n      id: \"routes/$langstore/shop/$folder[.]pdf\",\n      parentId: \"root\",\n      path: \":langstore/shop/:folder.pdf\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/$langstore/api/vipps/connect\": {\n      id: \"routes/$langstore/api/vipps/connect\",\n      parentId: \"root\",\n      path: \":langstore/api/vipps/connect\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/api/webhook/payment/montonio\": {\n      id: \"routes/api/webhook/payment/montonio\",\n      parentId: \"root\",\n      path: \"api/webhook/payment/montonio\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/api/webhook/payment/quickpay\": {\n      id: \"routes/api/webhook/payment/quickpay\",\n      parentId: \"root\",\n      path: \"api/webhook/payment/quickpay\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/$langstore/api/orders/index\": {\n      id: \"routes/$langstore/api/orders/index\",\n      parentId: \"root\",\n      path: \":langstore/api/orders\",\n      index: true,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/api/webhook/payment/intent\": {\n      id: \"routes/api/webhook/payment/intent\",\n      parentId: \"root\",\n      path: \"api/webhook/payment/intent\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/api/webhook/payment/stripe\": {\n      id: \"routes/api/webhook/payment/stripe\",\n      parentId: \"root\",\n      path: \"api/webhook/payment/stripe\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/$langstore/api/cart/index\": {\n      id: \"routes/$langstore/api/cart/index\",\n      parentId: \"root\",\n      path: \":langstore/api/cart\",\n      index: true,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/$langstore/api/cart/place\": {\n      id: \"routes/$langstore/api/cart/place\",\n      parentId: \"root\",\n      path: \":langstore/api/cart/place\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/$langstore/api/orders/$id\": {\n      id: \"routes/$langstore/api/orders/$id\",\n      parentId: \"root\",\n      path: \":langstore/api/orders/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/$langstore/cancel-payment\": {\n      id: \"routes/$langstore/cancel-payment\",\n      parentId: \"root\",\n      path: \":langstore/cancel-payment\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route26\n    },\n  \"routes/$langstore/order/cart.$id\": {\n      id: \"routes/$langstore/order/cart.$id\",\n      parentId: \"root\",\n      path: \":langstore/order/cart/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route27\n    },\n  \"routes/$langstore/stories/$story\": {\n      id: \"routes/$langstore/stories/$story\",\n      parentId: \"root\",\n      path: \":langstore/stories/:story\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route28\n    },\n  \"routes/api/webhook/order/created\": {\n      id: \"routes/api/webhook/order/created\",\n      parentId: \"root\",\n      path: \"api/webhook/order/created\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route29\n    },\n  \"routes/api/webhook/payment/adyen\": {\n      id: \"routes/api/webhook/payment/adyen\",\n      parentId: \"root\",\n      path: \"api/webhook/payment/adyen\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route30\n    },\n  \"routes/$langstore/stories/index\": {\n      id: \"routes/$langstore/stories/index\",\n      parentId: \"root\",\n      path: \":langstore/stories\",\n      index: true,\n      caseSensitive: undefined,\n      module: route31\n    },\n  \"routes/$langstore/api/cart/$id\": {\n      id: \"routes/$langstore/api/cart/$id\",\n      parentId: \"root\",\n      path: \":langstore/api/cart/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route32\n    },\n  \"routes/$langstore/shop/$folder\": {\n      id: \"routes/$langstore/shop/$folder\",\n      parentId: \"root\",\n      path: \":langstore/shop/:folder\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route33\n    },\n  \"routes/api/webhook/cache/purge\": {\n      id: \"routes/api/webhook/cache/purge\",\n      parentId: \"root\",\n      path: \"api/webhook/cache/purge\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route34\n    },\n  \"routes/$langstore/shop/index\": {\n      id: \"routes/$langstore/shop/index\",\n      parentId: \"root\",\n      path: \":langstore/shop\",\n      index: true,\n      caseSensitive: undefined,\n      module: route35\n    },\n  \"routes/$langstore/order/$id\": {\n      id: \"routes/$langstore/order/$id\",\n      parentId: \"root\",\n      path: \":langstore/order/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route36\n    },\n  \"routes/$langstore/checkout\": {\n      id: \"routes/$langstore/checkout\",\n      parentId: \"root\",\n      path: \":langstore/checkout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route37\n    },\n  \"routes/$langstore/orders\": {\n      id: \"routes/$langstore/orders\",\n      parentId: \"root\",\n      path: \":langstore/orders\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route38\n    },\n  \"routes/$langstore/search\": {\n      id: \"routes/$langstore/search\",\n      parentId: \"root\",\n      path: \":langstore/search\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route39\n    },\n  \"routes/$langstore/index\": {\n      id: \"routes/$langstore/index\",\n      parentId: \"root\",\n      path: \":langstore\",\n      index: true,\n      caseSensitive: undefined,\n      module: route40\n    },\n  \"routes/$langstore/cart\": {\n      id: \"routes/$langstore/cart\",\n      parentId: \"root\",\n      path: \":langstore/cart\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route41\n    },\n  \"routes/$langstore/$\": {\n      id: \"routes/$langstore/$\",\n      parentId: \"root\",\n      path: \":langstore/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route42\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route43\n    },\n  \"routes/$\": {\n      id: \"routes/$\",\n      parentId: \"root\",\n      path: \"*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route44\n    }\n  };"],
  "mappings": "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EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,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",
  "names": ["isbot", "loader", "import_react", "import_node", "import_react", "import_jsx_dev_runtime", "import_react", "import_react", "action", "import_jsx_dev_runtime", "key", "import_jsx_dev_runtime", "_a", "component", "_a", "_a", "_a", "_a", "_a", "_a", "_a", "_b", "_c", "_d", "_e", "_f", "data", "_a", "_b", "_a", "_a", "meta", "_a", "_a", "_a", "_a", "_a", "_a", "import_jsx_dev_runtime", "Price", "import_jsx_dev_runtime", "_a", "Price", "cart", "item", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "_a", "import_react", "import_reactjs_components", "import_jsx_dev_runtime", "import_reactjs_components", "import_jsx_dev_runtime", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "_a", "Price", "import_reactjs_components", "import_jsx_dev_runtime", "_a", "_a", "_a", "fs", "import_js_api_client", "fetch", "import_js_api_client", "_a", "_a", "import_reactjs_hooks", "str", "loader", "_a", "_a", "sharp", "_a", "storage", "nodemailer", "import_fs", "fs", "fsWithCallbacks", "obj", "storage", "memoryStorage", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "storage", "meta", "loader", "import_node", "_a", "jwt", "loader", "storage", "loader", "import_node", "import_jsonwebtoken", "_a", "jwt", "loader", "storage", "import_node", "import_js_api_client", "import_js_api_client", "_a", "cartWrapperRepository", "_b", "cartWrapperRepository", "_a", "action", "import_node", "import_node_service_api_request_handlers", "import_node_service_api_request_handlers", "cartWrapperRepository", "_a", "cartWrapperRepository", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "action", "loader", "import_node", "import_node", "import_node_service_api_request_handlers", "loader", "action", "import_node", "import_node_service_api_request_handlers", "_a", "import_node_service_api_request_handlers", "_a", "discount", "import_js_api_client", "_a", "_a", "currency", "import_uuid", "uuidv4", "action", "uuidv4", "action", "import_node", "import_node_service_api_request_handlers", "_a", "_a", "import_node_service_api_request_handlers", "initiatePayment_default", "_a", "import_node_service_api_request_handlers", "initiatePayment_default", "_a", "import_node_service_api_request_handlers", "initiatePayment_default", "_a", "import_node_service_api_request_handlers", "initiatePayment_default", "_a", "import_node_service_api_request_handlers", "initiatePayment_default", "_a", "import_node_service_api_request_handlers", "import_uuid", "import_js_api_client", "import_node_service_api_request_handlers", "cartWrapperRepository", "initiatePayment_default", "_a", "handlingResult", "uuidv4", "action", "initiatePayment_default", "loader", "import_node", "import_renderer", "import_renderer", "import_reactjs_components", "import_renderer", "import_jsx_dev_runtime", "Price", "import_jsx_dev_runtime", "Price", "_a", "topic", "import_jsonwebtoken", "jwt", "import_jsx_dev_runtime", "loader", "ReactPDF", "action", "import_node", "import_node_service_api_request_handlers", "receivePaymentEvent_default", "_a", "cartWrapper", "action", "receivePaymentEvent_default", "action", "import_node", "import_node_service_api_request_handlers", "mjml2html", "action", "loader", "import_node", "import_renderer", "import_renderer", "import_jsx_dev_runtime", "styles", "_a", "import_js_api_client", "import_jsx_dev_runtime", "loader", "ReactPDF", "action", "import_node", "import_node_service_api_request_handlers", "receivePaymentEvent_default", "cartWrapperRepository", "_a", "action", "receivePaymentEvent_default", "headers", "links", "loader", "meta", "import_node", "import_react", "_a", "meta", "import_react", "import_react", "import_reactjs_hooks", "import_reactjs_hooks", "import_jsx_dev_runtime", "_a", "import_reactjs_components", "import_jsx_dev_runtime", "import_react", "import_reactjs_components", "import_jsx_dev_runtime", "import_react", "Product", "Price", "import_jsx_dev_runtime", "import_reactjs_components", "import_jsx_dev_runtime", "_a", "import_jsx_dev_runtime", "import_reactjs_components", "import_jsx_dev_runtime", "_a", "file", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_reactjs_components", "import_jsx_dev_runtime", "import_react", "variant", "_a", "import_jsx_dev_runtime", "Price", "Product", "import_jsx_dev_runtime", "headers", "meta", "links", "loader", "action", "import_node", "import_node_service_api_request_handlers", "_a", "action", "loader", "import_node", "import_renderer", "import_renderer", "import_jsx_dev_runtime", "_a", "Price", "import_jsx_dev_runtime", "loader", "ReactPDF", "loader", "import_node", "import_node_service_api_request_handlers", "_a", "loader", "action", "import_node", "import_node_service_api_request_handlers", "import_jsonwebtoken", "_a", "jwt", "import_jsonwebtoken", "_a", "jwt", "receivePaymentEvent_default", "cartWrapperRepository", "_a", "action", "receivePaymentEvent_default", "action", "import_node", "import_node_service_api_request_handlers", "receivePaymentEvent_default", "cartWrapperRepository", "_a", "action", "receivePaymentEvent_default", "loader", "import_js_api_client", "import_node_service_api_request_handlers", "import_node", "headers", "loader", "action", "action", "import_node", "import_node_service_api_request_handlers", "receivePaymentEvent_default", "cartWrapperRepository", "_a", "action", "receivePaymentEvent_default", "action", "action", "action", "action", "action", "_a", "isAuthenticated", "loader", "import_js_api_client", "import_node_service_api_request_handlers", "loader", "_a", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "headers", "loader", "import_node", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "_a", "import_jsx_dev_runtime", "headers", "loader", "headers", "loader", "meta", "import_node", "import_react", "import_reactjs_components", "import_reactjs_components", "import_jsx_dev_runtime", "Product", "_a", "Price", "import_react", "import_jsx_dev_runtime", "_a", "_b", "_c", "import_reactjs_components", "import_reactjs_components", "import_jsx_dev_runtime", "document", "_a", "import_jsx_dev_runtime", "_a", "Product", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "headers", "meta", "loader", "action", "import_node", "import_mjml", "_a", "mjml2html", "action", "action", "import_node", "import_node_service_api_request_handlers", "receivePaymentEvent_default", "_a", "cartWrapper", "action", "receivePaymentEvent_default", "headers", "loader", "meta", "import_node", "import_react", "import_reactjs_components", "import_reactjs_components", "import_jsx_dev_runtime", "import_react", "_a", "import_jsx_dev_runtime", "import_react", "_a", "Document", "intro", "media", "import_jsx_dev_runtime", "Document", "Product", "import_jsx_dev_runtime", "headers", "meta", "loader", "id_exports", "loader", "loader", "headers", "links", "loader", "meta", "import_node", "import_react", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "Slider", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "Product", "import_reactjs_components", "import_jsx_dev_runtime", "import_reactjs_components", "import_jsx_dev_runtime", "import_reactjs_components", "import_jsx_dev_runtime", "Component", "_a", "component", "chunk", "_b", "import_reactjs_components", "import_jsx_dev_runtime", "import_reactjs_components", "import_jsx_dev_runtime", "import_reactjs_components", "import_reactjs_components", "import_jsx_dev_runtime", "_a", "import_reactjs_components", "import_jsx_dev_runtime", "Slider", "import_reactjs_components", "import_react_splide", "import_reactjs_components", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Slider", "itemMapping", "Grid", "_a", "styles", "component", "import_jsx_dev_runtime", "Grid", "import_jsx_dev_runtime", "links", "headers", "meta", "loader", "action", "import_node", "action", "headers", "links", "loader", "meta", "import_node", "import_react", "import_react_splide", "import_jsx_dev_runtime", "_a", "Product", "import_reactjs_components", "import_jsx_dev_runtime", "Grid", "_a", "import_jsx_dev_runtime", "links", "meta", "headers", "loader", "id_exports", "headers", "loader", "import_node", "import_react", "import_react", "import_reactjs_hooks", "import_jsx_dev_runtime", "import_react", "import_local_storage", "import_react", "jwtDecode", "isAuthenticated", "jwt", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "_a", "isAuthenticated", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "headers", "loader", "headers", "links", "loader", "import_react", "import_reactjs_hooks", "import_react", "import_react", "import_local_storage", "import_jsx_dev_runtime", "isAuthenticated", "import_reactjs_components", "import_reactjs_hooks", "import_jsx_dev_runtime", "_a", "import_react", "import_react", "import_local_storage", "import_jsx_dev_runtime", "import_react", "import_local_storage", "import_jsx_dev_runtime", "import_local_storage", "import_react", "import_jsx_dev_runtime", "useLocalStorage", "import_react", "import_local_storage", "import_jsx_dev_runtime", "_a", "useLocalStorage", "pickupPoints", "memo", "banks", "import_react", "import_local_storage", "import_jsx_dev_runtime", "import_local_storage", "import_react", "import_jsx_dev_runtime", "useLocalStorage", "data", "import_local_storage", "import_react", "import_jsx_dev_runtime", "useLocalStorage", "import_react", "import_local_storage", "import_jsx_dev_runtime", "useLocalStorage", "AdyenCheckout", "import_react", "import_local_storage", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "isAuthenticated", "import_jsx_dev_runtime", "headers", "loader", "links", "orders_exports", "headers", "loader", "import_react", "import_react", "import_reactjs_hooks", "import_jsx_dev_runtime", "isAuthenticated", "index", "import_jsx_dev_runtime", "headers", "loader", "search_default", "headers", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "headers", "loader", "search_default", "headers", "links", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "Grid", "import_jsx_dev_runtime", "meta", "headers", "links", "loader", "cart_exports", "headers", "loader", "import_node", "import_reactjs_hooks", "import_reactjs_components", "import_reactjs_hooks", "import_react", "import_jsx_dev_runtime", "_a", "import_jsx_dev_runtime", "_a", "OptimisticHydratedCart", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "headers", "loader", "headers", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "headers", "meta", "loader", "_a", "loader", "import_node", "loader", "__exports", "loader", "import_node", "loader", "id_exports", "orders_exports", "cart_exports", "__exports"]
}
